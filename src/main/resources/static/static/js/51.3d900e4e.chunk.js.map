{"version":3,"sources":["../node_modules/react-bootstrap/esm/Button.js","accounting/kepik/approval/helper/SortingPriorityForms.js","accounting/kepik/formtemplate/FormTemplatePage.js"],"names":["_excluded","Button","forwardRef","_ref","ref","bsPrefix","variant","size","active","className","block","type","as","props","prefix","classes","href","createElement","SafeAnchor","disabled","Component","displayName","defaultProps","SortingPriorityForms","constructor","super","this","state","priorityForms","changeSize","loading","saveFormTemplatePriorities","bind","componentDidMount","self","setState","requestK","url","method","then","response","data","catch","error","showAxiosError","i","forEach","formTemplate","params","Swal","text","confirmButtonText","result","closeSortingPriorityForms","render","columns","Header","accessor","sortable","Cell","row","index","React","style","textAlign","width","formType","category","margin","overflow","textOverflow","formName","autosend","undefined","priority","MiniButton","title","faIcon","color","onClick","length","Modal","show","showSortingPriorityForms","onHide","closeButton","Title","Body","overflowY","height","Table","loadingText","content","paginationEnabled","Footer","FormTemplatePage","videos","id","switchVideo","video","showEczaciHelpModal","getJobTitles","jobTitleOptions","jobTitleList","map","job","push","value","label","getOrganizations","options","d","name","organizationalUnitList","departments","readFormTypeAll","formTypeList","isISGU","filter","formtype","isHealthForm","isZimmet","isKVKK","sendWithoutTemplate","history","pathname","peykName","templateId","redirectToCreatePage1","sendMulti","templateIds","selection","callback","action","shouldRun","flag","joyrideActive","activateJoyride","selected","formURL","valid","alert","selectedAll","totalIdList","pageNumber","pageSize","manual","total","searching","searchQuery","page","searchKey","steps","target","placement","steps2","locale","back","close","last","next","skip","window","innerWidth","stop","fetchData","deleteRow","editClicked","createClicked","importClicked","deleteSelected","previewContent","toggleCheckboxChange","openParameters","handleSearch","searchWithKey","deleteList","setMediaViewer","selectForm","direction","e","sortStr","formSend","includes","reload","checkGrantForFetchResponse","totalElements","selectedIdList","list","disabledBtnType","Alert","success","position","effect","timeout","imported","selectedForm","draftId","previousPage","redirectToCreatePage","originalContent","formContent","encoded","TextEncoder","encode","chunkSize","binaryString","String","fromCharCode","apply","slice","btoa","responseType","mediaModal","blob","Blob","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","finally","switchToTemplate","switchToFormSend","checked","items","item","indexOf","isSelected","form","fields","operator","selectData","formTypeData","formSendTypeData","pageIdList","Array","DropdownCheck","selectionIdList","onChange","selectType","whiteSpace","TextOverFlowTooltip","maxLength","moment","createdAt","isValid","format","isAnswerable","isDecline","checkGrantToDisplay","FORM_TEMPLATES","FORM_SEND","ISG_FORM_SEND","HEALTH_FORM_SEND","ZIMMET_FORM_SEND","KVKK_FORM_SEND","disabledDeleteSelectedBtn","top","disabledDeleteBtn","SweetAlert","showCancel","warning","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","onCancel","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","zIndex","primaryColor","Nav","paddingLeft","NavBarKS","offsetWidth","btnDisabled","StickButton","fontSize","SquareButton","img","background","marginRight","marginTop","display","paddingRight","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","key","icon","CardHeader","CardTitle","tag","Label","CardBody","marginBottom","DetailedSearch","onSearch","marginLeft","ApproveDocumentViewer","modal","closeModal","canvas","VideoModal","isOpen"],"mappings":"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","file":"static/js/51.3d900e4e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    variant = _ref.variant,\n    size = _ref.size,\n    active = _ref.active,\n    className = _ref.className,\n    block = _ref.block,\n    type = _ref.type,\n    as = _ref.as,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n  if (ref) {\n    props.ref = ref;\n  }\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React, {Component} from 'react'\nimport {Button, Modal} from \"react-bootstrap\";\nimport Table from \"../../../../components/Table/Table\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport MiniButton from \"../../../../components/MiniButton\";\nimport Swal from \"sweetalert2\";\n\nclass SortingPriorityForms extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            priorityForms: [],\n            changeSize: false,\n            loading: false\n        };\n        this.saveFormTemplatePriorities = this.saveFormTemplatePriorities.bind(this);\n    }\n\n    componentDidMount() {\n        let self = this;\n        let params = {\n            url: '/formtemplate/priorityFormTemplates',\n            method: \"get\"\n        };\n        self.setState({loading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({loading: false, priorityForms: response.data});\n            }).catch(function (error) {\n            self.setState({loading: false});\n            showAxiosError(error);\n        });\n    }\n\n    saveFormTemplatePriorities() {\n        let self = this;\n        let priorityForms = this.state.priorityForms;\n        let i = 1;\n        priorityForms.forEach(formTemplate => {\n            formTemplate['priorityOrder'] = i;\n            i++\n        });\n        self.setState({priorityForms});\n        let params = {\n            url: '/formtemplate/savePriorityFormTemplates',\n            method: \"post\",\n            data: self.state.priorityForms\n        };\n        requestK(params)\n            .then(function (response) {\n                Swal({\n                    text: 'Kaydetme işlemi başarıyla gerçekleşti.',\n                    type: 'success',\n                    confirmButtonText: 'Tamam'\n                }).then((result) => {\n                });\n                self.props.closeSortingPriorityForms();\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    render() {\n\n        let columns = [\n            {\n                Header: \"Öncelik Sırası\",\n                accessor: \"\",\n                sortable: false,\n                Cell: (row, index) => (\n                    <div style={{textAlign: 'center', width: 50}}>\n                        {index + 1}\n                    </div>\n                )\n            },\n            {\n                Header: \"Form Türü\",\n                accessor: \"formType_category\",\n                sortable: false,\n                Cell: row => (\n                    <div>\n                        {row.formType && row.formType.category}\n                    </div>\n                )\n            },\n            {\n                Header: \"Form Adı\",\n                accessor: \"formName\",\n                sortable: false,\n                Cell: row => (<div style={{\n                    margin: 0, width: \"200px\", overflow: \"hidden\",\n                    textOverflow: \"ellipsis\"\n                }}>\n                    {row.formName}\n                </div>)\n            },\n            {\n                Header: \"Form Gönderim Türü\",\n                accessor: \"formSendType\",\n                sortable: false,\n                Cell: row => (<div style={{margin: 0}}>\n                    {(row.autosend === 1 && (row.priority === undefined || row.priority === null || row.priority === 0)) ? \"Otomatik\" :\n                        ((row.priority === 1 && (row.autosend === undefined || row.autosend == null || row.autosend == 0)) ? \"Öncelikli\" :\n                            ((row.priority === 1 && row.autosend == 1) ? \" Otomatik ve Öncelikli\"\n                                : \"Normal\"))\n                    }\n                </div>)\n            },\n            {\n                Header: \"Sırala\",\n                accessor: \"\",\n                sortable: false,\n                Cell: (row, index) => (\n                    <div style={{textAlign: 'center', width: 70}}>\n                        <MiniButton title=\"Yukarı Kaydır\" faIcon=\"fa-solid fa-caret-up\" color=\"info\"\n                                    onClick={() => {\n                                        if (index > 0) {\n                                            let priorityForms = this.state.priorityForms;\n                                            priorityForms[index] = priorityForms[index - 1];\n                                            priorityForms[index - 1] = row;\n                                            this.setState({priorityForms});\n                                        }\n                                    }}/>\n                        <MiniButton title=\"Aşağı Kaydır\" faIcon=\"fa-solid fa-caret-down\" color=\"info\"\n                                    onClick={() => {\n                                        if (index < this.state.priorityForms.length - 1) {\n                                            let priorityForms = this.state.priorityForms;\n                                            priorityForms[index] = priorityForms[index + 1];\n                                            priorityForms[index + 1] = row;\n                                            this.setState({priorityForms});\n                                        }\n                                    }}/>\n                    </div>\n                )\n            }\n        ]\n        return (\n            <Modal show={this.props.showSortingPriorityForms} onHide={this.props.closeSortingPriorityForms}\n                   size={this.state.changeSize ? \"xxl\" : \"xl\"}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title style={{color: \"white\"}}>Öncelikli Formları Sırala</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div style={{\n                        overflowY: \"scroll\",\n                        height: 400\n                    }}>\n                        <Table\n                            columns={columns}\n                            loadingText=\"Kayıtlar getiriliyor...\"\n                            loading={this.state.loading}\n                            content={this.state.priorityForms}\n                            paginationEnabled={false}/>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={this.props.closeSortingPriorityForms}\n                    >\n                        Kapat\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.saveFormTemplatePriorities}\n                    >\n                        Kaydet\n                    </Button>\n                </Modal.Footer>\n            </Modal>);\n    }\n}\n\nexport default SortingPriorityForms;","import React, {Component} from 'react';\nimport {checkGrantForFetchResponse, checkGrantToDisplay, showAxiosError} from \"../../../helper/helper\";\nimport {CardBody, CardHeader, CardTitle, Label, Nav} from \"reactstrap\";\nimport MiniButton from '../../../components/MiniButton'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport Table from \"../../../components/Table/Table\";\nimport StickButton from \"../../../components/StickButton\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport Alert from \"react-s-alert\";\nimport {formSendTypeData, formTypeData} from \"../common/PeykHelper\";\nimport NavBarKS from \"../../../components/NavBarKS\";\nimport moment from \"moment/moment\";\nimport 'moment/locale/tr';\nimport DropdownCheck from \"../../../components/Table/DropdownCheck\";\nimport VideoModal from \"../../../components/VideoModal\";\nimport Joyride from \"react-joyride\";\nimport ApproveDocumentViewer from \"../approval/helper/ApproveDocumentViewer\";\nimport SquareButton from \"../../../components/SquareButton\";\nimport {\n    FORM_SEND,\n    FORM_TEMPLATES,\n    HEALTH_FORM_SEND,\n    ISG_FORM_SEND,\n    ZIMMET_FORM_SEND,\n    KVKK_FORM_SEND\n} from \"../../../common/authorities/GrantDef\";\nimport SortingPriorityForms from \"../approval/helper/SortingPriorityForms\";\n\nclass FormTemplatePage extends Component {\n\n    videos = [\n        {title: \"Ücret bordrosunu nasıl yüklerim?\", id: \"lTjRaQZI4_Y\"},\n    ];\n    switchVideo = (video) => {\n        this.setState({video: video, showEczaciHelpModal: true})\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: {formType: \"\", formName: \"\", formURL: \"\"},\n            valid: {},\n            alert: null,\n            selection: [],\n            selectedAll: false,\n            formTypeList: [],\n            content: [],\n            totalIdList: [],\n            pageNumber: 0,\n            pageSize: 10,\n            loading: false,\n            manual: false,\n            total: 0,\n            searching: false,\n            searchQuery: undefined,\n            page: 0,\n            size: 10,\n            searchKey: \"\",\n            steps: [\n                {\n                    target: '.form-control',\n                    content: \"Gönderim yapmak istediğiniz form için form şablonunu seçiniz. \",\n                    placement: \"center\",\n                },\n            ],\n            steps2: [\n                {\n                    target: '.main-panel',\n                    content: \"Oluşturduğunuz form şablonlarını düzenleyip görüntüleyebileceğiniz ekran burasıdır. \",\n                    placement: \"center\",\n                },\n                {\n                    target: '.topbar .zocial:nth-child(1)',\n                    content: ' Yeni şablon oluşturmak için veya \"Talep Formu Editörü\" kullanarak oluşturduğunuz taslakları bir şablona bağlamak için \"Yeni Oluştur\" butonunu tıklayabilirsiniz.',\n                    placement: \"auto\",\n                },\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            width: window.innerWidth,\n            flag: 0,\n            showEczaciHelpModal: false,\n            video: null,\n            stop: false,\n            showSortingPriorityForms: false,\n            organizationalUnitList: [],\n            departments: [],\n            jobTitleOptions: [],\n            jobTitleList: []\n        };\n\n        this.fetchData = this.fetchData.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n        this.editClicked = this.editClicked.bind(this);\n        this.createClicked = this.createClicked.bind(this);\n        this.importClicked = this.importClicked.bind(this);\n        this.deleteSelected = this.deleteSelected.bind(this);\n        this.previewContent = this.previewContent.bind(this);\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n        this.openParameters = this.openParameters.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.searchWithKey = this.searchWithKey.bind(this);\n        this.deleteList = this.deleteList.bind(this);\n        this.setMediaViewer = this.setMediaViewer.bind(this);\n        this.selectForm = this.selectForm.bind(this);\n        this.closeSortingPriorityForms = this.closeSortingPriorityForms.bind(this);\n    }\n\n    componentDidMount() {\n        this.readFormTypeAll();\n        this.getJobTitles();\n        this.getOrganizations();\n    }\n\n    closeSortingPriorityForms() {\n        this.setState({showSortingPriorityForms: false});\n    }\n\n    getJobTitles = () => {\n        let self = this;\n        let jobTitleOptions = [];\n        let params = {\n            url: `/job/job-titles`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let jobTitleList = response.data;\n                jobTitleList.map((job) => {\n                    jobTitleOptions.push({value: job.id, label: job.title, job: job});\n                });\n                self.setState({jobTitleList, jobTitleOptions});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    getOrganizations = () => {\n        let self = this;\n        let params = {\n            url: `/department/readOrganizationalUnit`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let data = response.data === \"\" ? [] : response.data;\n                let nameOrganization = 'Tüm Departmanları Seç';\n                let departments = [{'id': -1, 'name': nameOrganization}, ...data];\n                const options = departments.map(d => ({\n                    'value': d.id,\n                    'label': d.name\n                }));\n                self.setState({organizationalUnitList: options, departments: data});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    readFormTypeAll = () => {\n        let self = this;\n        let params = {\n            url: `/formtype/readFormTypeAll`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let formTypeList = (self.props.isISGU !== undefined && self.props.isISGU === true) ? response.data.filter(function (formtype) {\n                    return formtype.category === \"ISGF\";\n                }) : (self.props.isHealthForm !== undefined && self.props.isHealthForm === true) ? response.data.filter(function (formtype) {\n                    return formtype.category === \"SAĞLIK FORMU\";\n                }) : (self.props.isZimmet !== undefined && self.props.isZimmet === true) ? response.data.filter(function (formtype) {\n                    return formtype.category === \"ZİMMET\";\n                }) : (self.props.isKVKK !== undefined && self.props.isKVKK === true) ? response.data.filter(function (formtype) {\n                    return formtype.category === \"KVKK\";\n                }) : response.data;\n                self.setState({formTypeList});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    handleSearch(searchQuery) {\n        this.setState({searchQuery, searching: true},\n            () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    searchWithKey(e) {\n        this.setState({searchKey: e.target.value, manual: true});\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let url;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=id,desc';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let formSend = this.props && this.props.type === 'formsend';\n\n        if (this.props.isISGU !== undefined && this.props.isISGU === true)\n            url = '/formtemplate/readFormTemplateISGF?';\n        else if (this.props.isHealthForm !== undefined && this.props.isHealthForm === true)\n            url = '/formtemplate/readFormTemplateHealth?';\n        else if (this.props.isZimmet !== undefined && this.props.isZimmet === true)\n            url = '/formtemplate/readFormTemplateZimmet?';\n        else if (this.props.isKVKK !== undefined && this.props.isKVKK === true)\n            url = '/formtemplate/readFormTemplateKvkk?';\n        else\n            url = '/formtemplate/readFormTemplateAll?';\n\n        let params = {\n            url: url +\n                ((searchQuery !== '' && searchQuery.includes(\"formSendType\")) ? '' : '&formSendType=') + '&formSend=' + formSend +\n                '&page=' + page + '&size=' + size + searchQuery + sortStr,\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        self.props.reload(true);\n        requestK(params)\n            .then(function (response) {\n                checkGrantForFetchResponse(self, response.data);\n                let total = (response.data && response.data.page) ? response.data.page.totalElements : 0;\n                let content = (response.data && response.data.page) ? response.data.page.content : [];\n                let totalIdList = response.data ? response.data.selectedIdList : [];\n                self.setState({\n                    page: page,\n                    size: size,\n                    total,\n                    content,\n                    totalIdList,\n                    loading: false,\n                    searching: false\n                });\n                self.props.reload(false);\n            }).catch(function (error) {\n            self.setState({loading: false, searching: false});\n            self.props.reload(false);\n            showAxiosError(error);\n        });\n    }\n\n    createClicked() {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/formcreation`,\n            state: {\n                organizationalUnitList: this.state.organizationalUnitList,\n                departments: this.state.departments,\n                jobTitleOptions: this.state.jobTitleOptions,\n                jobTitleList: this.state.jobTitleList,\n            }\n        });\n    }\n\n    importClicked() {\n        this.props.history.push({pathname: `/${this.props.peykName}/form/template/import`});\n    }\n\n    deleteSelected() {\n        this.deleteList(this.state.selection, \"disabledDeleteSelectedBtn\");\n    }\n\n    deleteList(list, disabledBtnType) {\n        let self = this;\n        let params = {\n            url: `/formtemplate/deleteFormTemplateList`,\n            method: \"post\",\n            data: list\n        };\n        self.setState({[disabledBtnType]: true, alert: null});\n        requestK(params)\n            .then(function () {\n                self.setState({\n                    selected: null,\n                    selection: [],\n                    selectedAll: false,\n                    manual: true,\n                    [disabledBtnType]: false,\n                    alert: null\n                });\n                Alert.success(\"Seçilen kayıt(lar) silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({[disabledBtnType]: false});\n        });\n    }\n\n    deleteRow(row) {\n        this.deleteList([row.id], \"disabledDeleteBtn\");\n    }\n    editClicked(row) {\n        if (!row.imported ) {\n            if(row.formType.category !==\"ŞABLONSUZ TASLAK\"){\n                this.props.history.push({\n                    pathname: `/${this.props.peykName}/formcreation`, state: {\n                        selectedForm: row,\n                        organizationalUnitList: this.state.organizationalUnitList,\n                        departments: this.state.departments,\n                        jobTitleOptions: this.state.jobTitleOptions,\n                        jobTitleList: this.state.jobTitleList\n                    }\n                });\n            }else{\n                this.props.history.push({\n                    pathname: `/${this.props.peykName}/formsend/create`,\n                    templateId: -1,\n                    draftId: row.id,\n                    previousPage: this.props.previousPage,\n                    redirectToCreatePage: true,\n                });\n            }\n\n        } else {\n            this.props.history.push({\n                pathname: `/${this.props.peykName}/form/template/import`,\n                state: {selectedForm: row}\n            });\n        }\n    }\n\n    previewContent(row) {\n        let self = this;\n        let originalContent;\n        if (row.formContent) {\n            originalContent = row.formContent;\n            let encoded = new TextEncoder().encode(row.formContent);\n            let chunkSize = 1024;\n            let binaryString = \"\";\n            for (let i = 0; i < encoded.length; i += chunkSize) {\n                binaryString += String.fromCharCode.apply(null, encoded.slice(i, i + chunkSize));\n            }\n            row.formContent = btoa(binaryString);\n        }\n        const handleResponse = function(response) {\n            let blob = new Blob([response.data], { type: response.headers[\"content-type\"] });\n            let base64Data = \"\";\n            if (blob !== undefined) {\n                let reader = new FileReader();\n                reader.readAsDataURL(blob);\n                reader.onloadend = function () {\n                    base64Data = reader.result;\n                    self.setState({ url: base64Data });\n                };\n            }\n        };\n\n        const handleError = function(error) {\n            showAxiosError(error);\n            self.setState({ mediaModal: false, title: null });\n        };\n\n        let params = {\n            responseType: 'arraybuffer',\n            method: \"post\"\n        };\n\n        if (row.formContent === null) {\n            params.url = `/formtemplate/previewFormContentDraft`;\n            params.data = row.id;\n        } else {\n            params.url = `/formtemplate/previewTemplateContent`;\n            params.data = row;\n        }\n\n        self.setState({ mediaModal: true });\n\n        requestK(params)\n            .then(handleResponse)\n            .catch(handleError)\n            .finally(function () {\n                if (originalContent !== undefined) {\n                    row.formContent = originalContent;\n                }\n        });\n\n    }\n\n    openParameters() {\n        this.props.history.push({pathname: `/${this.props.peykName}/formparameter`});\n    }\n\n    switchToTemplate() {\n        this.props.history.push({pathname: `/${this.props.peykName}/formtemplate`});\n    }\n\n    switchToFormSend() {\n        this.props.history.push({pathname: `/${this.props.peykName}/formsend`});\n    }\n\n    sendWithoutTemplate = () => {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/formsend/create`,\n            templateId: -1,\n            redirectToCreatePage1:true,\n        });\n    };\n\n    sendMulti = () => {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/formsend/multiCreate`,\n            templateIds: this.state.selection\n        });\n    };\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    setMediaViewer() {\n        this.setState({url: null, mediaModal: false});\n    }\n\n    selectForm(form) {\n        if(form.formType.category == \"ŞABLONSUZ TASLAK\"){\n            this.props.history.push({\n                pathname: `/${this.props.peykName}/formsend/create`,\n                templateId: -1,\n                draftId: form.id,\n                previousPage: this.props.previousPage\n            });\n        }else{\n            this.props.history.push({\n                pathname: `/${this.props.peykName}/formsend/create`,\n                templateId: form.id,\n                previousPage: this.props.previousPage\n            });\n        }\n\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true})\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback = (data) => {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false})\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let steps2 = this.state.steps2;\n        let locale = this.state.locale;\n\n        const fields = [\n            {\n                label: \"Form Adı\",\n                accessor: \"formName\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Tür\",\n                accessor: \"formType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: formTypeData(this.state.formTypeList)\n            },\n            {\n                label: \"Oluşturulma Tarihi (Başlangıç)\",\n                accessor: \"min_createdAt\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"datetime\",\n                operator: \">=\",\n            },\n            {\n                label: \"Şablon İçeriği\",\n                accessor: \"formContent\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Oluşturulma Tarihi (Bitiş)\",\n                accessor: \"max_createdAt\",\n                type: \"datetime\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Form Gönderim Türü\",\n                accessor: \"formSendType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: formSendTypeData()\n            },\n            {\n                label: \"İmzasız Gönderilebilecek Şablon\",\n                accessor: \"withoutSign\",\n                type: \"boolean\",\n                operator: \"=\",\n            }\n        ];\n        let pageIdList = [];\n        if (this.state.content && this.state.content instanceof Array) {\n            this.state.content.map(e => {\n                pageIdList.push(e.id);\n            });\n        }\n        let columns = [];\n        columns.push(\n            {\n                Header: (this.state.content &&\n                    <DropdownCheck selectionIdList={this.state.selection}\n                                   totalIdList={this.state.totalIdList}\n                                   pageIdList={pageIdList}\n                                   onChange={e => this.setState({selection: e})}/>\n                ),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.content &&\n                    <input type=\"checkbox\" checked={this.isSelected(row.id)}\n                           onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}/>)\n            },\n            {\n                Header: \"Form Türü\",\n                accessor: \"formType_category\",\n                Cell: row => (\n                    <div>\n                        {row.formType && row.formType.category}\n                    </div>\n                )\n            },\n            {\n                Header: \"Form Adı\",\n                accessor: \"formName\",\n                Cell: row => ( <div style={{margin: 0,whiteSpace: 'pre'}}><TextOverFlowTooltip text={row.formName} maxLength={50}/></div>)\n            },\n            {\n                Header: \"Oluşturulma Tarihi\",\n                accessor: \"createdAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {moment(row.createdAt).isValid() ? moment(row.createdAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}\n                    </div>\n                )\n            },\n            {\n                Header: \"Form Gönderim Türü\",\n                accessor: \"formSendType\",\n                sortable: false,\n                Cell: row => (<div style={{margin: 0}}>\n                    {(row.autosend === 1 && (row.priority === undefined || row.priority === null || row.priority === 0)) ? \"Otomatik\" :\n                        ((row.priority === 1 && (row.autosend === undefined || row.autosend == null || row.autosend == 0)) ? \"Öncelikli\" :\n                            ((row.priority === 1 && row.autosend == 1) ? \" Otomatik ve Öncelikli\"\n                                : \"Normal\"))\n                    }\n                </div>)\n            },\n            {\n                Header: \"Onay Tipi\",\n                accessor: \"isAnswerable\",\n                Cell: row => (\n                    <div style={{ margin: 0 }}>\n            <span className=\"isAnswerable\"\n                  style={\n                      row.isAnswerable === 1\n                          ? { color: '#007acc' }\n                          : { color: row.isDecline === 1 ? '#08c21d' : 'gray' }\n                  }>\n                {row.isAnswerable === 1 && row.isDecline === 1 ? (\n                    \"Cevap Zorunlu - Reddedilebilir\"\n                ) : row.isAnswerable === 1 ? (\n                    \"Cevap Zorunlu\"\n                ) : row.isAnswerable === 0 && row.isDecline === 1 ? (\n                    \"Reddedilebilir\"\n                ) : null}\n            </span>\n                    </div>\n                )\n            },\n        {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: row => (\n                    <div style={{textAlign: 'left'}}>\n                        {checkGrantToDisplay(this, [FORM_TEMPLATES, FORM_SEND, ISG_FORM_SEND, HEALTH_FORM_SEND, ZIMMET_FORM_SEND, KVKK_FORM_SEND]) &&\n                            <MiniButton title=\"Görüntüle\" faIcon=\"fa-eye\" color=\"info\"\n                                        disabled={this.state.disabledDeleteSelectedBtn}\n                                        onClick={() => this.previewContent(row)}/>}\n                        {this.props.type === \"formtemplate\" && checkGrantToDisplay(this, [FORM_TEMPLATES, FORM_SEND]) &&\n                            <MiniButton title=\"Düzenle\" faIcon=\"fa-edit\" color=\"success\"\n                                        disabled={this.state.disabledDeleteSelectedBtn}\n                                        onClick={() => this.editClicked(row)}/>\n                        }\n                        {this.props.type === \"formsend\" && (checkGrantToDisplay(this, FORM_SEND) || checkGrantToDisplay(this, ISG_FORM_SEND) || checkGrantToDisplay(this, HEALTH_FORM_SEND) || checkGrantToDisplay(this, ZIMMET_FORM_SEND) || checkGrantToDisplay(this, KVKK_FORM_SEND)) &&\n                            <button type=\"button\" className=\"select-button\" style={{top: '0.5px'}}\n                                    disabled={this.state.disabledDeleteSelectedBtn}\n                                    onClick={() => this.selectForm(row)}>Seç</button>\n                        }\n                        {this.props.type === \"formtemplate\" && checkGrantToDisplay(this, FORM_TEMPLATES) &&\n                            <MiniButton title=\"Sil\" faIcon=\"fa-trash\" color=\"danger\"\n                                        disabled={this.state.disabledDeleteBtn || this.state.disabledDeleteSelectedBtn}\n                                        onClick={() => {\n                                            this.setState({\n                                                alert: (\n                                                    <SweetAlert showCancel warning\n                                                                confirmBtnText=\"Evet\"\n                                                                cancelBtnText=\"Hayır\"\n                                                                confirmBtnBsStyle=\"danger\"\n                                                                cancelBtnBsStyle=\"default\"\n                                                                title=\"Emin misiniz?\"\n                                                                onConfirm={() => this.deleteRow(row)}\n                                                                onCancel={() => this.setState({alert: null})}\n                                                    >\n                                                        {row.formName + \" adlı form silinecek.\"}\n                                                    </SweetAlert>\n                                                )\n                                            });\n                                        }}/>\n                        }\n                    </div>\n                )\n            }\n        );\n\n        return <div className=\"row baseBackground\">\n\n            {this.state.joyrideActive &&\n                <Joyride\n                    disableBeacon={false}\n                    autoStart\n                    locale={locale}\n                    steps={this.props.type === \"formsend\" ? steps : steps2}\n                    continuous={true}\n                    run={this.state.shouldRun}\n                    scrollToFirstStep={true}\n                    showProgress={true}\n                    showSkipButton={true}\n                    scrollToSteps={true}\n                    disableCloseOnEsc={true}\n                    disableOverlay={false}\n                    disableOverlayClicks={false}\n                    keyboardNavigation={true}\n                    hideBackButton={false}\n                    disableOverlayClose={true}\n                    callback={this.callback}\n                    holePadding={0}\n                    shouldRun={this.state.shouldRun}\n                    styles={{\n                        options: {\n                            zIndex: 100000,\n                            primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                        }\n                    }}/>\n            }\n\n\n            {this.state.alert}\n            {this.props.type === \"formsend\" &&\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    <NavBarKS offsetWidth={this.props.offsetWidth}\n                              innerWidth={window.innerWidth}\n                              btnDisabled={this.state.btnDisabled}\n                              name='archiveInvoiceList'>\n                        {checkGrantToDisplay(this, FORM_SEND) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Yeni\" label=\"Şablonsuz Gönderim\"\n                                         title=\"Şablonsuz Gönderim için tıklayınız\"\n                                         style={{fontSize: 'x-small'}} onClick={this.sendWithoutTemplate}/>}\n                        {checkGrantToDisplay(this, FORM_SEND) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Yeni\" label=\"Çoklu Gönderim\"\n                                         title=\"Çoklu Gönderim için tıklayınız\"\n                                         disabled={this.state.selection == null || this.state.selection.length < 2}\n                                         style={{fontSize: 'x-small'}} onClick={this.sendMulti}/>}\n                        {checkGrantToDisplay(this, FORM_TEMPLATES) && <SquareButton position=\"rightSide\"\n                                                                                    title=\"Form Şablonu Düzenleme Sayfasına Geç\"\n                                                                                    img='setting.jpg'\n                                                                                    style={{\n                                                                                        margin: '6px 10px 0px -32px',\n                                                                                        background: 'lightslategray'\n                                                                                    }}\n                                                                                    onClick={() => this.switchToTemplate()}/>}\n                        <div className=\"helpButtonContainer\" position='rightSide'\n                             style={{marginRight: \"-1em\", marginTop: \"1.25em\"}}>\n                            <button className=\"helpButton\" onClick={() => {\n                                this.activateJoyride()\n                            }}>\n                                <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                                <i className=\"far fa-question-circle helpButtonIcon\"/>\n                            </button>\n                            {this.state.stop &&\n                                <div className=\"nav-item dropdown  videoIconContainer\"\n                                     style={{display: \"inline-block\", paddingRight: \"30px\"}}>\n                                    <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                            aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                        <span className=\"tooltipText\">Yardimci Videolar</span>\n                                        <i className=\"fab fa-youtube videoIcon\"/>\n                                    </button>\n                                    <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                         aria-labelledby=\"videosLink\">\n                                        {/*<a className=\"dropdown-item\" onClick={this.props.onLogout}>*/}\n                                        {\n                                            this.videos.map((video, i) =>\n                                                <a key={i} className=\"dropdown-item\"\n                                                   onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                        }\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    </NavBarKS>\n                </Nav>\n            }\n            {this.props.type === \"formtemplate\" &&\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    <NavBarKS offsetWidth={this.props.offsetWidth} innerWidth={window.innerWidth}\n                              btnDisabled={this.state.btnDisabled}\n                              selection={this.state.selection} name='archiveInvoiceList'>\n                        {checkGrantToDisplay(this, FORM_TEMPLATES) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Yeni\" label=\"Yeni Oluştur\"\n                                         title=\"Yeni Form Şablonu Oluştur\"\n                                         disabled={this.state.loading || this.state.disabledDeleteSelectedBtn}\n                                         style={{fontSize: 'x-small'}} onClick={this.createClicked}/>}\n                        {/*<StickButton position=\"leftSide\" className=\"zocial Word\" label=\"Yeni Yükle\"*/}\n                        {/*             title=\"Yeni Form Şablonu Yükle\"*/}\n                        {/*             disabled={this.state.loading || this.state.disabledDeleteSelectedBtn}*/}\n                        {/*             style={{fontSize: 'x-small'}} onClick={this.importClicked}/>*/}\n                        {checkGrantToDisplay(this, FORM_TEMPLATES) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Sil\" label=\"Seçilenleri Sil\"\n                                         title=\"Seçilen Formları Sil\"\n                                         disabled={this.state.disabledDeleteSelectedBtn || !(this.state.selection && this.state.selection.length > 0)}\n                                         style={{fontSize: 'x-small'}}\n                                         onClick={() => {\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert showCancel warning\n                                                                 confirmBtnText=\"Evet\"\n                                                                 cancelBtnText=\"Hayır\"\n                                                                 confirmBtnBsStyle=\"danger\"\n                                                                 cancelBtnBsStyle=\"default\"\n                                                                 title=\"Emin misiniz?\"\n                                                                 onConfirm={this.deleteSelected}\n                                                                 onCancel={() => this.setState({alert: null})}\n                                                     >\n                                                         Seçilen kayıtlar silinecek.\n                                                     </SweetAlert>\n                                                 )\n                                             });\n                                         }}/>}\n                        {checkGrantToDisplay(this, FORM_SEND) && <SquareButton position=\"rightSide\"\n                                                                               title=\"Form Gönder Sayfasına Geç\"\n                                                                               icon='fa fa-paper-plane'\n                                                                               style={{\n                                                                                   margin: '6px 10px 0px -32px',\n                                                                                   background: 'lightslategray'\n                                                                               }}\n                                                                               onClick={() => this.switchToFormSend()}/>}\n                        {checkGrantToDisplay(this, FORM_TEMPLATES) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Siralama\"\n                                         label=\"Öncelikli Formları Sırala\"\n                                         title=\"Öncelikli Formları Sırala\"\n                                         faIcon=\"fa-sort-amount-asc\"\n                                         disabled={this.state.loading || this.state.disabledDeleteSelectedBtn}\n                                         style={{fontSize: 'x-small'}}\n                                         onClick={() => this.setState({showSortingPriorityForms: true})}\n                            />\n                        }\n                        {/*this.state.stop &&*/\n                            <div className=\"helpButtonContainer\" position='rightSide'\n                                 style={{marginRight: \"2.5em\", marginTop: \"1.2em\"}}>\n                                <button className=\"helpButton\" onClick={() => {\n                                    this.activateJoyride()\n                                }}>\n                                    <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                                    <i className=\"far fa-question-circle helpButtonIcon\"/>\n                                </button>\n                            </div>\n                        }\n                    </NavBarKS>\n                </Nav>\n            }\n            <div className=\"row satirBasi\">\n                <div className=\"col-md-12\">\n                    <div className=\"card\">\n                        <CardHeader>\n                            <CardTitle tag=\"h4\">\n                                {this.props.type === \"formsend\" ? \"Form Gönder\" : \"Form Şablonları\"}\n                            </CardTitle>\n                            {this.props.type === \"formsend\" &&\n                                <Label style={{position: 'absolute', top: '38px'}}>Gönderim yapmak istediğiniz form için\n                                    form şablonunu\n                                    seçiniz.</Label>}\n                        </CardHeader>\n                        <CardBody>\n                            <div className=\"\">\n                                <div className=\"\" style={{marginTop: '10px', marginBottom: '0px'}}>\n                                    <DetailedSearch fields={fields} loading={this.state.searching}\n                                                    onSearch={this.handleSearch}/>\n                                </div>\n                            </div>\n                        </CardBody>\n                        <CardBody>\n                            <div className=\"row\" style={{marginLeft: '10px', color: 'red'}}>\n                <span>\n                  {(this.state.selection.length !== 0 ? \"Seçilen satır sayısı \" + this.state.selection.length : \"\")}\n                </span>\n                            </div>\n                            <Table columns={columns}\n                                   className=\"-striped -highlight\"\n                                   content={this.state.content}\n                                   loading={this.state.loading}\n                                   loadingText=\"Kayıtlar getiriliyor...\"\n                                   total={this.state.total}\n                                   page={this.state.page}\n                                   manual={this.state.manual}\n                                   size={this.state.size}\n                                   options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                                   fetchData={this.fetchData}\n                            />\n                        </CardBody>\n                    </div>\n                </div>\n                {this.state.mediaModal &&\n                    <ApproveDocumentViewer url={this.state.url}\n                                           modal={this.state.mediaModal}\n                                           closeModal={this.setMediaViewer}\n                                           canvas={true}\n                    />}\n\n                {this.state.showSortingPriorityForms &&\n                    <SortingPriorityForms showSortingPriorityForms={this.state.showSortingPriorityForms}\n                                          closeSortingPriorityForms={this.closeSortingPriorityForms}/>}\n            </div>\n            {this.state.showEczaciHelpModal &&\n                <VideoModal video={this.state.video} isOpen={this.state.showEczaciHelpModal}\n                            close={() => this.setState({showEczaciHelpModal: false})}/>\n            }\n        </div>\n    }\n}\n\nexport default FormTemplatePage;"],"sourceRoot":""}