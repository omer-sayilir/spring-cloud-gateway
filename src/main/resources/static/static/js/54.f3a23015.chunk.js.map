{"version":3,"sources":["accounting/kepik/rabbitPage/Rabbit.js"],"names":["Rabbit","Component","constructor","props","super","fetchData","requestK","url","method","then","response","this","setState","content","data","catch","error","showAxiosError","state","valid","selection","loading","manual","total","page","size","width","window","innerWidth","bind","handleConsole","componentDidMount","Alert","success","position","effect","timeout","render","columns","push","Header","accessor","Cell","row","React","createElement","name","consumers","style","margin","messages","className","NavBarKS","SquareButton","title","onClick","img","icon","CardHeader","CardTitle","tag","CardBody","Table","loadingText","options"],"mappings":"sHAAA,yFASA,MAAMA,UAAeC,YACjBC,YAAYC,GACRC,MAAMD,GAAO,KAoBjBE,UAAY,IAMDC,YALM,CACTC,IAAK,kBACLC,OAAQ,QAGYC,KAAMC,IAC1BC,KAAKC,SAAS,CAAEC,QAASH,EAASI,SACnCC,MAAMC,IACLC,YAAeD,KA5BnBL,KAAKO,MAAQ,CACTC,MAAO,GACPC,UAAW,GACXP,QAAS,GACTQ,SAAS,EACTC,QAAQ,EACRC,MAAO,EACPC,KAAM,EACNC,KAAM,GACNC,MAAOC,OAAOC,YAElBjB,KAAKN,UAAYM,KAAKN,UAAUwB,KAAKlB,MACrCA,KAAKmB,cAAgBnB,KAAKmB,cAAcD,KAAKlB,MAGjDoB,oBACIpB,KAAKN,YAgBTyB,gBACInB,KAAKN,YAAYI,KAAK,KAClBuB,IAAMC,QAAQ,yCAAgC,CAC1CC,SAAU,YACVC,OAAQ,aACRC,QAAS,SAMrBC,SAEI,IAAIC,EAAU,GA8Bd,OA7BAA,EAAQC,KACJ,CACIC,OAAQ,OACRC,SAAU,OACVC,KAAMC,GACFC,IAAAC,cAAA,WACKF,EAAIG,OAIjB,CACIN,OAAQ,YACRC,SAAU,YACVC,KAAMC,GACFC,IAAAC,cAAA,WAAMF,EAAII,YAGtB,CACQP,OAAQ,WACRC,SAAU,WACVC,KAAMC,GACFC,IAAAC,cAAA,OAAKG,MAAO,CAACC,OAAQ,IAChBN,EAAIO,YAQjBN,IAAAC,cAAA,OAAKM,UAAU,sBACXP,IAAAC,cAACO,IAAQ,KACDR,IAAAC,cAACQ,IAAY,CAACnB,SAAS,WACToB,MAAM,SACNC,QAAS5C,KAAKmB,cACd0B,IAAI,oBACJC,KAAK,YAE3Bb,IAAAC,cAAA,OAAKM,UAAU,iBACXP,IAAAC,cAAA,OAAKM,UAAU,aACXP,IAAAC,cAAA,OAAKM,UAAU,QACXP,IAAAC,cAACa,aAAU,KACPd,IAAAC,cAACc,YAAS,CAACC,IAAI,MACV,gCAGThB,IAAAC,cAACgB,WAAQ,KACLjB,IAAAC,cAACiB,IAAK,CAACxB,QAASA,EACTa,UAAU,sBACVtC,QAASF,KAAKO,MAAML,QACpBQ,QAASV,KAAKO,MAAMG,QACpB0C,YAAY,+BACZxC,MAAOZ,KAAKO,MAAMK,MAClBC,KAAMb,KAAKO,MAAMM,KACjBF,OAAQX,KAAKO,MAAMI,OACnBG,KAAMd,KAAKO,MAAMO,KACjBuC,QAAS,CAAC,IAAK,KAAM,KAAM,KAAM,OACjC3D,UAAWM,KAAKN,kBAUxCL","file":"static/js/54.f3a23015.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { CardBody, CardTitle, CardHeader, Nav} from 'reactstrap';\nimport Table from \"../../../components/Table/Table\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport NavBarKS from \"../../../components/NavBarKS\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport SquareButton from \"../../../components/SquareButton\";\nimport Alert from \"react-s-alert\";\n\nclass Rabbit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            valid: {},\n            selection: [],\n            content: [],\n            loading: false,\n            manual: false,\n            total: 0,\n            page: 0,\n            size: 10,\n            width: window.innerWidth,\n        };\n        this.fetchData = this.fetchData.bind(this);\n        this.handleConsole = this.handleConsole.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    fetchData = () => {\n        let params = {\n            url: 'rabbitmq/status',\n            method: 'get'\n        };\n\n        return requestK(params).then((response) => {\n            this.setState({ content: response.data });\n        }).catch(error => {\n            showAxiosError(error);\n        });\n    };\n\n    handleConsole() {\n        this.fetchData().then(() => {\n            Alert.success(\"Yenilenme işlemi tamamlandı.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 1500\n            });\n        });\n    }\n\n\n    render(){\n\n        let columns = [];\n        columns.push(\n            {\n                Header: \"Name\",\n                accessor: \"name\",\n                Cell: row => (\n                    <div>\n                        {row.name}\n                    </div>\n                )\n            },\n            {\n                Header: \"Consumers\",\n                accessor: \"consumers\",\n                Cell: row => (\n                    <div>{row.consumers}</div>\n                )\n            },\n        {\n                Header: \"Messages\",\n                accessor: \"messages\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.messages}\n                    </div>\n                )\n            }\n        );\n\n\n        return(\n            <div className=\"row baseBackground\">\n                <NavBarKS>\n                        <SquareButton position=\"leftSide\"\n                                      title='Yenile'\n                                      onClick={this.handleConsole}\n                                      img='refresh_white.png'\n                                      icon='reload'/>\n                </NavBarKS>\n                <div className=\"row satirBasi\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">\n                                    {\"RabbitMQ İzleme Paneli\"}\n                                </CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                                <Table columns={columns}\n                                       className=\"-striped -highlight\"\n                                       content={this.state.content}\n                                       loading={this.state.loading}\n                                       loadingText=\"Kayıtlar getiriliyor...\"\n                                       total={this.state.total}\n                                       page={this.state.page}\n                                       manual={this.state.manual}\n                                       size={this.state.size}\n                                       options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                                       fetchData={this.fetchData}\n                                />\n                            </CardBody>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Rabbit;"],"sourceRoot":""}