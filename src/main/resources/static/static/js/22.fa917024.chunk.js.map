{"version":3,"sources":["accounting/kepik/bordrosession/helper/ProcessCode.js","accounting/kepik/bordro/component/BordroTableIdSelected.js","accounting/kepik/bordrosession/ResendPage.js"],"names":["ProcessCode","SIGNBORDRO","code","SIGNMIME","RESENDMIME","BordroTableIdSelected","Component","constructor","props","super","getEmployeeId","async","self","this","params","url","state","content","employee","id","method","response","requestK","setState","employeeUserId","data","error","showAxiosError","loading","getApprovalUserId","approvalUserId","alert","selection","manual","total","page","size","fetchData","bind","previewBordro","setMediaViewer","accessor","direction","sortStr","undefined","processCode","selectedBordroIdList","searching","then","bordroSession","totalElements","React","createElement","SweetAlert","confirmBtnText","confirmBtnBsStyle","title","onConfirm","history","push","pathname","peykName","toggleModal","length","message","Alert","warning","position","effect","timeout","updateFlowTimeout","onComplete","selectedIdList","readFlowTimeoutTemplate","readTimeoutTemplate","catch","mediaModal","row","responseType","blob","Blob","type","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","result","render","columnList","Header","Cell","term","moment","format","name","className","parsedTckn","surname","kepAddress","style","margin","warningCount","DocumentState","messageType","sortable","textAlign","onClick","e","columns","renewListForKepOwnership","isKepOwner","ApproveDocumentViewer","modal","listener","closeModal","Table","options","ResendPage","readSmsTemplate","smsBody","readMailTemplate","mimeBody","completed","signedDocumentCount","progressLength","timeoutList","notifyMimeResend","createRef","resend","readMimeInfo","checkTimeouts","showErrorMessage","current","notificationAlert","place","errorMessage","autoDismiss","componentDidMount","location","session","mimeTitle","kepAccount","account","disableSendBtn","success","renderNavButtons","Nav","paddingLeft","height","StickButton","fontSize","label","showCancel","cancelBtnText","cancelBtnBsStyle","onCancel","renderMimeInputs","Container","Row","sm","Col","top","Input","marginTop","value","disable","rows","border","disabled","padding","renderBordroList","pageSize","Notify","ref","notify","md","Card","CardHeader","CardTitle","tag","CardBody"],"mappings":"sHAYeA,IAZG,CACdC,WAAY,CACRC,KAAM,GAEVC,SAAU,CACND,KAAM,GAEVE,WAAY,CACRF,KAAM,K,kCCRd,8IAcA,MAAMG,UAA8BC,YAElCC,YAAYC,GACVC,MAAMD,GAAO,KAgBfE,cAAgBC,UACd,IAAIC,EAAOC,KAEPC,EAAS,CACXC,IAAK,2BAFUF,KAAKG,MAAMC,QAAQ,GAAGC,SAASC,GAG9CC,OAAQ,QAGV,IACE,IAAIC,QAAiBC,YAASR,GAC9BF,EAAKW,SAAS,CACZC,eAAgBH,EAASI,OAE3B,MAAOC,GACPC,YAAeD,GACfd,EAAKW,SAAS,CAAEK,SAAS,MAE3B,KAEFC,kBAAoBlB,UAClB,IAAIC,EAAOC,KAEPC,EAAS,CACXC,IAAK,+BAFUF,KAAKG,MAAMC,QAAQ,GAAGE,GAGrCC,OAAQ,QAGV,IACE,IAAIC,QAAiBC,YAASR,GAC9BF,EAAKW,SAAS,CACZO,eAAgBT,EAASI,OAE3B,MAAOC,GACPC,YAAeD,GACfd,EAAKW,SAAS,CAAEK,SAAS,MAjD3Bf,KAAKG,MAAQ,CACXY,SAAS,EACTG,MAAO,KACPC,UAAW,GACXC,QAAQ,EACRhB,QAAS,GACTiB,MAAO,EACPC,KAAM,EACNC,KAAM,IAERvB,KAAKwB,UAAYxB,KAAKwB,UAAUC,KAAKzB,MACrCA,KAAK0B,cAAgB1B,KAAK0B,cAAcD,KAAKzB,MAC7CA,KAAK2B,eAAiB3B,KAAK2B,eAAeF,KAAKzB,MAyCjDwB,UAAUI,EAAUC,EAAWP,EAAMC,GACnC,IAAIxB,EAAOC,KACP8B,OAAuBC,IAAbH,EAA0B,SAAWA,EAAW,IAAMC,EAAa,GAC7E5B,EAAS,CACXC,IAAK,0CAA4CH,EAAKJ,MAAMqC,YAAc,SAAWV,EAAO,SAAWC,EAAOO,EAC9GvB,OAAQ,OACRK,KAAMb,EAAKJ,MAAMsC,sBAEnBlC,EAAKW,SAAS,CAACK,SAAS,EAAMmB,WAAW,EAAMd,QAAwB,IAAhBrB,EAAKqB,QAA0BrB,EAAKqB,SAC3FX,YAASR,GACJkC,MAAKrC,eAAgBU,GACtB,IAAIF,EAAKP,EAAKJ,MAAMyC,eAAiBrC,EAAKJ,MAAMyC,cAAc9B,GAC9D,GAAIE,EAASI,KAAKU,MAA6C,IAArCd,EAASI,KAAKU,KAAKe,cAC3CtC,EAAKW,SAAS,CACZQ,MAAQoB,IAAAC,cAACC,IAAU,CAAC3B,OAAK,EACL4B,eAAe,QACfC,kBAAkB,SAClBC,MAAM,OACNC,UAAWA,KACTtC,EACEP,EAAKJ,MAAMkD,QAAQC,KAAK,CAACC,SAAU,IAAIhD,EAAKJ,MAAMqD,yBAA2B1C,IAC7EP,EAAKW,SAAS,CAACQ,MAAO,OACtBnB,EAAKJ,MAAMsD,aAAelD,EAAKJ,MAAMsD,aAAY,KAEtElD,EAAKJ,MAAMqC,cAAgB7C,IAAYI,WAAWF,MAAQ,4FAC1DU,EAAKJ,MAAMqC,cAAgB7C,IAAYC,WAAWC,MAAQ,4MAC1DU,EAAKJ,MAAMqC,cAAgB7C,IAAYG,SAASD,MAAQ,6MAE3D0B,SAAS,QAhBb,CAmBO,GAAIP,EAASI,KAAKU,MAAQd,EAASI,KAAKU,KAAKe,cAAgBtC,EAAKJ,MAAMsC,qBAAqBiB,OAAQ,CAC1GnD,EAAKJ,MAAMsD,aAAY,GACvB,IAAIE,EAAUpD,EAAKJ,MAAMqC,cAAgB7C,IAAYI,WAAWF,KAAO,iEACpEU,EAAKJ,MAAMqC,YAAgB7C,IAAYC,WAAWC,KAAO,sJAE5D+D,IAAMC,QAAQF,EAAS,CACrBG,SAAU,YACVC,OAAQ,aACRC,QAAS,MAIbzD,EAAKW,SAAS,CACZY,KAAMA,EACNC,KAAMA,EACNF,MAAOb,EAASI,KAAKU,MAAQd,EAASI,KAAKU,KAAKe,cAChDjC,QAASI,EAASI,KAAKU,MAAQd,EAASI,KAAKU,KAAKlB,QAClDW,SAAS,GACR,KAC2C,iBAAxCP,EAASI,KAAKU,KAAKlB,QAAQ,GAAGD,OAChCJ,EAAKJ,MAAM8D,mBAAkB,GAEjC1D,EAAKJ,MAAM+D,WAAWlD,EAASI,KAAK+C,kBAES,iBAAxCnD,EAASI,KAAKU,KAAKlB,QAAQ,GAAGD,cACzBJ,EAAKF,sBACLE,EAAKiB,oBACPjB,EAAKI,MAAMc,iBAAmBlB,EAAKI,MAAMQ,eAC3CZ,EAAKJ,MAAMiE,0BAEX7D,EAAKJ,MAAMkE,2BAGhBC,OAAM,SAAUjD,GACnBd,EAAKW,SAAS,CAACK,SAAS,IACxBD,YAAeD,MAInBc,iBACE3B,KAAKU,SAAS,CAACR,IAAK,KAAM6D,YAAY,IAGxCrC,cAAcsC,GACZ,IAAIjE,EAAOC,KACPC,EAAS,CACXC,IAAK,+BACL+D,aAAc,cACd1D,OAAQ,OACRK,KAAMoD,EAAI1D,IAEZP,EAAKW,SAAS,CAACqD,YAAY,IAC3BtD,YAASR,GACNkC,MAAK,SAAU3B,GACd,IAAI0D,EAAO,IAAIC,KAAK,CAAC3D,EAASI,MAAO,CAACwD,KAAM5D,EAAS6D,QAAQ,kBACzDC,EAAW,GACf,QAAYvC,GAARmC,EAAmB,CACrB,IAAIK,EAAS,IAAIC,WACjBD,EAAOE,cAAcP,GACrBK,EAAOG,UAAY,WACjBJ,EAAaC,EAAOI,OACpB5E,EAAKW,SAAS,CAACR,IAAKoE,SAGvBR,OAAM,SAAUjD,GACnBC,YAAeD,GACfd,EAAKW,SAAS,CAACqD,YAAY,OAI/Ba,SAEE,IAAIC,EAAa,CACf,CACEC,OAAQ,WACRlD,SAAU,OACVmD,KAAMf,GACJ1B,IAAAC,cAAA,aACKyB,EAAIgB,MAAQC,IAAOjB,EAAIgB,KAAM,cAAcE,OAAO,aAI3D,CACEJ,OAAQ,OACRlD,SAAU,aACVmD,KAAMf,GACJ1B,IAAAC,cAAA,WACIyB,EAAI3D,UAAY2D,EAAI3D,SAAS8E,MAAS7C,IAAAC,cAAA,QAAM6C,UAAU,gBAAgBpB,EAAIqB,cACzErB,EAAI3D,UAAY2D,EAAI3D,SAAS8E,OAAS7C,IAAAC,cAAA,QAAM6C,UAAU,eAAepB,EAAIqB,cAIlF,CACEP,OAAQ,WACRlD,SAAU,gBACVmD,KAAMf,GAAQ1B,IAAAC,cAAA,WAAMyB,EAAI3D,UAAY2D,EAAI3D,SAAS8E,OAGnD,CACEL,OAAQ,cACRlD,SAAU,mBACVmD,KAAMf,GAAQ1B,IAAAC,cAAA,WAAMyB,EAAI3D,UAAY2D,EAAI3D,SAASiF,UAGnD,CACER,OAAQ,aACRlD,SAAU,sBACVmD,KAAMf,GACJ1B,IAAAC,cAAA,WACGyB,EAAI3D,UAAY2D,EAAI3D,SAASkF,aAIpC,CACET,OAAQ,8BACRlD,SAAU,eACVmD,KAAMf,GACF1B,IAAAC,cAAA,OAAKiD,MAAO,CAACC,OAAQ,IAClBzB,EAAI0B,eAIb,CACEZ,OAAQ,SACRlD,SAAU,QACVmD,KAAMf,GACJ1B,IAAAC,cAAA,WACGyB,EAAInD,OAASyB,IAAAC,cAAA,QAAM6C,UAAU,eAAepB,EAAInD,QAC/CmD,EAAInD,OACNyB,IAAAC,cAAA,QACE6C,UAAW,QAAUO,IAAc3B,EAAI7D,OAAOyF,aAAcD,IAAc3B,EAAI7D,OAAOgD,WAI7F,CACE2B,OAAQ,qBACRe,UAAU,EACVjE,SAAU,GACVmD,KAAMf,GACJ1B,IAAAC,cAAA,OAAKiD,MAAO,CAACM,UAAW,SACtBxD,IAAAC,cAAA,UAAQI,MAAM,uCAA2ByC,UAAU,+BAC3CI,MAAO,CAACC,OAAQ,WAChBM,QAASC,GAAKhG,KAAK0B,cAAcsC,IACvC1B,IAAAC,cAAA,KAAG6C,UAAU,oCAMnBa,EAAUC,YAAyBrB,EAAY,WAAY7E,KAAKL,MAAMwG,YAC1E,OAAO7D,IAAAC,cAAA,WACJvC,KAAKG,MAAM4D,YACZzB,IAAAC,cAAC6D,IAAqB,CAACC,MAAOrG,KAAKG,MAAM4D,WAClB7D,IAAKF,KAAKG,MAAMD,IAChByC,MAAM,oBACN2D,SAAUtG,KAAK2B,eACf4E,WAAYvG,KAAK2B,iBAExCW,IAAAC,cAACiE,IAAK,CAACP,QAASA,EACT7F,QAASJ,KAAKG,MAAMC,QACpBW,QAASf,KAAKL,MAAMoB,QAAUf,KAAKL,MAAMoB,QAAUf,KAAKG,MAAMY,QAC9DM,MAAOrB,KAAKG,MAAMkB,MAClBC,KAAMtB,KAAKG,MAAMmB,KACjBF,OAAQpB,KAAKG,MAAMiB,OACnBG,KAAMvB,KAAKG,MAAMoB,KACjBkF,QAAS,CAAC,IAAK,KAAM,KAAM,KAAM,OACjCjF,UAAWxB,KAAKwB,YAEtBxB,KAAKG,MAAMe,QAKH1B,O,kCCnRf,qJAcA,MAAMkH,UAAmBjH,YAEvBC,YAAYC,GACVC,MAAMD,GAAO,KAqCfgH,gBAAkB,KAChB,IAAI5G,EAAOC,KACPC,EAAS,CACXC,IAAK,oCACLK,OAAQ,OAEVE,YAASR,GACNkC,MAAK,SAAU3B,GACdT,EAAKW,SAAS,CAACkG,QAASpG,EAASI,UAChCkD,OAAM,SAAUjD,GACnBC,YAAeD,OAEjB,KAEFgG,iBAAmB,KACjB,IAAI9G,EAAOC,KACPC,EAAS,CACXC,IAAK,qCACLK,OAAQ,OAEVE,YAASR,GACNkC,MAAK,SAAU3B,GACVA,EAASI,MACXb,EAAKW,SAAS,CAACoG,SAAUtG,EAASI,UAEnCkD,OAAM,SAAUjD,GACnBC,YAAeD,OA9DjBb,KAAKG,MAAQ,CACXY,SAAS,EACTgG,WAAW,EACXC,oBAAqB,EACrBC,eAAgB,EAChBtD,eAAgB,GAChBuD,YAAa,IAEflH,KAAKmH,iBAAmB7E,IAAM8E,YAE9BpH,KAAKqH,OAASrH,KAAKqH,OAAO5F,KAAKzB,MAC/BA,KAAKsH,aAAetH,KAAKsH,aAAa7F,KAAKzB,MAC3CA,KAAKuH,cAAgBvH,KAAKuH,cAAc9F,KAAKzB,MAC7CA,KAAKwH,iBAAmBxH,KAAKwH,iBAAiB/F,KAAKzB,MAGrDwH,iBAAiB3G,GACfb,KAAKmH,iBAAiBM,QAAQC,kBAAkB,CAC9CC,MAAO,KACPxE,QAAS,SAAWtC,EAAM+G,aAC1BxD,KAAM,SACNyD,YAAa,KAIjBC,oBACO9H,KAAKL,OAAUK,KAAKL,MAAMoI,UAAa/H,KAAKL,MAAMoI,SAASC,SAG9DhI,KAAKuH,gBACLvH,KAAKsH,eACLtH,KAAK2G,kBACL3G,KAAK6G,oBALL7G,KAAKL,MAAMkD,QAAQC,KAAK,CAACC,SAAU,IAAI/C,KAAKL,MAAMqD,+BAuCtDuE,gBACE,IAAIxH,EAAOC,KACPC,EAAS,CACXC,IAAK,8BACLK,OAAQ,OACRK,KAAMb,EAAKJ,MAAMoI,SAASpE,gBAE5B5D,EAAKW,SAAS,CAACK,SAAS,IACxBN,YAASR,GACNkC,MAAK,SAAU3B,GACVA,EAASI,MAAQJ,EAASI,KAAKsC,OAAS,EAC1CnD,EAAKW,SAAS,CAACwG,YAAa1G,EAASI,QAErCE,YAAe,CAACqC,QAAS,2GACzBpD,EAAKJ,MAAMkD,QAAQC,KAAK,CAACC,SAAU,IAAIhD,EAAKJ,MAAMqD,yBAA2BjD,EAAKJ,MAAMoI,SAASC,QAAQ1H,MAE3GP,EAAKW,SAAS,CAACK,SAAS,OAEzB+C,OAAM,SAAUjD,GACfC,YAAeD,GACfd,EAAKW,SAAS,CAACK,SAAS,OAI9BuG,eACE,IAAIvH,EAAOC,KACPC,EAAS,CACXC,IAAK,8BACLK,OAAQ,OACRK,KAAMb,EAAKJ,MAAMoI,SAASC,QAAQ1H,IAEpCP,EAAKW,SAAS,CAACK,SAAS,IACxBN,YAASR,GACNkC,MAAK,SAAU3B,GACdT,EAAKW,SAAS,CACZuH,UAAWzH,EAASI,KAAKqH,UACzBnB,SAAUtG,EAASI,KAAKkG,SACxB/F,SAAS,IAEPhB,EAAKJ,MAAMoI,SAAS5B,YACtBpG,EAAKW,SAAS,CAACwH,WAAY1H,EAASI,KAAKuH,aAG5CrE,OAAM,SAAUjD,GACfC,YAAeD,GACfd,EAAKW,SAAS,CAACK,SAAS,OAI9BsG,SACE,IAAItH,EAAOC,KACX,GAAID,EAAKI,MAAM+G,aAAenH,EAAKI,MAAM+G,YAAYhE,OAAS,EAAG,CAC/D,IAAIjD,EAAS,CACXC,IAAK,wBACLK,OAAQ,OACRK,KAAMb,EAAKI,MAAM+G,aAEnBnH,EAAKW,SAAS,CAAC0H,gBAAgB,IAC/B3H,YAASR,GACNkC,MAAK,SAAU3B,GACd4C,IAAMiF,QAAQ,yEAAkD,CAC9D/E,SAAU,YACVC,OAAQ,aACRC,QAAS,MAEXzD,EAAKW,SAAS,CAAC0H,gBAAgB,IAC/BrI,EAAKJ,MAAMkD,QAAQC,KAAK,CAACC,SAAU,IAAIhD,EAAKJ,MAAMqD,yBAA2BjD,EAAKJ,MAAMoI,SAASC,QAAQ1H,QAE1GwD,OAAM,SAAUjD,GACfC,YAAeD,GACfd,EAAKW,SAAS,CAAC0H,gBAAgB,YAGnCtH,YAAe,CAACqC,QAAS,4JAI7BmF,mBACE,OACEhG,IAAAC,cAACgG,MAAG,CAACnD,UAAU,SAASI,MAAO,CAACgD,YAAa,OAAQC,OAAQ,SAC3DnG,IAAAC,cAACmG,IAAW,CAACpF,SAAS,WAAW8B,UAAU,iBAAiBI,MAAO,CAACmD,SAAU,WACjEC,MAAM,OAAOjG,MAAM,wBACnBoD,QAASA,IAAM/F,KAAKL,MAAMkD,QAAQC,KAAK,CACrCC,SAAU,IAAI/C,KAAKL,MAAMqD,yBAA2BhD,KAAKL,MAAMoI,SAASC,QAAQ1H,GAChFqD,eAAgB3D,KAAKL,MAAMoI,SAASpE,mBAEnDrB,IAAAC,cAACmG,IAAW,CAACpF,SAAS,WAAW8B,UAAU,gBAAgBI,MAAO,CAACmD,SAAU,WAChEC,MAAM,mBAAgBjG,MAAM,2FAC5BoD,QAASA,KACP/F,KAAKU,SAAS,CACZQ,MACEoB,IAAAC,cAACC,IAAU,CAACqG,YAAU,EAACxF,SAAO,EAClBZ,eAAe,OACfqG,cAAc,aACdpG,kBAAkB,SAClBqG,iBAAiB,UACjBpG,MAAM,gBACNC,UAAWA,KACT5C,KAAKU,SAAS,CAACQ,MAAO,OACtBlB,KAAKqH,UAEP2B,SAAUA,IAAMhJ,KAAKU,SAAS,CAACQ,MAAO,QACjD,+CAU1B+H,mBAEE,OAAO3G,IAAAC,cAAC2G,YAAS,KACf5G,IAAAC,cAAA,OAAK6C,UAAU,YACZpF,KAAKL,MAAMoI,SAAS5B,YACrB7D,IAAAC,cAAC4G,MAAG,CAACC,GAAI,GACP9G,IAAAC,cAAC8G,MAAG,CAACD,GAAI,EAAG5D,MAAO,CAAC8D,IAAK,QAAQ,mBAGjChH,IAAAC,cAAC8G,MAAG,CAACD,GAAI,GACP9G,IAAAC,cAACgH,QAAK,CAACnF,KAAK,OAAOoB,MAAO,CAACgE,UAAW,OAC/BC,MAAOzJ,KAAKG,MAAM+H,WAClBwB,SAAS,MAGpBpH,IAAAC,cAAC4G,MAAG,CAACC,GAAI,GACP9G,IAAAC,cAAC8G,MAAG,CAACD,GAAI,EAAG5D,MAAO,CAAC8D,IAAK,QAAQ,gBAGjChH,IAAAC,cAAC8G,MAAG,CAACD,GAAI,GACP9G,IAAAC,cAACgH,QAAK,CAACnF,KAAK,OAAOoB,MAAO,CAACgE,UAAW,OAC/BC,MAAOzJ,KAAKG,MAAM8H,UAClByB,SAAS,MAGpBpH,IAAAC,cAAC4G,MAAG,CAACC,GAAI,GACP9G,IAAAC,cAAC8G,MAAG,CAACD,GAAI,EAAG5D,MAAO,CAAC8D,IAAK,SAAS,0BAGlChH,IAAAC,cAAC8G,MAAG,CAACD,GAAI,GACP9G,IAAAC,cAACgH,QAAK,CAACnF,KAAK,WAAWuF,KAAM,EACtBnE,MAAO,CAACiD,OAAQ,QAASmB,OAAQ,oBAAqBJ,UAAW,OACjEC,MAAOzJ,KAAKG,MAAM2G,SAClB4C,SAAS,OAGlB1J,KAAKL,MAAMoI,SAAS5B,YACtB7D,IAAAC,cAAC4G,MAAG,CAACC,GAAI,GACP9G,IAAAC,cAAC8G,MAAG,CAACD,GAAI,EAAG5D,MAAO,CAAC8D,IAAK,SAAS,sBAGlChH,IAAAC,cAAC8G,MAAG,CAACD,GAAI,GACP9G,IAAAC,cAACgH,QAAK,CAACnF,KAAK,WAAWuF,KAAM,EAAGE,UAAU,EACnCrE,MAAO,CACLiD,OAAQ,QACRmB,OAAQ,oBACRJ,UAAW,MACXM,QAAS,WAEXL,MAAOzJ,KAAKG,MAAMyG,cAOnCmD,mBACE,OAAOzH,IAAAC,cAAC/C,IAAqB,CAAC4C,cAAepC,KAAKL,MAAMoI,SAASC,QACnC/F,qBAAsBjC,KAAKG,MAAM+G,YACjCxD,WAAYsC,GAAKhG,KAAKU,SAAS,CAACwG,YAAalB,IAC7CgE,SAAU,GAAInH,QAAS7C,KAAKL,MAAMkD,QAASG,SAAUhD,KAAKL,MAAMqD,SAChEhB,YAAa7C,IAAYI,WAAWF,OAGpEuF,SACE,OACEtC,IAAAC,cAAC4G,MAAG,CAAC/D,UAAU,kBACb9C,IAAAC,cAAC0H,IAAM,CAACC,IAAKlK,KAAKmH,iBAAkB/B,UAAU,eAC7CpF,KAAKsI,mBACLtI,KAAKG,MAAMe,OACZoB,IAAAC,cAAA,OAAK6C,UAAU,iBACb9C,IAAAC,cAAC0H,IAAM,CAACC,IAAKlK,KAAKmK,SACjBnK,KAAKG,MAAMe,OAEdoB,IAAAC,cAAA,OAAK6C,UAAU,iBACb9C,IAAAC,cAAC8G,MAAG,CAACe,GAAG,MACN9H,IAAAC,cAAC8H,OAAI,CAACjF,UAAU,QACd9C,IAAAC,cAAC+H,aAAU,KACThI,IAAAC,cAACgI,YAAS,CAACC,IAAI,MAAK,gCAItBlI,IAAAC,cAACkI,WAAQ,KACNzK,KAAKL,MAAMoI,SAASC,SAAWhI,KAAKiJ,oBAEvC3G,IAAAC,cAACkI,WAAQ,KACNzK,KAAKG,MAAM+G,aAAelH,KAAKG,MAAM+G,YAAYhE,OAAS,GAAKlD,KAAK+J,yBAUtErD","file":"static/js/22.fa917024.chunk.js","sourcesContent":["let ProcessCode = {\n    SIGNBORDRO: {\n        code: 0\n    },\n    SIGNMIME: {\n        code: 1\n    },\n    RESENDMIME: {\n        code: 2\n    }\n};\n\nexport default ProcessCode;","import React, {Component} from 'react';\nimport Table from \"../../../../components/Table/Table\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport 'react-datetime/css/react-datetime.css'\nimport moment from 'moment';\nimport 'moment/locale/tr'\nimport Alert from \"react-s-alert\";\nimport ProcessCode from \"../../bordrosession/helper/ProcessCode\";\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {renewListForKepOwnership} from \"../../common/PeykHelper\";\nimport DocumentState from \"../../common/DocumentState\";\nimport ApproveDocumentViewer from \"../../approval/helper/ApproveDocumentViewer\";\n\nclass BordroTableIdSelected extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      alert: null,\n      selection: [],\n      manual: false,\n      content: [],\n      total: 0,\n      page: 0,\n      size: 10\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.previewBordro = this.previewBordro.bind(this);\n    this.setMediaViewer = this.setMediaViewer.bind(this);\n  }\n\n  getEmployeeId = async () => {\n    let self = this;\n    let employeeId = this.state.content[0].employee.id;\n    let params = {\n      url: `/employee/getEmployeeId/${employeeId}`,\n      method: \"post\"\n    };\n\n    try {\n      let response = await requestK(params);\n      self.setState({\n        employeeUserId: response.data\n      });\n    } catch (error) {\n      showAxiosError(error);\n      self.setState({ loading: false });\n    }\n  };\n\n  getApprovalUserId = async () => {\n    let self = this;\n    let approvalId = this.state.content[0].id;\n    let params = {\n      url: `/approval/getApprovalUserId/${approvalId}`,\n      method: \"post\"\n    };\n\n    try {\n      let response = await requestK(params);\n      self.setState({\n        approvalUserId: response.data\n      });\n    } catch (error) {\n      showAxiosError(error);\n      self.setState({ loading: false });\n    }\n  };\n\n  fetchData(accessor, direction, page, size) {\n    let self = this;\n    let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '';\n    let params = {\n      url: '/bordro/readBordroAllByIds?processCode=' + self.props.processCode + '&page=' + page + '&size=' + size + sortStr,\n      method: \"post\",\n      data: self.props.selectedBordroIdList\n    };\n    self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n    requestK(params)\n        .then(async function (response) {\n        let id = self.props.bordroSession && self.props.bordroSession.id;\n        if (response.data.page && response.data.page.totalElements === 0) {\n          self.setState({\n            alert: (<SweetAlert error\n                                confirmBtnText=\"Tamam\"\n                                confirmBtnBsStyle=\"danger\"\n                                title=\"Hata\"\n                                onConfirm={() => {\n                                  id ?\n                                    self.props.history.push({pathname: `/${self.props.peykName}/bordroimport/` + id}) :\n                                    self.setState({alert: null});\n                                    self.props.toggleModal && self.props.toggleModal(true);\n                                }}>\n              {self.props.processCode === ProcessCode.RESENDMIME.code && \"Seçilen alıcıların onayda bekleyen gönderileri bulunmamaktadır.\"}\n              {self.props.processCode === ProcessCode.SIGNBORDRO.code && \"Seçilen ücret bordrolarının imzalı iletiler bulunduğu veya çalışan eşleşmesi yapılmamış olduğu için bu işlem yapılamaz.\"}\n              {self.props.processCode === ProcessCode.SIGNMIME.code && \"Seçilen ücret bordrolarının imzalı iletiler bulunduğu veya çalışan eşleşmesi yapılmamış olduğu için bu işlem yapılamaz.\"}\n            </SweetAlert>),\n            loading: false\n          });\n          return;\n        } else if (response.data.page && response.data.page.totalElements < self.props.selectedBordroIdList.length) {\n          self.props.toggleModal(false);\n          let message = self.props.processCode === ProcessCode.RESENDMIME.code ? 'Tekrar gönderime hazır bordrolar seçilmiştir.' :\n            (self.props.processCode === ProcessCode.SIGNBORDRO.code ? 'Çalışan eşleşmesi olmayanlar ve daha önce gönderilmiş bordro listeden çıkarılmıştır.' :\n              'Çalışan eşleşmesi olmayanlar ve daha önce gönderilmiş bordro listeden çıkarılmıştır.');\n          Alert.warning(message, {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 8000\n          });\n        }\n\n        self.setState({\n          page: page,\n          size: size,\n          total: response.data.page && response.data.page.totalElements,\n          content: response.data.page && response.data.page.content,\n          loading: false\n        }, () => {\n          if (response.data.page.content[0].state === \"FLOW_TIMEOUT\") {\n            self.props.updateFlowTimeout(true);\n          }\n        self.props.onComplete(response.data.selectedIdList);\n        });\n          if(response.data.page.content[0].state === 'FLOW_TIMEOUT'){\n            await self.getEmployeeId();\n            await self.getApprovalUserId();\n            if (self.state.approvalUserId === self.state.employeeUserId) {\n              self.props.readFlowTimeoutTemplate();\n            } else {\n              self.props.readTimeoutTemplate();\n            }\n          }\n      }).catch(function (error) {\n      self.setState({loading: false});\n      showAxiosError(error);\n    });\n  }\n\n  setMediaViewer() {\n    this.setState({url: null, mediaModal: false});\n  }\n\n  previewBordro(row) {\n    let self = this;\n    let params = {\n      url: `/bordro/previewBordroContent`,\n      responseType: 'arraybuffer',\n      method: \"post\",\n      data: row.id\n    };\n    self.setState({mediaModal: true});\n    requestK(params)\n      .then(function (response) {\n        let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n        let base64Data=\"\";\n        if (blob != undefined) {\n          let reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = function() {\n            base64Data = reader.result;\n            self.setState({url: base64Data});\n          }\n        }\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({mediaModal: false});\n    });\n  }\n\n  render() {\n\n    let columnList = [\n      {\n        Header: \"Dönem\",\n        accessor: \"term\",\n        Cell: row => (\n          <div>\n            {!!row.term && moment(row.term, 'YYYY/MM/DD').format('YYYY/MM')}\n          </div>\n        )\n      },\n      {\n        Header: \"TCKN\",\n        accessor: \"parsedTckn\",\n        Cell: row => (\n          <div>\n            {(row.employee && row.employee.name) && <span className=\"text-success\">{row.parsedTckn}</span>}\n            {!(row.employee && row.employee.name) && <span className=\"text-danger\">{row.parsedTckn}</span>}\n          </div>\n        )\n      },\n      {\n        Header: \"Adı\",\n        accessor: \"employee_name\",\n        Cell: row => (<div>{row.employee && row.employee.name}</div>\n        )\n      },\n      {\n        Header: \"Soyadı\",\n        accessor: \"employee_surname\",\n        Cell: row => (<div>{row.employee && row.employee.surname}</div>\n        )\n      },\n      {\n        Header: \"Kep Adresi\",\n        accessor: \"employee_kepAddress\",\n        Cell: row => (\n          <div>\n            {row.employee && row.employee.kepAddress}\n          </div>\n        )\n      },\n      {\n        Header: \"Uyarı Sayısı\",\n        accessor: \"warningCount\",\n        Cell: row => (\n            <div style={{margin: 0}}>\n              {row.warningCount}\n            </div>\n        )\n      },\n      {\n        Header: \"Durumu\",\n        accessor: \"state\",\n        Cell: row => (\n          <div>\n            {row.error && <span className=\"text-danger\">{row.error}</span>}\n            {!row.error &&\n            <span\n              className={\"text-\" + DocumentState[row.state].messageType}>{DocumentState[row.state].message}</span>}\n          </div>\n        )\n      },\n      {\n        Header: \"İşlemler\",\n        sortable: false,\n        accessor: \"\",\n        Cell: row => (\n          <div style={{textAlign: 'left'}}>\n            <button title=\"Ücret Bordrosu Görüntüle\" className=\"btn-icon btn btn-info btn-sm\"\n                    style={{margin: '0px 3px'}}\n                    onClick={e => this.previewBordro(row)}>\n              <i className=\"now-ui-icons ui-1_zoom-bold\"/>\n            </button>\n          </div>\n        )\n      }\n    ];\n    let columns = renewListForKepOwnership(columnList, \"accessor\", this.props.isKepOwner);\n    return <div>\n      {this.state.mediaModal &&\n      <ApproveDocumentViewer modal={this.state.mediaModal}\n                             url={this.state.url}\n                             title=\"Ücret Bordrosu\"\n                             listener={this.setMediaViewer}\n                             closeModal={this.setMediaViewer}/>\n      }\n      <Table columns={columns}\n             content={this.state.content}\n             loading={this.props.loading ? this.props.loading : this.state.loading}\n             total={this.state.total}\n             page={this.state.page}\n             manual={this.state.manual}\n             size={this.state.size}\n             options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n             fetchData={this.fetchData}\n      />\n      {this.state.alert}\n    </div>;\n  }\n}\n\nexport default BordroTableIdSelected;\n","import React, {Component} from 'react';\nimport {Card, CardBody, CardHeader, CardTitle, Col, Container, Input, Nav, Row} from 'reactstrap';\nimport 'react-table/react-table.css'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Notify from 'react-notification-alert';\nimport 'react-datetime/css/react-datetime.css'\nimport 'moment/locale/tr'\nimport BordroTableIdSelected from \"../bordro/component/BordroTableIdSelected\";\nimport StickButton from \"../../../components/StickButton\";\nimport ProcessCode from \"./helper/ProcessCode\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport Alert from \"react-s-alert\";\n\nclass ResendPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      completed: false,\n      signedDocumentCount: 0,\n      progressLength: 1,\n      selectedIdList: [],\n      timeoutList: []\n    };\n    this.notifyMimeResend = React.createRef();\n\n    this.resend = this.resend.bind(this);\n    this.readMimeInfo = this.readMimeInfo.bind(this);\n    this.checkTimeouts = this.checkTimeouts.bind(this);\n    this.showErrorMessage = this.showErrorMessage.bind(this);\n  }\n\n  showErrorMessage(error) {\n    this.notifyMimeResend.current.notificationAlert({\n      place: 'tr',\n      message: 'Hata: ' + error.errorMessage,\n      type: 'danger',\n      autoDismiss: 10,\n    });\n  }\n\n  componentDidMount() {\n    if (!this.props || !this.props.location || !this.props.location.session)\n      this.props.history.push({pathname: `/${this.props.peykName}/bordrosessionlist`});\n    else {\n      this.checkTimeouts();\n      this.readMimeInfo();\n      this.readSmsTemplate();\n      this.readMailTemplate();\n    }\n  }\n\n  readSmsTemplate = () => {\n    let self = this;\n    let params = {\n      url: `/signer/readBordroSmsTemplateInfo`,\n      method: \"get\"\n    };\n    requestK(params)\n      .then(function (response) {\n        self.setState({smsBody: response.data})\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n  };\n\n  readMailTemplate = () => {\n    let self = this;\n    let params = {\n      url: `/signer/readBordroMailTemplateInfo`,\n      method: \"get\"\n    };\n    requestK(params)\n      .then(function (response) {\n        if (response.data) {\n          self.setState({mimeBody: response.data})\n        }\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n  };\n\n  checkTimeouts() {\n    let self = this;\n    let params = {\n      url: '/bordrosession/readTimeouts',\n      method: \"post\",\n      data: self.props.location.selectedIdList\n    };\n    self.setState({loading: true});\n    requestK(params)\n      .then(function (response) {\n        if (response.data && response.data.length > 0) {\n          self.setState({timeoutList: response.data});\n        } else {\n          showAxiosError({message: \"Seçili listede zaman aşımına düşmüş doküman bulunmamaktadır.\"});\n          self.props.history.push({pathname: `/${self.props.peykName}/bordroimport/` + self.props.location.session.id});\n        }\n        self.setState({loading: false});\n      })\n      .catch(function (error) {\n        showAxiosError(error);\n        self.setState({loading: false});\n      });\n  }\n\n  readMimeInfo() {\n    let self = this;\n    let params = {\n      url: '/bordrosession/readMimeInfo',\n      method: \"post\",\n      data: self.props.location.session.id\n    };\n    self.setState({loading: true});\n    requestK(params)\n      .then(function (response) {\n        self.setState({\n          mimeTitle: response.data.mimeTitle,\n          mimeBody: response.data.mimeBody,\n          loading: false,\n        });\n        if (self.props.location.isKepOwner) {\n          self.setState({kepAccount: response.data.account});\n        }\n      })\n      .catch(function (error) {\n        showAxiosError(error);\n        self.setState({loading: false});\n      });\n  }\n\n  resend() {\n    let self = this;\n    if (self.state.timeoutList && self.state.timeoutList.length > 0) {\n      let params = {\n        url: `/bordrosession/resend`,\n        method: \"post\",\n        data: self.state.timeoutList\n      };\n      self.setState({disableSendBtn: true});\n      requestK(params)\n        .then(function (response) {\n          Alert.success(\"Dokümanlar tekrar gönderim için işleme alındı.\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 2000\n          });\n          self.setState({disableSendBtn: false});\n          self.props.history.push({pathname: `/${self.props.peykName}/bordroimport/` + self.props.location.session.id});\n        })\n        .catch(function (error) {\n          showAxiosError(error);\n          self.setState({disableSendBtn: false});\n        });\n    } else {\n      showAxiosError({message: \"Zaman aşımına uğramış liste algılanamadı. Lütfen bu sayfadan çıkıp yapıp tekrar deneyiniz.\"});\n    }\n  }\n\n  renderNavButtons() {\n    return (\n      <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n        <StickButton position=\"leftSide\" className=\"zocial GeriDon\" style={{fontSize: 'x-small'}}\n                     label=\"Geri\" title=\"Önceki Sayfaya Git\"\n                     onClick={() => this.props.history.push({\n                       pathname: `/${this.props.peykName}/bordroimport/` + this.props.location.session.id,\n                       selectedIdList: this.props.location.selectedIdList\n                     })}/>\n        <StickButton position=\"leftSide\" className=\"zocial Gonder\" style={{fontSize: 'x-small'}}\n                     label=\"Tekrar Gönder\" title=\"Zaman Aşımına Uğramış Dokümanları Tekrar Gönder\"\n                     onClick={() => {\n                       this.setState({\n                         alert: (\n                           <SweetAlert showCancel warning\n                                       confirmBtnText=\"Evet\"\n                                       cancelBtnText=\"Hayır\"\n                                       confirmBtnBsStyle=\"danger\"\n                                       cancelBtnBsStyle=\"default\"\n                                       title=\"Emin misiniz?\"\n                                       onConfirm={() => {\n                                         this.setState({alert: null});\n                                         this.resend()\n                                       }}\n                                       onCancel={() => this.setState({alert: null})}\n                           >\n                             Dokümanlar tekrar gönderilecek.\n                           </SweetAlert>\n                         )\n                       });\n                     }}/>\n      </Nav>\n    );\n  }\n\n  renderMimeInputs() {\n\n    return <Container>\n      <div className=\"FormRenk\">\n        {this.props.location.isKepOwner &&\n        <Row sm={6}>\n          <Col sm={2} style={{top: '7px'}}>\n            Kep Hesabı\n          </Col>\n          <Col sm={6}>\n            <Input type=\"text\" style={{marginTop: '2px'}}\n                   value={this.state.kepAccount}\n                   disable={true}/>\n          </Col>\n        </Row>}\n        <Row sm={6}>\n          <Col sm={2} style={{top: '5px'}}>\n            E-posta Konu\n          </Col>\n          <Col sm={6}>\n            <Input type=\"text\" style={{marginTop: '2px'}}\n                   value={this.state.mimeTitle}\n                   disable={true}/>\n          </Col>\n        </Row>\n        <Row sm={6}>\n          <Col sm={2} style={{top: '25px'}}>\n            E-Posta İçerik\n          </Col>\n          <Col sm={6}>\n            <Input type=\"textarea\" rows={5}\n                   style={{height: '200px', border: '1px solid #E3E3E3', marginTop: '2px'}}\n                   value={this.state.mimeBody}\n                   disable={true}/>\n          </Col>\n        </Row>\n        {!this.props.location.isKepOwner &&\n        <Row sm={6}>\n          <Col sm={2} style={{top: '25px'}}>\n            SMS İçerik\n          </Col>\n          <Col sm={6}>\n            <Input type=\"textarea\" rows={5} disabled={true}\n                   style={{\n                     height: '200px',\n                     border: '1px solid #E3E3E3',\n                     marginTop: '2px',\n                     padding: '3px 3px'\n                   }}\n                   value={this.state.smsBody}/>\n          </Col>\n        </Row>}\n      </div>\n    </Container>\n  }\n\n  renderBordroList() {\n    return <BordroTableIdSelected bordroSession={this.props.location.session}\n                                  selectedBordroIdList={this.state.timeoutList}\n                                  onComplete={e => this.setState({timeoutList: e})}\n                                  pageSize={10} history={this.props.history} peykName={this.props.peykName}\n                                  processCode={ProcessCode.RESENDMIME.code}/>\n  }\n\n  render() {\n    return (\n      <Row className=\"baseBackground\">\n        <Notify ref={this.notifyMimeResend} className=\"modalAlert\"/>\n        {this.renderNavButtons()}\n        {this.state.alert &&\n        <div className=\"row satirBasi\">\n          <Notify ref={this.notify}/>\n          {this.state.alert}\n        </div>}\n        <div className=\"row satirBasi\">\n          <Col md=\"12\">\n            <Card className=\"card\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">\n                  Doküman Tekrar Gönder\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                {this.props.location.session && this.renderMimeInputs()}\n              </CardBody>\n              <CardBody>\n                {this.state.timeoutList && this.state.timeoutList.length > 0 && this.renderBordroList()}\n              </CardBody>\n            </Card>\n          </Col>\n        </div>\n      </Row>\n    );\n  }\n}\n\nexport default ResendPage;\n"],"sourceRoot":""}