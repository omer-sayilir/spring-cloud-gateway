{"version":3,"sources":["accounting/kepik/formparameter/FormParameterPage.js"],"names":["FormParameterPage","Component","constructor","props","super","this","state","pageNumber","pageSize","loading","manual","list","total","searching","searchQuery","undefined","page","size","searchKey","steps","target","content","placement","locale","back","close","last","next","skip","joyrideActive","shouldRun","stop","editValidateDef","title","v","validator","isEmpty","value","fetchData","bind","handleSearch","editClicked","saveClicked","createClicked","deleteClicked","editClassName","searchWithKey","editHandleInputChange","callback","setState","accessor","direction","e","self","sortStr","params","url","method","reload","requestK","then","response","data","totalElements","catch","error","showAxiosError","selected","valid","displayCreateUpdateDialog","row","clone","Object","assign","disabledDeleteBtn","message","alert","Alert","success","position","effect","timeout","formParameter","disabledSaveBtn","event","type","checked","name","toString","includes","prevState","invalid","renderCreateUpdateModal","React","createElement","Modal","isOpen","toggle","ModalHeader","className","ModalBody","Form","FormGroup","Label","sm","for","Col","Input","onChange","ModalFooter","Button","style","paddingLeft","width","color","onClick","disabled","activateJoyride","flag","action","render","columns","Header","Cell","margin","moment","createdAt","isValid","format","updatedAt","sortable","textAlign","MiniButton","faIcon","SweetAlertExt","showCancel","warning","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","onCancel","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","options","zIndex","primaryColor","Nav","height","StickButton","label","fontSize","right","marginTop","paddingBottom","marginBottom","DetailedSearch","fields","operator","onSearch","Table"],"mappings":"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","file":"static/js/42.55f24bfa.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Nav} from 'reactstrap';\nimport Table from '../../../components/Table/Table';\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport StickButton from \"../../../components/StickButton\";\nimport MiniButton from \"../../../components/MiniButton\";\nimport SweetAlertExt from \"../../../components/SweetAlertExt\";\nimport validator from \"validator\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport Alert from \"react-s-alert\";\nimport moment from \"moment/moment\";\nimport Joyride from \"react-joyride\";\n\nclass FormParameterPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageNumber: 0,\n            pageSize: 10,\n            loading: false,\n            manual: false,\n            list: [],\n            total: 0,\n            searching: false,\n            searchQuery: undefined,\n            page: 0,\n            size: 10,\n            searchKey: \"\",\n            steps: [\n                {\n                    target: '.main-panel',\n                    content: \"firma parametreleri\",\n                    placement: \"center\",\n                },\n                {\n                    target: '.zocial',\n                    content: 'Bordro yüklemek için lütfen \"Ücret Bordrosu Yükle\" butonuna tıklayınız.',\n                    placement: \"bottom-start\",\n                },\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            stop: false\n        };\n\n        this.editValidateDef = {\n            title: v => !validator.isEmpty(v),\n            value: v => !validator.isEmpty(v)\n        };\n\n        this.fetchData = this.fetchData.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.editClicked = this.editClicked.bind(this);\n        this.saveClicked = this.saveClicked.bind(this);\n        this.createClicked = this.createClicked.bind(this);\n        this.deleteClicked = this.deleteClicked.bind(this);\n        this.editClassName = this.editClassName.bind(this);\n        this.searchWithKey = this.searchWithKey.bind(this);\n        this.editHandleInputChange = this.editHandleInputChange.bind(this);\n        this.callback = this.callback.bind(this);\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({searchQuery, searching: true},\n            () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size));\n    }\n\n    searchWithKey(e) {\n        let value = e.target.value;\n        this.setState({searchKey: e.target.value, manual: true});\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/formparameter/readFormParameters?page=' + page + '&size=' + size + searchQuery + sortStr,\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        self.props.reload(true);\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: response.data.totalElements,\n                    list: response.data.content,\n                    loading: false,\n                    searching: false\n                });\n                self.props.reload(false);\n            }).catch(function (error) {\n            self.setState({loading: false, searching: false});\n            self.props.reload(false);\n            showAxiosError(error);\n        });\n    }\n\n    createClicked() {\n        this.setState({\n            selected: {title: \"\", value: \"\"},\n            valid: {},\n            displayCreateUpdateDialog: true\n        });\n    }\n\n    editClicked(row) {\n        let clone = Object.assign({}, row);\n        delete clone[\"_$visited\"];\n        this.setState({\n            selected: clone,\n            valid: {},\n            displayCreateUpdateDialog: true\n        });\n    }\n\n    deleteClicked(row) {\n        let self = this;\n        let params = {\n            url: `/formparameter/deleteFormParameter`,\n            method: \"post\",\n            data: row\n        };\n        self.setState({disabledDeleteBtn:true});\n        requestK(params)\n        .then(function (response) {\n            let message = response.data;\n            self.setState({\n                selected: null,\n                manual: true,\n                alert: null,\n                disabledDeleteBtn:false\n            });\n            Alert.success(message, {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDeleteBtn: false});\n        });\n    }\n\n    saveClicked() {\n        let formParameter = Object.assign({}, this.state.selected);\n        let self = this;\n        let params = {\n            url: `/formparameter/saveFormParameter`,\n            method: \"post\",\n            data: formParameter\n        };\n        self.setState({disabledSaveBtn: true});\n        requestK(params)\n            .then(function (response) {\n                let message = response.data;\n                self.setState({\n                    selected: null,\n                    displayCreateUpdateDialog: false,\n                    manual: true,\n                    disabledSaveBtn:false\n                });\n                Alert.success(message, {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledSaveBtn:false});\n        });\n    }\n\n    editHandleInputChange(event) {\n        const target = event.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n\n        if (!(name === \"title\" && value.toString().includes(' '))) {\n            let valid = this.editValidateDef[name] && this.editValidateDef[name](value);\n            this.setState((prevState, props) => {\n                prevState.selected[name] = value;\n                prevState.valid[name] = valid;\n                return {\n                    selected: prevState.selected,\n                    valid: prevState.valid\n                };\n            });\n        }\n    }\n\n    editClassName(name) {\n        let valid = this.state.valid[name];\n        if (typeof valid !== \"boolean\")\n            return undefined;\n        else {\n            return {\n                valid: valid,\n                invalid: !valid\n            };\n        }\n    }\n\n    renderCreateUpdateModal() {\n        return <Modal isOpen={this.state.displayCreateUpdateDialog} size=\"md\" toggle={() => this.setState({displayCreateUpdateDialog: false})}>\n            <ModalHeader className=\"justify-content-center\"\n                         toggle={() => this.setState({displayCreateUpdateDialog: false})}>\n                Dahili Parametre Tanımı\n            </ModalHeader>\n            <ModalBody>\n                {this.state.selected && <div>\n                    <Form>\n                        <FormGroup row>\n                            <Label sm={4} for=\"name\">Parametre Adı: *</Label>\n                            <Col sm={8}>\n                                <Input type=\"text\" name=\"title\" value={this.state.selected.title}\n                                       onChange={this.editHandleInputChange} {...this.editClassName(\"title\")}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={4} for=\"country\">Parametre Değeri: *</Label>\n                            <Col sm={8}>\n                                <Input type=\"text\" name=\"value\" value={this.state.selected.value}\n                                       onChange={this.editHandleInputChange} {...this.editClassName(\"value\")}/>\n                            </Col>\n                        </FormGroup>\n                    </Form>\n                </div>}\n            </ModalBody>\n            <ModalFooter>\n                <Button title=\"İptal\" style={{paddingLeft: '16px', width: '100px'}} color=\"secondary\"\n                        onClick={() => this.setState({displayCreateUpdateDialog: false})}>\n                    İptal\n                </Button>\n                <Button title=\"Kaydet\" style={{paddingLeft: '16px', width: '100px'}} color=\"primary\"\n                        disabled={this.state.disabledSaveBtn || !(this.state.selected && this.state.selected.title && this.state.selected.value)}\n                        onClick={this.saveClicked}>\n                    Kaydet\n                </Button>\n            </ModalFooter>\n        </Modal>\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true})\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback(data) {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false})\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let locale = this.state.locale;\n\n        let columns = [\n            {\n                Header: \"Parametre Adı\",\n                accessor: \"title\"\n            },\n            {\n                Header: \"Parametre Değeri\",\n                accessor: \"value\"\n            },\n            {\n                Header: \"Oluşturulma Zamanı\",\n                accessor: \"createdAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {moment(row.createdAt).isValid() ? moment(row.createdAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}\n                    </div>\n                )\n            },\n            {\n                Header: \"Güncellenme Zamanı\",\n                accessor: \"updatedAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {moment(row.updatedAt).isValid() ? moment(row.updatedAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}\n                    </div>\n                )\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: row => (\n                    <div style={{textAlign: 'left'}}>\n                        <MiniButton title=\"Düzenle\" faIcon=\"fa-edit\" onClick={() => this.editClicked(row)}\n                                    color=\"success\"/>\n                        <MiniButton title=\"Sil\" faIcon=\"fa-trash\" color=\"danger\"\n                                    onClick={e => {\n                                        this.setState({\n                                            alert: (\n                                                <SweetAlertExt showCancel warning\n                                                               confirmBtnText=\"Evet\"\n                                                               cancelBtnText=\"Hayır\"\n                                                               confirmBtnBsStyle=\"danger\"\n                                                               cancelBtnBsStyle=\"default\"\n                                                               title=\"Emin misiniz?\"\n                                                               onConfirm={() => this.deleteClicked(row)}\n                                                               onCancel={() => this.setState({alert: null})}\n                                                               disabled={this.state.disabledDeleteBtn}\n                                                >\n                                                    {row.title + \" silinecek.\"}\n                                                </SweetAlertExt>\n                                            )\n                                        });\n                                    }}/>\n                    </div>\n                )\n            },\n        ];\n\n        const fields = [\n            {\n                label: \"Parametre Adı\",\n                accessor: \"title\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Parametre Değeri\",\n                accessor: \"value\",\n                type: \"text\",\n                operator: \"=\",\n            },\n        ];\n\n        return (\n            <div className=\"row baseBackground\">\n                {this.state.joyrideActive &&\n                <Joyride\n                  disableBeacon={false}\n                  autoStart\n                  locale={locale}\n                  steps={steps}\n                  continuous={true}\n                  run={this.state.shouldRun}\n                  scrollToFirstStep={true}\n                  showProgress={true}\n                  showSkipButton={true}\n                  scrollToSteps={true}\n                  disableCloseOnEsc={true}\n                  disableOverlay={false}\n                  disableOverlayClicks={false}\n                  keyboardNavigation={true}\n                  hideBackButton={false}\n                  disableOverlayClose={true}\n                  callback={this.callback}\n                  holePadding={0}\n                  shouldRun={this.state.shouldRun}\n                  styles={{\n                      options: {\n                          zIndex: 100000,\n                          primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                      }\n                  }}/>}\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    <StickButton position=\"leftSide\" className=\"zocial Yeni\" label=\"Yeni Oluştur\"\n                                 title=\"Yeni Form Şablonu Oluştur\"\n                                 disabled={this.state.disabledSaveBtn} style={{fontSize: 'x-small'}}\n                                 onClick={this.createClicked}/>\n                    {this.state.stop &&\n                    <div className=\"helpButtonContainer\" position='rightSide'\n                         style={{position: \"inherit\", right: \"4.4em\", marginTop: \"1.4em\"}}>\n                        <button className=\"helpButton\" onClick={() => {\n                            this.activateJoyride()\n                        }}>\n                            <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                            <i className=\"far fa-question-circle helpButtonIcon\"/>\n                        </button>\n                    </div>\n                    }\n                </Nav>\n                {this.renderCreateUpdateModal()}\n                <div className=\"col-sm-12 satirBasi\">\n                    <div className=\"card-header \">\n                        <h4 className=\"card-title\">Firma Parametreleri</h4>\n                    </div>\n                    <div className=\"card-body\" style={{paddingBottom: '0px'}}>\n                        <div className=\"\">\n                            <div className=\"\" style={{marginTop: '10px', marginBottom: '0px'}}>\n                                <DetailedSearch fields={fields}\n                                                loading={this.state.loading}\n                                                onSearch={this.handleSearch}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-body\">\n                        <Table columns={columns}\n                               content={this.state.list}\n                               loading={this.state.loading}\n                               total={this.state.total}\n                               page={this.state.page}\n                               manual={this.state.manual}\n                               size={this.state.size}\n                               options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                               fetchData={this.fetchData}\n                        />\n                    </div>\n                </div>\n                {this.state.alert}\n            </div>\n        );\n    }\n}\n\nexport default FormParameterPage;"],"sourceRoot":""}