{"version":3,"sources":["accounting/kepik/common/validation/fieldValidation.js","accounting/kepik/organization/DepartmentTree.js","accounting/kepik/department/UploadDepartmentFile.js","accounting/kepik/department/DepartmentXslxImporter.js","accounting/kepik/department/DepartmentPage.js"],"names":["validDepartment","data","isCodeMust","error","errorMessage","name","validateField","undefined","valid","message","typeId","parentId","integrationCode","isValidObject","validFormType","category","validDepartmentType","type","validFlowTemplate","flowTemplate","documentType","validKepAccount","account","tckn","parola","sifre","key","DepartmentTree","Component","constructor","props","super","this","state","treeData","selectedKeys","checkedKeys","halfCheckedKeys","componentDidMount","levelInfo","findChildrenLowestLevel","setState","level","maxLength","render","loop","nodes","width","length","map","node","React","createElement","TreeNode","title","customLabel","children","tooltip","style","display","Col","xs","margin","padding","overflow","Tree","showLine","icon","_ref","className","selectable","defaultExpandAll","UploadDepartmentFile","handleButtonClick","acceptedFiles","some","file","size","Alert","position","effect","timeout","startUpload","content","loading","uploading","alert","bind","canUpload","onDrop","removeAcceptedFile","showError","refs","notify","notificationAlert","place","autoDismiss","onFileSelect","rejectedFiles","row","index","splice","Notify","ref","Dropzone","accept","activeClassName","multiple","filesToBeUploaded","columns","Header","accessor","sortable","Cell","humanReadableByteCount","onClick","data-toggle","data-placement","background","rel","Button","color","disabled","Table","paginationEnabled","DepartmentXlsxImporter","checkFormatValidity","rowNumber","header","value","okClicked","autoPairing","cancelClicked","checkFieldsOk","downloadTemplate","bulkFileSelected","headerDropDownChanged","getCellValue","fileReader","FileReader","readAsArrayBuffer","onload","result","val","prevState","headerNames","Object","keys","forEach","key2","fileContent","workbook","XLSX","Directory","vba","sheet","Sheets","SheetNames","range","decode_range","s","r","e","rowData","col","c","cell","encode_cell","t","v","String","fromCharCode","charCodeAt","push","bulkCreateData","toString","w","date","parse_date_code","moment","Date","parseInt","y","m","d","format","columnNameList","text","code","firstRow","compareResult","check","trim","replace","toLowerCase","headerRowSelected","bulkCreateDataFiltered","slice","hasError","errorRowList","errorTextList","filter","realData","obj","i","onSubmit","SweetAlert","confirmBtnText","confirmBtnBsStyle","onConfirm","Input","rows","height","border","marginTop","disable","checkDateFormat","split","join","isValid","allFieldSelected","onCancel","self","csv","csvExample","exampleNames","ws","json_to_sheet","skipHeader","wb","book_new","book_append_sheet","params","url","method","responseType","bookType","bookSST","requestK","then","response","link","document","href","window","URL","createObjectURL","Blob","download","body","appendChild","click","catch","showAxiosError","renderMainTable","onChange","target","backgroundColor","ReactTable","defaultPageSize","previousText","nextText","pageText","ofText","rowsText","overflowWrap","Container","marginBottom","id","marginLeft","checked","DepartmentPage","getDepartmentList","list","departmentList","found","checkDepartment","canDelete","parentList","getDepartmentName","department","deleteResponseAlert","warning","overflowY","float","msg","includes","checkIfCodeIsMust","generateRecommendation","parentName","recommendedCode","selected","departmentName","parentNameList","substring","arrangeDataSet","dataSet","uuid","create_UUID","selection","createRef","session","displayCreateUpdateDialog","manual","departmanList","total","searching","searchQuery","page","searchKey","totalIdList","steps","placement","steps2","locale","back","close","last","next","skip","joyrideActive","shouldRun","types","iller","ilceler","excelIsDownloading","displayCreateBulkDialog","editValidateDef","validator","isEmpty","fetchData","editClicked","saveClicked","handleSearch","searchWithKey","createClicked","deleteClicked","editHandleInputChange","callback","getDepartmentTypes","getIlList","downloadMedia","createBulkClicked","createBulkSubmit","isSelected","deleteList","toggleCheckboxChange","Array","isArray","errorText","each","success","direction","sortStr","reload","totalElements","selectedIdList","reverse","newData","find","isDefault","clone","assign","il","item","ilNo","ilces","disabledSaveBtn","disabledDeleteBtn","cannotDelete","selectedAll","createUpdateLoading","event","match","editClassName","invalid","renderBulkInsert","headerNameList","titleList","titleCode","Modal","isOpen","toggle","ModalHeader","ModalBody","renderCreateUpdate","activateJoyride","right","alignSelf","opacity","Form","FormGroup","Label","sm","for","ilce","isExpenditureDepartment","isim","ilceNo","adres","ModalFooter","paddingLeft","flag","action","indexOf","items","pageIdList","DropdownCheck","selectionIdList","selectType","textAlign","MiniButton","faIcon","SweetAlertExt","showCancel","cancelBtnText","cancelBtnBsStyle","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","options","zIndex","primaryColor","Nav","StickButton","fontSize","label","currentUser","pairedEmployeeId","checkGrantToDisplay","DEPARTMENT_DEFINITION","DetailedSearch","fields","operator","onSearch"],"mappings":"sHAAA,sLAGO,SAASA,EAAgBC,EAAMC,GAClC,IAAIC,EAAQ,GACRC,EAAa,GAqBjB,OApBAD,EAAME,KAAOC,iBAAcC,EAAW,QAASN,EAAKI,MAChDF,EAAME,KAAKG,QACXJ,EAAeA,EAAe,+BAA4BD,EAAME,KAAKI,QAAU,kBAEnFN,EAAMO,OAASJ,iBAAcC,EAAW,QAASN,EAAKS,QAClDP,EAAMO,OAAOF,QACbJ,EAAeA,EAAe,6BAA4BD,EAAMO,OAAOD,QAAU,kBAErFN,EAAMQ,SAAWL,YAAc,SAAU,OAAQL,EAAKU,UAClDR,EAAMQ,SAASH,QACfJ,EAAeA,EAAe,kDAAqCD,EAAMQ,SAASF,QAAU,kBAE5FP,IACFC,EAAMS,gBAAkBN,iBAAcC,EAAW,QAASN,EAAKW,iBAC3DT,EAAMS,gBAAgBJ,QACxBJ,EAAeA,EAAe,2BAA6BD,EAAMS,gBAAgBH,QAAU,mBAKxF,CAACN,MAAOA,EAAOK,MADVK,EAAcV,GACSC,aAAaA,GAG7C,SAASU,EAAcb,GAC1B,IAAIE,EAAQ,GACRC,EAAa,GAOjB,OANAD,EAAMY,SAAWT,iBAAcC,EAAW,QAASN,EAAKc,UACpDZ,EAAMY,SAASP,QACfJ,EAAeA,EAAe,4BAAwBD,EAAMY,SAASN,QAAU,kBAI5E,CAACN,MAAOA,EAAOK,MADVK,EAAcV,GACSC,aAAaA,GAE7C,SAASY,EAAoBf,GAChC,IAAIE,EAAQ,GACRC,EAAa,GAOjB,OANAD,EAAMc,KAAOX,iBAAcC,EAAW,QAASN,EAAKgB,MAChDd,EAAMc,KAAKT,QACXJ,EAAeA,EAAe,iCAA6BD,EAAMc,KAAKR,QAAU,kBAI7E,CAACN,MAAOA,EAAOK,MADVK,EAAcV,GACSC,aAAaA,GAE7C,SAASc,EAAkBC,GAC9B,IAAIhB,EAAQ,GACRC,EAAa,GAMjB,OALAD,EAAMiB,aAAed,YAAc,eAAgB,QAASa,EAAaC,cACrEjB,EAAMiB,aAAaZ,QACnBJ,EAAe,GAAGA,8BAAmCD,EAAMiB,aAAaX,yBAGrE,CAACN,MAAOA,EAAOK,MADVK,EAAcV,GACSC,aAAaA,GAG7C,SAASiB,EAAgBpB,GAC/B,IAAIE,EAAQ,GACRC,EAAa,GAmBjB,OAlBGD,EAAMmB,QAAUhB,YAAc,QAAS,QAASL,EAAKqB,SACjDnB,EAAMmB,QAAQd,QACdJ,EAAeA,EAAe,uBAAyBD,EAAMmB,QAAQb,QAAU,kBAEnFN,EAAMoB,KAAOjB,YAAc,SAAU,QAASL,EAAKsB,MAC/CpB,EAAMoB,KAAKf,QACXJ,EAAeA,EAAe,yBAA2BD,EAAMoB,KAAKd,QAAU,kBAElFN,EAAMqB,OAASlB,iBAAcC,EAAW,OAAQN,EAAKuB,QACjDrB,EAAMqB,OAAOhB,QACbJ,EAAeA,EAAe,mBAAqBD,EAAMqB,OAAOf,QAAU,kBAE9EN,EAAMsB,MAAQnB,iBAAcC,EAAW,OAAQN,EAAKwB,OAChDtB,EAAMsB,MAAMjB,QACZJ,EAAeA,EAAe,uBAAoBD,EAAMsB,MAAMhB,QAAU,kBAIxE,CAACN,MAAOA,EAAOK,MADPK,EAAcV,GACMC,aAAaA,GAG1C,SAASS,EAAcV,GAC7B,IAAIK,GAAQ,EACZ,IAAK,IAAIkB,KAAOvB,EAAO,CAEtB,IADaA,EAAMuB,GACPlB,MAAO,CAClBA,GAAQ,EACR,OAGF,OAAOA,I,yMCzFR,MAAMmB,UAAuBC,YAE3BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,SAAU,GACVC,aAAc,GACdC,YAAa,GACbC,gBAAiB,IAIrBC,oBACE,IAAIC,EAAYC,YAAwBR,KAAKF,MAAMI,SAAS,IAC5DF,KAAKS,SAAS,CAACC,MAAOH,EAAU,GAAII,UAAWJ,EAAU,GAAK,KAGhEK,SACE,IAAID,EAAYX,KAAKC,MAAMU,UAAYX,KAAKC,MAAMU,UAAY,EAC9D,MACME,EAAOA,CAACC,EAAOC,IACdD,GAAUA,EAAME,OAGdF,EAAMG,IAAKC,GAChBC,IAAAC,cAACC,IAAQ,CAAC3B,IAAKwB,EAAKxB,IACV4B,MAAOC,EAAYL,EAAMH,IAChCF,EAAKK,EAAKM,SAAUT,EAAQ,MALxB,KASLU,EAAWP,GACf,eAAiBA,EAAKI,MAAtB,uBACyBJ,EAAKtC,gBAAkBsC,EAAKtC,gBAAkB,IAEnE2C,EAAcA,CAACL,EAAMH,IACzBI,IAAAC,cAAA,OAAKM,MAAO,CAACC,QAAS,gBACpBR,IAAAC,cAACQ,MAAG,CAACC,GAAI,KAAMP,MAAOG,EAAQP,GAAOQ,MAAO,CAACI,OAAQ,IAAKC,QAAS,IAAKhB,MAAOA,EAAQ,OACrFI,IAAAC,cAAA,aAAQF,EAAKI,SAKnB,OACEH,IAAAC,cAAA,OAAKM,MAAO,CAACM,SAAU,SACrBb,IAAAC,cAACa,IAAI,CACHC,UAAQ,EACRC,KA5BOC,IAAA,MAAGA,EAAA,OAAMjB,IAAAC,cAAA,KAAGiB,UAAU,sBA6B7BC,YAAY,EACZC,kBAAkB,GACjB1B,EAAKb,KAAKF,MAAMI,SAAUS,MAOtBhB,Q,wFCtDf,MAAM6C,UAA6B5C,YAE/BC,YAAYC,GACRC,MAAMD,GAAO,KAuFjB2C,kBAAoB,KACZzC,KAAKC,MAAMyC,cAAcC,KAAKC,GAAQA,EAAKC,KAAO,UAClDC,IAAM3E,MAAM,wEAAmD,CAC3D4E,SAAU,YACVC,OAAQ,aACRC,QAAS,MAKjBjD,KAAKkD,eAhGLlD,KAAKC,MAAQ,CACTkD,QAAS,GACTT,cAAe,GACfU,SAAS,EACTC,WAAW,EACXC,MAAO,MAEXtD,KAAKkD,YAAclD,KAAKkD,YAAYK,KAAKvD,MACzCA,KAAKwD,UAAYxD,KAAKwD,UAAUD,KAAKvD,MACrCA,KAAKyD,OAASzD,KAAKyD,OAAOF,KAAKvD,MAC/BA,KAAK0D,mBAAqB1D,KAAK0D,mBAAmBH,KAAKvD,MAG3DkD,cAEI,IAAIS,GAAY,EAAOvF,EAAe,GACjC4B,KAAKC,MAAMyC,eAAqD,IAApC1C,KAAKC,MAAMyC,cAAc1B,SAEtD5C,EAAe,wCACfuF,GAAY,GAGZA,EACA3D,KAAK4D,KAAKC,OAAOC,kBAAkB,CAC/BC,MAAO,KACPtF,QAASL,EACTa,KAAM,SACN+E,YAAa,IAKrBhE,KAAKF,MAAMmE,aAAajE,KAAKC,MAAMyC,cAAc,IAGrDe,OAAOf,EAAewB,GAElBlE,KAAKS,SAAS,CAACiC,kBAEXwB,EAAclD,OAAS,GACvBhB,KAAK4D,KAAKC,OAAOC,kBAAkB,CAC/BC,MAAO,KACPtF,QAAS,6EACTQ,KAAM,SACN+E,YAAa,IAKzBN,mBAAmBS,EAAKC,GACpB,IAAI,cAAC1B,GAAiB1C,KAAKC,MAE3ByC,EAAc2B,OAAOD,EAAO,GAE5BpE,KAAKS,SAAS,CAACiC,kBAGnBc,YACI,QAAUxD,KAAKC,MAAMyC,eAAiB1C,KAAKC,MAAMyC,cAAc1B,OAAS,EAG5EJ,SACI,OACIO,IAAAC,cAAA,WACID,IAAAC,cAACkD,IAAM,CAACC,IAAI,WACXvE,KAAKC,MAAMqD,MACZnC,IAAAC,cAAA,OAAKiB,UAAU,OACXlB,IAAAC,cAACoD,IAAQ,CACLC,OAAO,wBACPpC,UAAU,qBACVqC,gBAAgB,sBAChBhD,MAAO,GACPiD,UAAU,EACVlB,OAAQzD,KAAKyD,QACbtC,IAAAC,cAAA,OAAKiB,UAAU,qBACVrC,KAAKF,MAAMwB,MAAQtB,KAAKF,MAAMwB,MAAQ,0HAIlDtB,KAAKC,MAAMyC,cAAc1B,OAAS,GACnChB,KAAK4E,qBAoBjBA,oBAEI,MAAMC,EAAU,CACZ,CACIC,OAAQ,iBACRC,SAAU,OACVC,UAAU,GAEd,CACIF,OAAQ,QACRC,SAAU,OACVC,UAAU,EACVC,KAAMd,GAAQhD,IAAAC,cAAA,WAAM8D,YAAuBf,EAAItB,MAAM,KAEzD,CACIiC,OAAQ,qBACRC,SAAU,GACVC,UAAU,EACVC,KAAMA,CAACd,EAAKC,IACRjD,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAQnC,KAAK,SACLkG,QAASA,IAAMnF,KAAK0D,mBAAmBS,EAAKC,GAC5CgB,cAAY,UAAUC,iBAAe,SAAS/D,MAAM,MACpDI,MAAO,CAAC4D,WAAY,WAAYC,IAAI,UACpClD,UAAU,gBACdlB,IAAAC,cAAA,KAAGiB,UAAU,8BAMjC,OACIlB,IAAAC,cAAA,OAAKiB,UAAU,OACXlB,IAAAC,cAAA,MAAIM,MAAO,CAACX,MAAO,SAAS,0BAC5BI,IAAAC,cAACoE,SAAM,CAACC,MAAM,UAAUN,QAASnF,KAAKyC,kBAAmBiD,SAAU1F,KAAKC,MAAMoD,YAAcrD,KAAKwD,aAC7FrC,IAAAC,cAAA,YAAM,oCACND,IAAAC,cAAA,KAAGiB,UAAU,kBAEjBlB,IAAAC,cAACuE,IAAK,CAACd,QAASA,EACT1B,QAASnD,KAAKC,MAAMyC,cACpBkD,mBAAmB,MAO3BpD,QCrJf,MAAMqD,UAA+BjG,YACjCC,cACIE,QAAQ,KA+NZ+F,oBAAsB,CAACC,EAAWC,EAAQC,KACtC,OAAQD,GACJ,IAAK,iBACD,GAAa,MAATC,EACA,OAAOF,EAAY,sEAEvB,MACJ,IAAK,iBACD,GAAa,MAATE,EACA,OAAOF,EAAY,kEAEvB,MACJ,IAAK,kBACD,GAAa,MAATE,EACA,OAAOF,EAAY,sEA3O/B/F,KAAKC,MAAQ,CACTmD,SAAS,GAGbpD,KAAKkG,UAAYlG,KAAKkG,UAAU3C,KAAKvD,MACrCA,KAAKmG,YAAcnG,KAAKmG,YAAY5C,KAAKvD,MACzCA,KAAKiE,aAAejE,KAAKiE,aAAaV,KAAKvD,MAC3CA,KAAKoG,cAAgBpG,KAAKoG,cAAc7C,KAAKvD,MAC7CA,KAAKqG,cAAgBrG,KAAKqG,cAAc9C,KAAKvD,MAC7CA,KAAKsG,iBAAmBtG,KAAKsG,iBAAiB/C,KAAKvD,MACnDA,KAAKuG,iBAAmBvG,KAAKuG,iBAAiBhD,KAAKvD,MACnDA,KAAKwG,sBAAwBxG,KAAKwG,sBAAsBjD,KAAKvD,MAC7D6F,EAAuBY,aAAeZ,EAAuBY,aAAalD,KAAKvD,MAGnFiE,aAAarB,GACT,IAAI8D,EAAa,IAAIC,WACrBD,EAAWE,kBAAkBhE,GAC7B8D,EAAWG,OAAS,KAChB7G,KAAKuG,iBAAiBG,EAAWI,SAIzCN,sBAAsB9G,EAAKqH,GACvB/G,KAAKS,SAAS,CAACuG,EAAWlH,KACtBkH,EAAUC,YAAYvH,GAAOqH,EAC7BG,OAAOC,KAAKH,EAAUC,aAAaG,QAAQ,CAACC,EAAMjD,KAC1CiD,IAAS3H,GAETsH,EAAUC,YAAYI,KAAUN,GAAe,eAARA,IACvCC,EAAUC,YAAYI,GAAQ,MAG/B,CAACJ,YAAaD,EAAUC,eAIvCV,iBAAiBe,GACb,IAAIrJ,EAAO,GACPsJ,EAAWC,IAAUF,EAAa,CAACrI,KAAM,UAC7C,GAAIsI,EAASE,WAAaF,EAASE,UAAUC,KAAOH,EAASE,UAAUC,IAAI1G,OAMvE,YALA8B,IAAM3E,MAAM,gCAA8B,CACtC4E,SAAU,YACVC,OAAQ,aACRC,QAAS,MAIjB,IAAI0E,EAAQJ,EAASK,OAAOL,EAASM,WAAW,IAC5CC,EAAQN,IAAWO,aAAaJ,EAAM,SAE1C,IAAK,IAAIxD,EAAM2D,EAAME,EAAEC,EAAG9D,GAAO2D,EAAMI,EAAED,EAAG9D,IAAO,CAE/C,IAAIgE,EAAU,GAEd,IAAK,IAAIC,EAAMN,EAAME,EAAEK,EAAGD,GAAON,EAAMI,EAAEG,EAAGD,IAAO,CAC/C,IAAIE,EAAOX,EAAMH,IAAWe,YAAY,CAACN,EAAG9D,EAAKkE,EAAGD,KAChDjF,EAAU,GACVmF,IACe,MAAXA,EAAKE,EACLrF,EAAUmF,EAAKG,EACG,MAAXH,EAAKE,IACZrF,EAAU0C,EAAuBY,aAAa6B,KAGlDnF,GAAWA,EAAQnC,OAAS,IAC5BmH,EAAQO,OAAOC,aAAa,IAAIC,WAAW,GAAKR,IAAQjF,GAGhElF,EAAK4K,KAAKV,GAGd,IAAIlB,EAAc,GACdhJ,EAAK+C,OAAS,GACdkG,OAAOC,KAAKlJ,EAAK,IAAImJ,QAAQ,CAAC1H,EAAK0E,KAC/B6C,EAAYvH,GAAO,KAI3BM,KAAKS,SAAS,CAACqI,eAAgB7K,EAAMgJ,YAAaA,IAClDjH,KAAKmG,YAAYlI,GAGrB,oBAAoBqK,GAChB,GAAIA,EAAKG,EAAEM,aAAeT,EAAKU,EAAED,WAC7B,OAAOT,EAAKU,EACT,CACH,IAAIC,EAAOzB,IAAS0B,gBAAgBZ,EAAKG,GACzC,OAAIQ,EACOE,IAAO,IAAIC,KAAKC,SAASJ,EAAKK,GAAID,SAASJ,EAAKM,GAAK,EAAGF,SAASJ,EAAKO,KAAKC,OAAO,cAElFnB,EAAKG,EAAEM,YAI1B5C,YAAYlI,GACR,IAAIyL,EAAiB,CACjB,CAACC,KAAM,qBAAiBC,KAAM,kBAC9B,CAACD,KAAM,iBAAkBC,KAAM,kBAC/B,CAACD,KAAM,6CAA+BC,KAAM,wBAC5C,CAACD,KAAM,uBAAkBC,KAAM,mBAC/B,CAACD,KAAM,KAAMC,KAAM,UACnB,CAACD,KAAM,UAAQC,KAAM,YACrB,CAACD,KAAM,QAASC,KAAM,SACtB,CAACD,KAAM,cAAeC,KAAM,2BAC5B,CAACD,KAAM,cAAeC,KAAM,4BAG5BC,EAAW5L,EAAK,GAChB6L,GAAgB,EAEpB5C,OAAOC,KAAK0C,GAAUzC,QAAQ,CAAC1H,EAAK0E,KAChC,IAAI2F,GAAQ,EACZL,EAAetC,QAAQgB,IACfyB,EAASnK,GAAKsK,OAAOC,QAAQ,SAAI,KAAKC,gBAAmB9B,EAAIuB,OAC7DI,GAAQ,EACR/J,KAAKwG,sBAAsB9G,EAAK0I,EAAIwB,SAG5CE,EAAgBA,GAAiBC,IAGjCD,GAEA9J,KAAKS,SAAS,CAAC0J,mBAAmB,IA0B1CjE,YAEI,GAAIlG,KAAKqG,gBAAiB,CAEtB,IAAI+D,EAEAA,EADApK,KAAKC,MAAM6I,gBAAkB9I,KAAKC,MAAMkK,kBACfnK,KAAKC,MAAM6I,eAAeuB,MAAM,GAEhCrK,KAAKC,MAAM6I,eAGxC,IAAIwB,GAAW,EACXvE,EAAY,EACZwE,EAAe,GACfC,EAAgB,GACpBJ,EAAyBA,EAAuBK,OAAO1D,GAAKG,OAAOC,KAAKJ,GAAK/F,OAAS,GACtF,IAAI0J,EAAWN,EAAuBnJ,IAAK8F,IACvC,GAA+B,IAA5BG,OAAOC,KAAKJ,GAAK/F,OAChB,OACJ,IAAI2J,EAAM,GAoBV,OAlBAzD,OAAOC,KAAKnH,KAAKC,MAAMgH,aAAaG,QAAQ,CAAC1H,EAAKkL,KAC9C,IAAI5E,EAAShG,KAAKC,MAAMgH,YAAYvH,GACpC,GAAIsG,EAAQ,CACR,IAAIC,EAAQc,EAAIrH,GACZvB,EAAQ6B,KAAK8F,oBAAoBC,EAAWC,EAAQC,GACpD9H,GAASA,EAAM6C,SACfwJ,GAAkCF,EAAoB,OAASnM,EAAlBA,EAC7CoM,EAAa1B,KAAK9C,GAClBuE,GAAW,GAGXK,EAAI3E,GADO,4BAAXA,EACwB,MAATC,GAAyB,SAARA,EAElBA,KAI1BF,IACO4E,IAGP3K,KAAKF,MAAM+K,UAAYH,IAAaJ,EACpCtK,KAAKF,MAAM+K,SAASH,GACbJ,GACPtK,KAAKS,SAAS,CACV6C,MAAOnC,IAAAC,cAAC0J,IAAU,CAAC3M,OAAK,EACL4M,eAAe,QACfC,kBAAkB,QAClB1J,MAAM,OACN2J,UAAWA,IAAMjL,KAAKS,SAAS,CAAC6C,MAAO,QACtDnC,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,8HAEPD,IAAAC,cAAC8J,QAAK,CAACjM,KAAK,WAAWkM,KAAM,EACtBzJ,MAAO,CAAC0J,OAAQ,QAASC,OAAQ,oBAAqBC,UAAW,OACjErF,MAAOuE,EACPe,SAAS,aAMhCzI,IAAM3E,MAAM,2DAAgC,CACxC4E,SAAU,YACVC,OAAQ,aACRC,QAAS,MAyBrBuI,gBAAgB9L,EAAKuG,GACjB,OAAIA,GAAmB,KAAVA,GAAyB,wBAARvG,GAAyC,gBAARA,EAuBpDuG,GAtBPA,EAAQA,EAAM8C,WACT0C,MAAM,KAAKC,KAAK,KAChBzB,QAAQ,MAAO,KACfA,QAAQ,KAAM,KACdA,QAAQ,MAAO,KAEhBd,IAAOlD,EAAO,cAAc,GAAM0F,UAC3BxC,IAAOlD,EAAO,cAAcwD,OAAO,cACnCN,IAAOlD,EAAO,YAAY,GAAM0F,UAChCxC,IAAOlD,EAAO,YAAYwD,OAAO,cACjCN,IAAOlD,EAAO,cAAc,GAAM0F,UAClC1F,EACAkD,IAAOlD,EAAO,cAAc,GAAM0F,UAClCxC,IAAOlD,EAAO,cAAcwD,OAAO,cACnCN,IAAOlD,EAAO,YAAY,GAAM0F,UAChCxC,IAAOlD,EAAO,YAAYwD,OAAO,cACjCN,IAAOlD,EAAO,cAAc,GAAM0F,UAClCxC,IAAOlD,EAAO,cAAcwD,OAAO,cAEnC,MAQnBpD,gBACI,IAAIuF,GAAmB,EASvB,OARI5L,KAAKC,MAAMgH,aAAeC,OAAOC,KAAKnH,KAAKC,MAAMgH,aAAajG,OAAS,EACvEkG,OAAOC,KAAKnH,KAAKC,MAAMgH,aAAaG,QAAQ1H,IACJ,KAAhCM,KAAKC,MAAMgH,YAAYvH,KACvBkM,GAAmB,KAG3BA,GAAmB,EAEhBA,EAGXxF,gBACQpG,KAAKF,MAAM+L,UACX7L,KAAKF,MAAM+L,WAGnBvF,mBACI,IAAIwF,EAAO9L,KACX8L,EAAKrL,SAAS,CAAC2C,SAAS,IACxB,IAAInF,EAAO,GACP8N,EAAMD,EAAKhM,MAAMmH,YAAYhG,IAAKiH,GAC3BA,EAAE7J,MAEbJ,EAAK4K,KAAKkD,GACV,IAAIC,EAAaF,EAAKhM,MAAMmM,aAAahL,IAAKiH,GACnCA,EAAE7J,MAEbJ,EAAK4K,KAAKmD,GACV,IAAIE,EAAK1E,IAAW2E,cAAclO,EAAM,CAACmO,YAAY,IACjDC,EAAK7E,IAAW8E,WACpB9E,IAAW+E,kBAAkBF,EAAIH,EAAI,SACrC,IAEIM,EAAS,CACTC,IAAK,6CACLC,OAAQ,OACRC,aAAc,cACd1O,KALQuJ,IAAW6E,EADX,CAACO,SAAU,OAAQC,SAAS,EAAO5N,KAAM,YAQrD6N,YAASN,GACJO,MAAK,SAAUC,GACZ,IAAIC,EAAOC,SAAS9L,cAAc,KAClC6L,EAAKE,KAAOC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACP,EAAS/O,MAAO,CAACgB,KAAM,8BACxEgO,EAAKO,SAAW,+BAChBN,SAASO,KAAKC,YAAYT,GAC1BA,EAAKU,QACL7B,EAAKrL,SAAS,CAAC2C,SAAS,OACzBwK,OAAM,SAAUzP,GACnB2N,EAAKrL,SAAS,CAAC2C,SAAS,IACxByK,YAAe1P,MAIvB2P,gBAAgB7P,GAEZ,IAAKA,GAAQA,EAAK+C,QAAU,EACxB,MAAO,GAEX,IAAI6I,EAAW5L,EAAK,GAChB4G,EAAU,GAgCd,OA9BAqC,OAAOC,KAAK0C,GAAUzC,QAAQ,CAAC1H,EAAK0E,KAChCS,EAAQgE,KAAK,CACT/D,OAAQ3D,IAAAC,cAAC8J,QAAK,CAACjM,KAAK,SACLgH,MAAOjG,KAAKC,MAAMgH,YAAYvH,GAC9BqO,SAAW7F,IACPlI,KAAKwG,sBAAsB9G,EAAKwI,EAAE8F,OAAO/H,QAE7CvE,MAAO,CAACuM,gBAAkBjO,KAAKC,MAAMgH,YAAYvH,GAAkB,GAAX,WAE/D,CACIyB,IAAAC,cAAA,UAAQ6E,MAAM,GAAGvE,MAAO,CAACuM,gBAAiB,cAAc,cACxD9M,IAAAC,cAAA,UAAQ6E,MAAM,aAAavE,MAAO,CAACuM,gBAAiB,YAAY,iCAC7DjO,KAAKF,MAAMmH,YAAYhG,IACtBiH,GAAK/G,IAAAC,cAAA,UAAQ6E,MAAOiC,EAAE0B,KAAMlI,MAAO,CAACuM,gBAAiB,cAAe/F,EAAE7J,SAKtFwG,QAAS,CACL,CACIC,OAAQpF,EACRqF,SAAUrF,QAMtBM,KAAKC,MAAMkK,oBACXlM,EAAOA,EAAKoM,MAAM,IAEflJ,IAAAC,cAAC8M,IAAU,CAACjQ,KAAMA,EAAM4G,QAASA,EAASsJ,gBAAiB,EAC/CC,aAAc,YAAUC,SAAU,UAAWC,SAAU,QACvDC,OAAQ,sBAAkBC,SAAU,aACpC9M,MAAO,CAAC+M,aAAc,gBAG7C7N,SAEI,OACIO,IAAAC,cAAA,YACMpB,KAAKC,MAAM6I,gBACb3H,IAAAC,cAACsN,YAAS,KACNvN,IAAAC,cAAA,OAAKiB,UAAU,MAAMX,MAAO,CAACiN,aAAc,SACvCxN,IAAAC,cAACoE,SAAM,CAACC,MAAM,OAAOnE,MAAM,yDACnBoE,SAAU1F,KAAKC,MAAMmD,QACrB+B,QAASnF,KAAKsG,kBAClBnF,IAAAC,cAAA,YAAM,kCACND,IAAAC,cAAA,KAAGiB,UAAU,oBAEjBlB,IAAAC,cAAA,OAAKwN,GAAG,mBAEZzN,IAAAC,cAACoB,EAAoB,CAACyB,aAAcjE,KAAKiE,gBAG5CjE,KAAKC,MAAM6I,gBACZ3H,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKM,MAAO,CAACmN,WAAY,OACrB1N,IAAAC,cAAC8J,QAAK,CAACjM,KAAK,WAAW8O,SAAU7F,IAC7BlI,KAAKS,SAAS,CAAC0J,kBAAmBjC,EAAE8F,OAAOc,WAC5CA,QAAS9O,KAAKC,MAAMkK,oBACvBhJ,IAAAC,cAAA,aAAO,kDAEVpB,KAAK8N,gBAAgB9N,KAAKC,MAAM6I,gBACjC3H,IAAAC,cAAA,OAAKM,MAAO,CAACmN,WAAY,OACrB1N,IAAAC,cAACoE,SAAM,CAACC,MAAM,YAAYN,QAASnF,KAAKoG,eAAe,cAGvDjF,IAAAC,cAACoE,SAAM,CAACC,MAAM,UAAUN,QAASnF,KAAKkG,WAAW,YAMxDlG,KAAKC,MAAMqD,QAMbuC,Q,sBCtZf,MAAMkJ,UAAuBnP,YAEzBC,YAAYC,GACRC,MAAMD,GAAO,KAwRjBkP,kBAAoB,CAACC,EAAML,KACvB,IAAIM,EAAiB,GACjBC,GAAQ,EACZ,GAAIP,GACIK,GAAQA,EAAKjO,OAAS,EACtB,IAAK,IAAI4J,EAAI,EAAGA,EAAIqE,EAAKjO,OAAQ4J,IAM7B,GALIqE,EAAKrE,GAAGgE,KAAOA,EACfO,GAAQ,EAERD,EAAerG,KAAKoG,EAAKrE,IAEzBuE,GAAe,IAANvE,EACT,MAAO,GAIvB,OAAOsE,GACV,KA2DDE,gBAAmBR,IACf,IAAIS,GAAY,GACZ,WAACC,GAActP,KAAKC,MACxB,GAAI2O,GACIU,GAAcA,EAAWtO,OAAS,EAClC,IAAK,IAAI4J,EAAI,EAAGA,EAAI0E,EAAWtO,OAAQ4J,IAC/B0E,EAAW1E,GAAGjM,WAAaiQ,IAC3BS,GAAY,GAK5B,OAAOA,GACV,KA0GDE,kBAAqBX,IACjB,IAAIvQ,EAKJ,OAJA2B,KAAKC,MAAMqP,WAAWlI,QAAQoI,IACtBA,EAAWZ,KAAOA,IAClBvQ,EAAOmR,EAAWnR,QAEnBA,GACV,KAEDoR,oBAAuBhR,IASnBuB,KAAKS,SAAS,CACV6C,MAAOnC,IAAAC,cAAC0J,IAAU,CAAC4E,SAAO,EACP3E,eAAe,QACfC,kBAAkB,UAClB1J,MAAM,wDACN2J,UAAWA,IAAMjL,KAAKS,SAAS,CAAC6C,MAAO,QACtDnC,IAAAC,cAAA,OAAKM,MAdI,CACbiO,UAAW,SACXtE,OAAQ,kBACRtK,MAAO,QACP6O,MAAO,SACPxE,OAAQ,QACRrI,SAAU,aAUEtE,EAAQwC,IAAI4O,GACJA,EAAI9G,WAAW+G,SAAS,WACjB3O,IAAAC,cAAA,SAAOM,MAAO,CAAC+D,MAAO,UAAWoK,GAEjC1O,IAAAC,cAAA,SAAOM,MAAO,CAAC+D,MAAO,QAASoK,SAMhE,KA4CFE,kBAAoB,KACR/P,KAAKC,MAAMqP,WAAWQ,SAAS,mBACzC,KAEFE,uBAAyB,KACrB,IAAIC,EAAa,GAAIC,EAAkB,GACnCvR,EAAWqB,KAAKC,MAAMkQ,UAAYnQ,KAAKC,MAAMkQ,SAASxR,SACtDyR,EAAiBpQ,KAAKC,MAAMkQ,UAAYnQ,KAAKC,MAAMkQ,SAAS9R,KAMhE,GALA2B,KAAKC,MAAMqP,YAActP,KAAKC,MAAMqP,WAAWrO,IAAIiH,IAC3CA,EAAE0G,KAAOvF,SAAS1K,KAClBsR,EAAa/H,EAAE7J,QAGnB4R,EAAWjP,SAAWiP,EAAWH,SAAS,KAC1C,GAAKG,EAAWH,SAAS,KAElB,CACH,IAAIO,EAAiBJ,EAAWxE,MAAM,KACtC4E,EAAepP,IAAI,CAACiH,EAAG0C,KACT,IAANA,GAAqC,IAA1ByF,EAAerP,OAC1BkP,GAAoChI,EAAEoI,UAAU,EAAG,GAEnDJ,GAAoChI,EAAE,UAP9CgI,EAAkBD,EAAWK,UAAU,EAAG,GAYlD,OAAUJ,EAAkB,+BAA8BA,GACrDE,EAAiB,IAAMA,EAAiB,6BAA0B,IACzE,KAEFG,eAAiB,KACb,IACIC,EAAU,CACdA,UAAoB,qBAIpB,OAHAA,EAAQC,KAAOC,cACfF,EAAQvB,KAJGjP,KAISC,MAAM0Q,UAC1BH,EAAQvR,KAAO,QACRuR,GAhlBPxQ,KAAK6D,OAAS1C,IAAMyP,YACpB5Q,KAAKC,MAAQ,CACTqD,MAAO,KACPuN,QAAS,KACTzN,SAAS,EACT0N,2BAA2B,EAC3BtS,MAAO,KACPuS,QAAQ,EACR5N,QAAS,GACTjD,SAAU,GACVoP,WAAY,GACZ0B,cAAe,GACfC,MAAO,EACPC,WAAW,EACXC,iBAAa5S,EACb6S,KAAM,EACNvO,KAAM,GACNwO,UAAW,GACXlR,aAAc,GACdC,YAAa,GACbC,gBAAiB,GACjBsQ,UAAW,GACXW,YAAa,GACbC,MAAO,CACH,CACIvD,OAAQ,kBACR7K,QAAS,yEACTqO,UAAW,UAEf,CACIxD,OAAQ,UACR7K,QAAS,ucAGTqO,UAAW,QAEf,CACIxD,OAAQ,uBACR7K,QAAS,iJACTqO,UAAW,SAGnBC,OAAQ,CACJ,CACIzD,OAAQ,kBACR7K,QAAS,8CACTqO,UAAW,UAEf,CACIxD,OAAQ,yCACR7K,QAAS,2SAETqO,UAAW,QAEf,CACIxD,OAAQ,yCACR7K,QAAS,mCACTqO,UAAW,QAEf,CACIxD,OAAQ,0CACR7K,QAAS,8BACTqO,UAAW,QAEf,CACIxD,OAAQ,0CACR7K,QAAS,uRAETqO,UAAW,SAGnBE,OAAQ,CACJC,KAAM,OACNC,MAAO,QACPC,KAAM,MACNC,KAAM,aACNC,KAAM,QAEVC,eAAe,EACfC,WAAW,EACXC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,oBAAoB,EACpBC,yBAAyB,GAG7BtS,KAAKuS,gBAAkB,CACnBlU,KAAMoK,IAAM+J,IAAUC,QAAQhK,IAGlCzI,KAAK0S,UAAY1S,KAAK0S,UAAUnP,KAAKvD,MACrCA,KAAK2S,YAAc3S,KAAK2S,YAAYpP,KAAKvD,MACzCA,KAAK4S,YAAc5S,KAAK4S,YAAYrP,KAAKvD,MACzCA,KAAK6S,aAAe7S,KAAK6S,aAAatP,KAAKvD,MAC3CA,KAAK8S,cAAgB9S,KAAK8S,cAAcvP,KAAKvD,MAC7CA,KAAK+S,cAAgB/S,KAAK+S,cAAcxP,KAAKvD,MAC7CA,KAAKgT,cAAgBhT,KAAKgT,cAAczP,KAAKvD,MAC7CA,KAAKiT,sBAAwBjT,KAAKiT,sBAAsB1P,KAAKvD,MAC7DA,KAAKkT,SAAWlT,KAAKkT,SAAS3P,KAAKvD,MACnCA,KAAKmT,mBAAqBnT,KAAKmT,mBAAmB5P,KAAKvD,MACvDA,KAAKoT,UAAYpT,KAAKoT,UAAU7P,KAAKvD,MACrCA,KAAKqT,cAAgBrT,KAAKqT,cAAc9P,KAAKvD,MAC7CA,KAAKsT,kBAAoBtT,KAAKsT,kBAAkB/P,KAAKvD,MACrDA,KAAKuT,iBAAmBvT,KAAKuT,iBAAiBhQ,KAAKvD,MACnDA,KAAKwT,WAAaxT,KAAKwT,WAAWjQ,KAAKvD,MACvCA,KAAKyT,WAAazT,KAAKyT,WAAWlQ,KAAKvD,MACvCA,KAAK0T,qBAAuB1T,KAAK0T,qBAAqBnQ,KAAKvD,MAI/DM,oBACIN,KAAKmT,qBACLnT,KAAKoT,YAGTG,iBAAiBtE,GACb,IAAInD,EAAO9L,KACPwM,EAAS,CACTC,IAAK,8BACLC,OAAQ,OACRzO,KAAMgR,GAEVnD,EAAKrL,SAAS,CAAC2C,SAAS,EAAMkP,yBAAyB,IACvDxF,YAASN,GACJO,MAAK,SAAUC,GACZ,IAAIlG,EAASkG,EAAS/O,KACtB,GAAI0V,MAAMC,QAAQ9M,GAAS,CACvB,IAAI+M,EAAY,GAChB/M,EAAO7F,IAAI6S,IAEHD,EADc,KAAdA,EACYC,EAEAD,EAAY,KAAOC,IAGvChI,EAAKrL,SAAS,CACV6C,MAAOnC,IAAAC,cAAC0J,IAAU,CAACiJ,SAAO,EACPhJ,eAAe,QACfC,kBAAkB,UAClB1J,MAAM,iEACN2J,UAAWA,IAAMa,EAAKrL,SAAS,CAAC6C,MAAO,QACtDnC,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,+JAEPD,IAAAC,cAAC8J,QAAK,CAACjM,KAAK,WAAWkM,KAAM,EACtBzJ,MAAO,CAAC0J,OAAQ,QAASC,OAAQ,oBAAqBC,UAAW,OACjErF,MAAO4N,EACPtI,SAAS,aAK5BzI,IAAMiR,QAAQjN,EAAQ,CAClB/D,SAAU,YACVC,OAAQ,aACRC,QAAS,MAGjB6I,EAAKrL,SAAS,CAAC2C,SAAS,EAAO2N,QAAQ,OAE1CnD,OAAM,SAAUzP,GACb,IAAI2I,EAAS3I,EAAM6O,SAAS/O,KAC5B,GAAI0V,MAAMC,QAAQ9M,GAAS,CACvB,IAAI+M,EAAY,GAChB/M,EAAO7F,IAAI6S,IAEHD,EADc,KAAdA,EACYC,EAEAD,EAAY,KAAOC,EAAO,OAG9ChI,EAAKrL,SAAS,CACV6C,MAAOnC,IAAAC,cAAC0J,IAAU,CAAC3M,OAAK,EACL4M,eAAe,QACfC,kBAAkB,QAClB1J,MAAM,iBACN2J,UAAWA,IAAMa,EAAKrL,SAAS,CAAC6C,MAAO,QACtDnC,IAAAC,cAAA,WACID,IAAAC,cAAA,aAAO,+JAEPD,IAAAC,cAAC8J,QAAK,CAACjM,KAAK,WAAWkM,KAAM,EACtBzJ,MAAO,CAAC0J,OAAQ,QAASC,OAAQ,oBAAqBC,UAAW,OACjErF,MAAO4N,EACPtI,SAAS,aAK5BsC,YAAe1P,GAEnB2N,EAAKrL,SAAS,CAAC2C,SAAS,EAAO2N,QAAQ,OAInDoC,qBACI,IAAIrH,EAAO9L,KAKX8M,YAJa,CACTL,IAAK,wCACLC,OAAQ,QAGPK,MAAK,SAAUC,GACZlB,EAAKrL,SAAS,CAACyR,MAAOlF,EAAS/O,UAChC2P,OAAM,SAAUzP,GACnB0P,YAAe1P,MAIvBiV,YACI,IAAItH,EAAO9L,KAKX8M,YAJa,CACTL,IAAK,YACLC,OAAQ,QAGPK,MAAK,SAAUC,GACZlB,EAAKrL,SAAS,CAAC0R,MAAOnF,EAAS/O,UAChC2P,OAAM,SAAUzP,GACnB0P,YAAe1P,MAIvB0U,aAAa1B,GACTnR,KAAKS,SAAS,CACV0Q,cACAD,WAAW,GACZ,IAAMlR,KAAK0S,UAAU1S,KAAKC,MAAM8E,SAAU/E,KAAKC,MAAM+T,UAAW,EAAGhU,KAAKC,MAAM4C,OAGrFiQ,cAAc5K,GACVlI,KAAKS,SAAS,CAAC4Q,UAAWnJ,EAAE8F,OAAO/H,MAAO8K,QAAQ,IAGtD2B,UAAU3N,EAAUiP,EAAW5C,EAAMvO,GACjC,IAAIiJ,EAAO9L,KACPiU,OAAuB1V,IAAbwG,EAA0B,SAAWA,EAAW,IAAMiP,EAAa,GAC7E7C,EAAerF,EAAK7L,MAAMkR,YAAmB,IAAMrF,EAAK7L,MAAMkR,YAAtB,GACxC3E,EAAS,CACTC,IAAK,sCAAwC2E,EAAO,SAAWvO,EAAOsO,EAAc8C,EACpFvH,OAAQ,OAEZZ,EAAKrL,SAAS,CAAC2C,SAAS,EAAM8N,WAAW,EAAMH,QAAwB,IAAhBjF,EAAKiF,QAA0BjF,EAAKiF,SAC3FjF,EAAKhM,MAAMoU,QAAO,GAClBpH,YAASN,GACJO,MAAK,SAAUC,GACZlB,EAAKrL,SAAS,CACV2Q,KAAMA,EACNvO,KAAMA,EACNoO,MAAOjE,EAAS/O,KAAKkW,cACrBhR,QAAS6J,EAAS/O,KAAKgR,KACvB/O,SAAU8M,EAAS/O,KAAKiC,SACxBoP,WAAYtC,EAAS/O,KAAKqR,WAC1BgC,YAAatE,EAAS/O,KAAO+O,EAAS/O,KAAKmW,eAAeC,UAAY,GACtEjR,SAAS,EACT8N,WAAW,IAEfpF,EAAKhM,MAAMoU,QAAO,MACnBtG,OAAM,SAAUzP,GACnB2N,EAAKrL,SAAS,CAAC2C,SAAS,EAAO8N,WAAW,IAC1CpF,EAAKhM,MAAMoU,QAAO,GAClBrG,YAAe1P,MAIvB4U,gBACI/S,KAAKsU,SAAU,EACf,IAAIrV,EAAOe,KAAKC,MAAMiS,MAAMqC,KAAKrM,IAAqB,IAAhBA,EAAEsM,WACxCxU,KAAKS,SAAS,CACV0P,SAAU,CACN9R,KAAM,GACNY,UAAeV,IAATU,EAAqBA,EAAK2P,GAAK,IAEzCpQ,MAAO,GACPsS,2BAA2B,EAC3BE,cAAehR,KAAKC,MAAMqP,aAuBlCqD,YAAYxO,GACR,IAAIsQ,EAAQvN,OAAOwN,OAAO,GAAIvQ,UACvBsQ,EAAiB,UACxB,IAAIzD,EAAgBhR,KAAKgP,kBAAkBhP,KAAKC,MAAMqP,WAAYmF,EAAM7F,IACpE+F,EAAK3U,KAAKC,MAAMkS,MAAMoC,KAAKK,GAAQA,EAAKC,OAASxL,SAASoL,EAAME,KAChEG,EAAQ,QACDvW,IAAPoW,QAAmCpW,IAAfoW,EAAGvC,UACvB0C,EAAQH,EAAGvC,SAEfpS,KAAKS,SAAS,CACV2R,QAAS0C,EACT3E,SAAUsE,EACVjW,MAAO,GACPsS,2BAA2B,EAC3BE,kBAIR4B,cACI,IAAIpD,EAAatI,OAAOwN,OAAO,GAAI1U,KAAKC,MAAMkQ,UAC1CrJ,EAAS9I,YAAgBwR,EAAYxP,KAAK+P,qBAE9C,GADYjJ,EAAOtI,MACR,CACP,IAAIsN,EAAO9L,KACPwM,EAAS,CACTC,IAAK,6BACLC,OAAQ,OACRzO,KAAMuR,GAEV1D,EAAKrL,SAAS,CAACsU,iBAAiB,IAChCjI,YAASN,GACJO,MAAK,SAAUC,GACZ,IAAIvO,EAAUuO,EAAS/O,KACvB6N,EAAKrL,SAAS,CACV0P,SAAU,KACVW,2BAA2B,EAC3BC,QAAQ,EACRgE,iBAAiB,IAErBjS,IAAMiR,QAAQtV,EAAS,CACnBsE,SAAU,YACVC,OAAQ,aACRC,QAAS,SAEd2K,OAAM,SAAUzP,GACnB0P,YAAe1P,GACf2N,EAAKrL,SAAS,CAACsU,iBAAiB,YAGpCjS,IAAM3E,MAAM2I,EAAO1I,aAAc,CAC7B2E,SAAU,YACVC,OAAQ,aACRC,QAAS,MAoBrB+P,cAAc7O,GAEV,GAAKnE,KAAKoP,gBAAgBjL,EAAIyK,IASvB,CACH,IAAI9C,EAAO9L,KACPwM,EAAS,CACTC,IAAK,+BACLC,OAAQ,OACRzO,KAAMkG,GAEV2H,EAAKrL,SAAS,CAACuU,mBAAmB,IAClClI,YAASN,GACJO,MAAK,SAAUC,GACZ,IAAIvO,EAAUuO,EAAS/O,KACvB6N,EAAKrL,SAAS,CACV0P,SAAU,KACVW,2BAA2B,EAC3BC,QAAQ,EACRzN,MAAO,KACP0R,mBAAmB,IAEvBlS,IAAMiR,QAAQtV,EAAS,CACnBsE,SAAU,YACVC,OAAQ,aACRC,QAAS,SAEd2K,OAAM,SAAUzP,GACnB0P,YAAe1P,GACf2N,EAAKrL,SAAS,CAAC2C,SAAS,EAAO4R,mBAAmB,YAjCtDhV,KAAKS,SAAS,CACV6C,MAAOnC,IAAAC,cAAC0J,IAAU,CAAC4E,SAAO,EACP3E,eAAe,QACfC,kBAAkB,UAClB1J,MAAM,qFACN2J,UAAWA,IAAMjL,KAAKS,SAAS,CAAC6C,MAAO,WAmCtEmQ,aACI,IAAI3H,EAAO9L,KACPqP,EAAY,GACZ4F,EAAe,GAUnB,GARAjV,KAAKC,MAAM0Q,UAAUvJ,QAAQwH,IACrB5O,KAAKoP,gBAAgBR,GACrBS,EAAUxG,KAAK+F,GAEfqG,EAAapM,KAAK+F,KAItBqG,EAAajU,OAAS,EACtBhB,KAAKS,SAAS,CACV6C,MAAOnC,IAAAC,cAAC0J,IAAU,CAAC4E,SAAO,EACP3E,eAAe,QACfC,kBAAkB,UAClB1J,MAAM,oCACN2J,UAAWA,IAAMjL,KAAKS,SAAS,CAAC6C,MAAO,QACtDnC,IAAAC,cAAA,OAAKM,MAAO,CAACiO,UAAW,WAEhBsF,EAAahU,IAAI2N,GAETzN,IAAAC,cAAA,SAAOM,MAAO,CAAC+D,MAAO,QACjBzF,KAAKuP,kBAAkBX,GAAvB5O,kJAS1B,CACH,IAAIwM,EAAS,CACTC,IAAK,mCACLC,OAAQ,OACRzO,KAAMoR,GAEVvD,EAAKrL,SAAS,CAAC2C,SAAS,EAAME,MAAO,OACrCwJ,YAASN,GACJO,MAAK,SAAUC,GACZ,IAAIvO,EAAUuO,EAAS/O,KACvB6N,EAAKrL,SAAS,CACV0P,SAAU,KACVY,QAAQ,EACRzN,MAAO,KACP8N,KAAM,EACNT,UAAW,GACXuE,aAAa,IAEjBpJ,EAAK2D,oBAAoBhR,MAE5BmP,MAAOzP,IACJ0P,YAAe1P,GACf2N,EAAKrL,SAAS,CAAC2C,SAAS,EAAO+R,qBAAqB,OA2CpElC,sBAAsBmC,GAClB,MAAMpH,EAASoH,EAAMpH,OACrB,IAAI/H,EAAwB,aAAhB+H,EAAO/O,KAAsB+O,EAAOc,QAAUd,EAAO/H,MAC7D5H,EAAO2P,EAAO3P,KAMlB,GAJa,oBAATA,IACA4H,EAAQA,EAAM8C,WAAW0C,MAAM,KAAKC,KAAK,KAGjC,MAARrN,GAAyB,OAATA,EAAe,CAC/B,IAAIsW,EAAK3U,KAAKC,MAAMkS,MAAMoC,KAAKK,GAAQA,EAAKC,OAASxL,SAASpD,IAC9D,QAAW1H,IAAPoW,QAAmCpW,IAAfoW,EAAGvC,QAAuB,CAC9C,IAAI0C,EAAQH,EAAGvC,QACfpS,KAAKS,SAAS,CAAC2R,QAAS0C,KAIhC,IAAItW,EAAQwB,KAAKuS,gBAAgBlU,IAAS2B,KAAKuS,gBAAgBlU,GAAM4H,IACxD,oBAAT5H,GAA8B4H,EAAMoP,MAAM,uFAC1CrV,KAAKS,SAAUuG,IACXA,EAAUmJ,SAAS9R,GAAQ4H,EAC3Be,EAAUxI,MAAMH,GAAQG,EACjB,CACH2R,SAAUnJ,EAAUmJ,SACpB3R,MAAOwI,EAAUxI,SAMjC8W,cAAcjX,GACV,IAAIG,EAAQwB,KAAKC,MAAMzB,MAAMH,GAC7B,MAAqB,mBAAVG,OACP,EAEO,CACHA,MAAOA,EACP+W,SAAU/W,GA8CtB6U,gBACI,IAAIvH,EAAO9L,KACX,GAAoC,IAAhC8L,EAAK7L,MAAM0Q,UAAU3P,OACrBhB,KAAKS,SAAS,CACV6C,MACInC,IAAAC,cAAC0J,IAAU,CAAC3M,OAAK,EACL4M,eAAe,QACfC,kBAAkB,QAClB1J,MAAM,iBACN2J,UAAWA,IAAMjL,KAAKS,SAAS,CAAC6C,MAAO,QAClD,sFAKN,CACH,IACIkJ,EAAS,CACTC,IAAK,2CACLC,OAAQ,OACRzO,KAJO6N,EAAKyE,kBAMhBzD,YAASN,GACJO,KAAK,KACFjK,IAAMiR,QAAQ,2GAAmF,CAC7FhR,SAAU,YACVC,OAAQ,aACRC,QAAS,QAEd2K,OAAM,SAAUzP,GACnB0P,YAAe1P,OAK3BmV,oBACItT,KAAKS,SAAS,CAAC6R,yBAAyB,IAG5CkD,mBACI,IAAIC,EAAiB,CACjB,CAACpX,KAAM,uBAAmBuL,KAAM,kBAChC,CAACvL,KAAM,mBAAoBuL,KAAM,kBACjC,CAACvL,KAAM,+CAAiCuL,KAAM,wBAC9C,CAACvL,KAAM,yBAAoBuL,KAAM,mBACjC,CAACvL,KAAM,YAAQuL,KAAM,UACrB,CAACvL,KAAM,iBAAUuL,KAAM,YACvB,CAACvL,KAAM,mBAAoBuL,KAAM,SACjC,CAACvL,KAAM,gBAAiBuL,KAAM,4BAElC5J,KAAKC,MAAMyV,WAAa1V,KAAKC,MAAMyV,UAAUzU,IAAI,CAAC2T,EAAMxQ,KACpD,IAAIuR,EAAY,QAAUvR,EAC1BqR,EAAe5M,KAAK,CAACxK,KAAMuW,EAAMhL,KAAM+L,MAW3C,IAAI1O,EAAcwO,EAGlB,OAAOtU,IAAAC,cAACwU,QAAK,CAACC,OAAQ7V,KAAKC,MAAMqS,wBAAyBzP,KAAK,KACjDiT,OAAQA,IAAM9V,KAAKS,SAAS,CAAC6R,yBAAyB,KAChEnR,IAAAC,cAAC2U,cAAW,CAAC1T,UAAU,yBACVyT,OAAQA,IAAM9V,KAAKS,SAAS,CAAC6R,yBAAyB,KAAS,8BAG5EnR,IAAAC,cAAC4U,YAAS,KACN7U,IAAAC,cAACyE,EAAsB,CAACoB,YAAaA,EAAagF,aATvC,GAUaJ,SAAUA,IAAM7L,KAAKS,SAAS,CAAC6R,yBAAyB,IACxDzH,SAAU7K,KAAKuT,qBAKnD0C,qBAEI,OAAO9U,IAAAC,cAACwU,QAAK,CAACC,OAAQ7V,KAAKC,MAAM6Q,0BAA2BjO,KAAK,KACnDiT,OAAQA,IAAM9V,KAAKS,SAAS,CAACqQ,2BAA2B,KAClE3P,IAAAC,cAAC2U,cAAW,CAAC1T,UAAU,yBACVyT,OAAQA,IAAM9V,KAAKS,SAAS,CAACqQ,2BAA2B,KAAS,yBAE1E3P,IAAAC,cAAA,UAAQiB,UAAU,aAAa8C,QAASA,KACpCnF,KAAKkW,mBACNxU,MAAO,CAACqB,SAAU,WAAYoT,MAAO,OAAQC,UAAW,SAAU9K,UAAW,SAC5EnK,IAAAC,cAAA,QAAMiB,UAAU,eAAc,sCAC9BlB,IAAAC,cAAA,KAAGiB,UAAU,wCAAwCX,MAAO,CAAC2U,QAAS,UAE9ElV,IAAAC,cAAC4U,YAAS,KACLhW,KAAKC,MAAM6Q,2BAA6B3P,IAAAC,cAACkD,IAAM,CAACC,IAAKvE,KAAK6D,SAC1D7D,KAAKC,MAAMkQ,UAAYhP,IAAAC,cAAA,WACpBD,IAAAC,cAACkV,OAAI,KACDnV,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,YAAW,4CAC7BvV,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,GACLtV,IAAAC,cAAC8J,QAAKhE,OAAAwN,OAAA,CAACzV,KAAK,SAASZ,KAAK,WAAW4H,MAAOjG,KAAKC,MAAMkQ,SAASxR,SACzDoP,SAAU/N,KAAKiT,uBAA2BjT,KAAKsV,cAAc,aAC/D,CAACnU,IAAAC,cAAA,UAAQ1B,IAAI,IAAIuG,MAAM,IAAG,iBAAqBjG,KAAKC,MAAM+Q,cAAc/P,IAAIiH,GACzE/G,IAAAC,cAAA,UACI1B,IAAKwI,EAAE0G,GAAI3I,MAAOiC,EAAE0G,GAAI+F,GAAIzM,EAAEyM,GAAIgC,KAAMzO,EAAEyO,MAAOzO,EAAE7J,WAIvE8C,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,QAAO,wBACzBvV,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,GACLtV,IAAAC,cAAC8J,QAAKhE,OAAAwN,OAAA,CAACzV,KAAK,SAASZ,KAAK,SAAS4H,MAAOjG,KAAKC,MAAMkQ,SAASzR,OACvDqP,SAAU/N,KAAKiT,uBAA2BjT,KAAKsV,cAAc,WAC/D,CAACnU,IAAAC,cAAA,UAAQ1B,IAAI,IAAIuG,MAAM,IAAG,iBAAqBjG,KAAKC,MAAMiS,MAAMjR,IAAIiH,GAAK/G,IAAAC,cAAA,UACtE1B,IAAKwI,EAAE0G,GAAI3I,MAAOiC,EAAE0G,IAAK1G,EAAEjJ,WAI3CkC,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,QAAO,yBACzBvV,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,GACLtV,IAAAC,cAAC8J,QAAKhE,OAAAwN,OAAA,CAACzV,KAAK,OAAOZ,KAAK,OAAO4H,MAAOjG,KAAKC,MAAMkQ,SAAS9R,KACnD0P,SAAU/N,KAAKiT,uBAA2BjT,KAAKsV,cAAc,YAG3EtV,KAAK+P,qBACN5O,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,YAAW,sBAC7BvV,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,GACLtV,IAAAC,cAAC8J,QAAKhE,OAAAwN,OAAA,CAACzV,KAAK,OAAOZ,KAAK,kBAAkB4H,MAAOjG,KAAKC,MAAMkQ,SAASvR,gBAC9DmP,SAAU/N,KAAKiT,uBAA2BjT,KAAKsV,cAAc,uBAG5EnU,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,sBAAqB,iBACvCvV,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,GACLtV,IAAAC,cAAC8J,QAAK,CAACjM,KAAK,WAAWZ,KAAK,qBACrByQ,QAAwD,MAA/C9O,KAAKC,MAAMkQ,SAASyG,yBAAkC5W,KAAKC,MAAMkQ,SAASyG,wBACnF7I,SAAW7F,IACP,IAAIiI,EAAWnQ,KAAKC,MAAMkQ,SAC1BA,EAASyG,wBAA0B1O,EAAE8F,OAAOc,QAC5C9O,KAAKS,SAAS,CAAC0P,kBAIlChP,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,MAAK,aACvBvV,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,GACLtV,IAAAC,cAAC8J,QAAKhE,OAAAwN,OAAA,CAACzV,KAAK,SAASZ,KAAK,KAAK4H,MAAOjG,KAAKC,MAAMkQ,SAASwE,GACnD5G,SAAU/N,KAAKiT,uBAA2BjT,KAAKsV,cAAc,OAC/D,CAACnU,IAAAC,cAAA,UAAQ1B,IAAI,IAAIuG,MAAM,IAAG,iBAAqBjG,KAAKC,MAAMkS,MAAMlR,IAAIiH,GAAK/G,IAAAC,cAAA,UACtE1B,IAAKwI,EAAE2M,KAAM5O,MAAOiC,EAAE2M,MAAO3M,EAAE2O,WAI/C1V,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,QAAO,kBACzBvV,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,GACLtV,IAAAC,cAAC8J,QAAKhE,OAAAwN,OAAA,CAACzV,KAAK,SAASZ,KAAK,OAAO4H,MAAOjG,KAAKC,MAAMkQ,SAASwG,KACrD5I,SAAU/N,KAAKiT,uBAA2BjT,KAAKsV,cAAc,SAC/D,CAACnU,IAAAC,cAAA,UAAQ1B,IAAI,IAAIuG,MAAM,IAAG,iBAAqBjG,KAAKC,MAAMmS,QAAQnR,IAAIiH,GAAK/G,IAAAC,cAAA,UACxE1B,IAAKwI,EAAE4O,OAAQ7Q,MAAOiC,EAAE4O,QAAS5O,EAAE2O,WAInD1V,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,SAAQ,WAC1BvV,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,GACTtV,IAAAC,cAAA,WAAA8F,OAAAwN,OAAA,CAAUzV,KAAK,OAAOoD,UAAU,eAAehE,KAAK,QAC1C4H,MAAOjG,KAAKC,MAAMkQ,SAAS4G,MAAO5L,KAAK,IACvC4C,SAAU/N,KAAKiT,uBAA2BjT,KAAKsV,cAAc,aAG1EtV,KAAK+P,qBACN5O,IAAAC,cAACmV,YAAS,CAACpS,KAAG,GACVhD,IAAAC,cAACQ,MAAG,CAAC6U,GAAI,IACTtV,IAAAC,cAACoV,QAAK,CAACC,GAAI,EAAGC,IAAI,kBACXhV,MAAO,CAAC+D,MAAO,aAAczF,KAAKgQ,8BAKzD7O,IAAAC,cAAC4V,cAAW,KACR7V,IAAAC,cAACoE,SAAM,CAAClE,MAAM,aAAQI,MAAO,CAACuV,YAAa,OAAQlW,MAAO,SAAU0E,MAAM,YAClEN,QAASA,IAAMnF,KAAKS,SAAS,CAACqQ,2BAA2B,KAAS,cAG1E3P,IAAAC,cAACoE,SAAM,CAAClE,MAAM,SAASI,MAAO,CAACuV,YAAa,OAAQlW,MAAO,SAAU0E,MAAM,UACnEC,SAAU1F,KAAKC,MAAM8U,gBACrB5P,QAASnF,KAAK4S,aAAa,YAO/CsD,mBACqC,IAA7BlW,KAAKC,MAAM+R,gBACXhS,KAAKS,SAAS,CAACyW,KAAM,IACrBlX,KAAKS,SAAS,CAACuR,eAAe,IAC1BhS,KAAKC,MAAMc,MAAQ,KACnBf,KAAKS,SAAS,CAACyW,KAAM,KAKjChE,SAASjV,GACe,UAAhBA,EAAKkZ,QAAoC,eAAdlZ,EAAKgB,MAChCe,KAAKS,SAAS,CAACwR,WAAW,IAEV,SAAhBhU,EAAKkZ,QAAqC,UAAhBlZ,EAAKkZ,QAAsC,SAAhBlZ,EAAKkZ,SAC1DnX,KAAKS,SAAS,CAACwR,WAAW,IAC1BjS,KAAKS,SAAS,CAACuR,eAAe,IAC9BhS,KAAKS,SAAS,CAACyW,KAAM,IACrBlX,KAAKkW,mBAIb1C,WAAW5E,GACP,OAA8C,IAAtC5O,KAAKC,MAAM0Q,UAAUyG,QAAQxI,GAGzC8E,qBAAqBxL,EAAG/D,EAAKyK,GACzB,IAAI9C,EAAO9L,KACP8O,EAAU5G,EAAE8F,OAAOc,QACnBuI,EAAQvL,EAAK7L,MAAMkD,QACnBwN,EAAY7E,EAAK7L,MAAM0Q,UAC3B,GAAY,QAARxM,EAAe,CACf,IAAIwM,EAAY,GACZ7B,GACAuI,EAAMjQ,QAAQwN,IACVjE,EAAU9H,KAAK+L,EAAKhG,MAG5B9C,EAAKrL,SAAS,CAACkQ,UAAWA,EAAWuE,YAAapG,QAC/C,CACH,IAAI1K,EAAQuM,EAAUyG,QAAQjT,EAAIyK,IAC9BxK,GAAS,EACTuM,EAAY,IACLA,EAAUtG,MAAM,EAAGjG,MACnBuM,EAAUtG,MAAMjG,EAAQ,IAG/BuM,EAAU9H,KAAK1E,EAAIyK,IAEvB9C,EAAKrL,SAAS,CACVkQ,UAAWA,EACXuE,YAAevE,EAAU3P,OAAS,GAAM2P,EAAU3P,SAAW8K,EAAK7L,MAAMkD,QAAQnC,UAK5FJ,SACI,IAAI2Q,EAAQvR,KAAKC,MAAMsR,MACnBE,EAASzR,KAAKC,MAAMwR,OACpBC,EAAS1R,KAAKC,MAAMyR,OAEpB4F,EAAa,GACbtX,KAAKC,MAAMkD,SAAWnD,KAAKC,MAAMkD,mBAAmBwQ,OACpD3T,KAAKC,MAAMkD,QAAQlC,IAAIiH,IACnBoP,EAAWzO,KAAKX,EAAE0G,MAI1B,MAAM/J,EAAU,CACZ,CACIC,OAAS9E,KAAKC,MAAMkD,SAChBhC,IAAAC,cAACmW,IAAa,CAACC,gBAAiBxX,KAAKC,MAAM0Q,UAC5BW,YAAatR,KAAKC,MAAMqR,YACxBgG,WAAYA,EACZvJ,SAAU7F,GAAKlI,KAAKS,SAAS,CAACkQ,UAAWzI,MAE5DnD,SAAU,KACV0S,WAAY,WACZzS,UAAU,EACVC,KAAMA,CAACd,EAAKC,IAAWpE,KAAKC,MAAMkD,SAC9BhC,IAAAC,cAAA,SAAOnC,KAAK,WAAW6P,QAAS9O,KAAKwT,WAAWrP,EAAIyK,IAC7Cb,SAAW7F,GAAMlI,KAAK0T,qBAAqBxL,EAAG/D,EAAK,KAAMC,MAExE,CACIU,OAAQ,qBACRC,SAAU,OACVE,KAAO2P,GACHzT,IAAAC,cAAA,OAAKM,MAAO,CAACgW,UAAW,OAAQ3W,MAAO,QAASiB,SAAU,SAAU4S,EAAKvW,OAEjF,CACIyG,OAAQ,wCACRC,SAAU,aACVC,UAAU,EACVC,KAAO2P,GAAUzT,IAAAC,cAAA,OAAKM,MAAO,CAACgW,UAAW,OAAQ1V,SAAU,SAAU4S,EAAK3E,YAC1ElP,MAAO,OAEX,CACI+D,OAAQ,iBACRC,SAAU,kBACVE,KAAO2P,GAAUzT,IAAAC,cAAA,OAAKM,MAAO,CACzBgW,UAAW,OACXjS,MAAO,iBACP1E,MAAO,QACPiB,SAAU,SACV4S,EAAKhW,iBACTmC,MAAO,OAEX,CACI+D,OAAQ,cACRC,SAAU,0BACVE,KAAO2P,GAAUzT,IAAAC,cAAA,OAAKM,MAAO,CAACgW,UAAW,WAAWvW,IAAAC,cAAA,SAAOnC,KAAK,WACL6P,QAA0C,OAAjC8F,EAAKgC,yBAAmChC,EAAKgC,wBACtDlR,SAAS,eAExE,CACIZ,OAAQ,qBACRC,SAAU,GACVC,UAAU,EACVjE,MAAO,OACPkE,KAAMd,GACFhD,IAAAC,cAAA,WACID,IAAAC,cAACuW,IAAU,CAACrW,MAAM,aAAUsW,OAAO,UAAUzS,QAASA,IAAMnF,KAAK2S,YAAYxO,GACjEsB,MAAM,YAClBtE,IAAAC,cAACuW,IAAU,CAACrW,MAAM,MAAMsW,OAAO,WAAWnS,MAAM,SACpCN,QAASA,KACLnF,KAAKS,SAAS,CACV6C,MACInC,IAAAC,cAACyW,IAAa,CAACC,YAAU,EAACpI,SAAO,EAClB3E,eAAe,OACfgN,cAAc,aACd/M,kBAAkB,SAClBgN,iBAAiB,UACjBtS,SAAU1F,KAAKC,MAAM+U,kBACrB1T,MAAM,gBACN2J,UAAWA,IAAMjL,KAAKS,SAAS,CAAC6C,MAAO,MAAO,KAC1CtD,KAAKgT,cAAc7O,KAEvB0H,SAAUA,IAAM7L,KAAKS,SAAS,CAAC6C,MAAO,QAEhDa,EAAI9F,MAAwC,MAA/B8F,EAAIyS,yBAAkE,GAA/BzS,EAAIyS,wBAAmC,gBAAkB,qBAAkB,uBA+B5K,OAAQzV,IAAAC,cAAA,OAAKiB,UAAU,sBAClBrC,KAAKC,MAAM+R,eACZ7Q,IAAAC,cAAC6W,IAAO,CACJC,eAAe,EACfC,WAAS,EACTzG,OAAQA,EACRH,MAAQvR,KAAKC,MAAM6Q,0BAAoCW,EAARF,EAC/C6G,YAAY,EACZC,IAAKrY,KAAKC,MAAMgS,UAChBqG,mBAAmB,EACnBC,cAAc,EACdC,gBAAgB,EAChBC,eAAe,EACfC,mBAAmB,EACnBC,gBAAgB,EAChBC,sBAAsB,EACtBC,oBAAoB,EACpBC,gBAAgB,EAChBC,qBAAqB,EACrB7F,SAAUlT,KAAKkT,SACf8F,YAAa,EACb/G,UAAWjS,KAAKC,MAAMgS,UACtBgH,OAAQ,CACJC,QAAS,CACLC,OAAQ,IACRC,aAAc,cAM1BjY,IAAAC,cAACiY,MAAG,CAAChX,UAAU,SAASX,MAAO,CAACuV,YAAa,OAAQ7L,OAAQ,SAQzDjK,IAAAC,cAACkY,IAAW,CAACvW,SAAS,WAAWV,UAAU,cAAcX,MAAO,CAAC6X,SAAU,WAC9DC,MAAM,oBACNrU,QAASnF,KAAK+S,iBACzB/S,KAAKF,MAAM2Z,YAAYC,kBACzBvY,IAAAC,cAACkY,IAAW,CAACvW,SAAS,WAAWV,UAAU,cAAcX,MAAO,CAAC6X,SAAU,WAC9DC,MAAM,2BAAwBlY,MAAM,gDACpC6D,QAASnF,KAAKsT,oBAC1BqG,YAAoB3Z,KAAM4Z,MAC3BzY,IAAAC,cAACkY,IAAW,CAACvW,SAAS,WAAWV,UAAU,aAAaX,MAAO,CAAC6X,SAAU,WAC7DC,MAAM,qBAAkBlY,MAAM,qCAC9BoE,SAAU1F,KAAKC,MAAMmD,QACrB+B,QAASA,KACDnF,KAAKC,MAAM0Q,WAAa3Q,KAAKC,MAAM0Q,UAAU3P,OAAS,EACtDhB,KAAKS,SAAS,CACV6C,MACInC,IAAAC,cAAC0J,IAAU,CAACgN,YAAU,EAACpI,SAAO,EAClB3E,eAAe,OACfgN,cAAc,aACd/M,kBAAkB,SAClBgN,iBAAiB,UACjB1W,MAAM,gBACN2J,UAAWA,KACPjL,KAAKyT,cAET5H,SAAUA,IAAM7L,KAAKS,SAAS,CAAC6C,MAAO,QACjD,yCAMTtD,KAAKS,SAAS,CACV6C,MACInC,IAAAC,cAAC0J,IAAU,CAAC4E,SAAO,EACP3E,eAAe,QACfC,kBAAkB,UAClB1J,MAAM,+BACN2J,UAAWA,IAAMjL,KAAKS,SAAS,CAAC6C,MAAO,QAClD,gCAO9BnC,IAAAC,cAAA,MAAIiB,UAAU,eACVlB,IAAAC,cAAA,MAAIiB,UAAU,uBACVlB,IAAAC,cAAA,UAAQiB,UAAU,aAAa8C,QAASA,KACpCnF,KAAKkW,oBAEL/U,IAAAC,cAAA,QAAMiB,UAAU,eAAc,sCAC9BlB,IAAAC,cAAA,KAAGiB,UAAU,8CAK7BlB,IAAAC,cAAA,OAAKiB,UAAU,uBACXlB,IAAAC,cAAA,OAAKiB,UAAU,eACXlB,IAAAC,cAAA,MAAIiB,UAAU,cAAa,sBAE/BlB,IAAAC,cAAA,OAAKiB,UAAU,MAAMX,MAAO,CAACI,OAAQ,gBACjCX,IAAAC,cAAA,OAAKiB,UAAU,sBACXlB,IAAAC,cAACzB,EAAc,CACXO,SAAUF,KAAKC,MAAMC,SACrBC,aAAcH,KAAKC,MAAME,aACzBC,YAAaJ,KAAKC,MAAMG,eAEhCe,IAAAC,cAAA,OAAKiB,UAAU,qBAAqBX,MAAO,CAAC4J,UAAW,SACnDnK,IAAAC,cAAA,OAAKiB,UAAU,aACXlB,IAAAC,cAACyY,IAAc,CAACC,OAjIrB,CACX,CACIN,MAAO,qBACPzU,SAAU,OACV9F,KAAM,OACN8a,SAAU,KAEd,CACIP,MAAO,iBACPzU,SAAU,kBACV9F,KAAM,OACN8a,SAAU,KAEd,CACIP,MAAO,cACPzU,SAAU,0BACV9F,KAAM,UACN8a,SAAU,MAiHkB3W,QAASpD,KAAKC,MAAMiR,UACpB8I,SAAUha,KAAK6S,gBAEnC1R,IAAAC,cAAA,OAAKiB,UAAU,aACXlB,IAAAC,cAACuE,IAAK,CAACd,QAASA,EACT1B,QAASnD,KAAKC,MAAMkD,QACpBC,QAASpD,KAAKC,MAAMmD,QACpB6N,MAAOjR,KAAKC,MAAMgR,MAClBG,KAAMpR,KAAKC,MAAMmR,KACjBL,OAAQ/Q,KAAKC,MAAM8Q,OACnBlO,KAAM7C,KAAKC,MAAM4C,KACjBqW,QAAS,CAAC,IAAK,KAAM,KAAM,KAAM,OACjCxG,UAAW1S,KAAK0S,aAG3BvR,IAAAC,cAAA,OAAKM,MAAO,CAACkO,MAAO,UAChBzO,IAAAC,cAACkY,IAAW,CAACvW,SAAS,YAAYV,UAAU,eAAeX,MAAO,CAAC6X,SAAU,WAChEC,MAAM,gBAAgBlY,MAAM,oBAC5BoE,SAAU1F,KAAKC,MAAMoS,mBACrBlN,QAASnF,KAAKqT,oBAK1CrT,KAAKC,MAAMqD,MACXtD,KAAKiW,sBACJjW,KAAKC,MAAM6Q,2BAA6B3P,IAAAC,cAACkD,IAAM,CAACC,IAAKvE,KAAK6D,SAC3D7D,KAAKwV,qBAKHzG","file":"static/js/31.88491150.chunk.js","sourcesContent":["import {validateField} from \"../../../../common/validation\";\n\n\nexport function validDepartment(data, isCodeMust) {\n    let error = {};\n    let errorMessage=\"\";\n    error.name = validateField(undefined, \"1,150\", data.name);\n    if(!error.name.valid){\n        errorMessage = errorMessage + \" <strong>Departman Adı \" + error.name.message + \"</strong><br/>\";\n    }\n    error.typeId = validateField(undefined, \"1,150\", data.typeId);\n    if(!error.typeId.valid){\n        errorMessage = errorMessage + \" <strong>Departman Tür \" + error.typeId.message + \"</strong><br/>\";\n    }\n    error.parentId = validateField(\"number\", \"1,11\", data.parentId);\n    if(!error.parentId.valid){\n        errorMessage = errorMessage + \" <strong>Bağlı Olduğu Departman \" + error.parentId.message + \"</strong><br/>\";\n    }\n    if (isCodeMust) {\n      error.integrationCode = validateField(undefined, \"1,150\", data.integrationCode);\n      if(!error.integrationCode.valid){\n        errorMessage = errorMessage + \" <strong>Departman Kodu \" + error.integrationCode.message + \"</strong><br/>\";\n      }\n    }\n\n    let valid = isValidObject(error);\n    return {error: error, valid: valid,errorMessage:errorMessage};\n}\n\nexport function validFormType(data) {\n    let error = {};\n    let errorMessage=\"\";\n    error.category = validateField(undefined, \"1,150\", data.category);\n    if(!error.category.valid){\n        errorMessage = errorMessage + \" <strong>Form Türü \" + error.category.message + \"</strong><br/>\";\n    }\n\n    let valid = isValidObject(error);\n    return {error: error, valid: valid,errorMessage:errorMessage};\n}\nexport function validDepartmentType(data) {\n    let error = {};\n    let errorMessage=\"\";\n    error.type = validateField(undefined, \"1,150\", data.type);\n    if(!error.type.valid){\n        errorMessage = errorMessage + \" <strong>Departman Türü \" + error.type.message + \"</strong><br/>\";\n    }\n\n    let valid = isValidObject(error);\n    return {error: error, valid: valid,errorMessage:errorMessage};\n}\nexport function validFlowTemplate(flowTemplate) {\n    let error = {};\n    let errorMessage=\"\";\n    error.documentType = validateField(\"documentType\", \"1,100\", flowTemplate.documentType);\n    if(!error.documentType.valid){\n        errorMessage = `${errorMessage} <strong>Belge Türü ${error.documentType.message}</strong><br/>`;\n    }\n    let valid = isValidObject(error);\n    return {error: error, valid: valid,errorMessage:errorMessage};\n}\n\nexport function validKepAccount(data) {\n\tlet error = {};\n\tlet errorMessage=\"\";\n    error.account = validateField(\"email\", \"1,100\", data.account);\n    if(!error.account.valid){\n        errorMessage = errorMessage + \" <strong>Kep Adresi \" + error.account.message + \"</strong><br/>\";\n    }\n    error.tckn = validateField(\"number\", \"11,11\", data.tckn);\n    if(!error.tckn.valid){\n        errorMessage = errorMessage + \" <strong>TC Kimlik No \" + error.tckn.message + \"</strong><br/>\";\n    }\n    error.parola = validateField(undefined, \"1,20\", data.parola);\n    if(!error.parola.valid){\n        errorMessage = errorMessage + \" <strong>Parola \" + error.parola.message + \"</strong><br/>\";\n    }\n    error.sifre = validateField(undefined, \"1,20\", data.sifre);\n    if(!error.sifre.valid){\n        errorMessage = errorMessage + \" <strong>Şifre \" + error.sifre.message + \"</strong><br/>\";\n    }\n\n    let valid = isValidObject(error);\n\treturn {error: error, valid: valid,errorMessage:errorMessage};\n}\n\nexport function isValidObject(error) {\n\tlet valid = true;\n\tfor (let key in error) {\n\t\tlet tError = error[key];\n\t\tif (!tError.valid) {\n\t\t\tvalid = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn valid;\n}\n\n\n","import React, {Component} from 'react';\nimport Tree from \"rc-tree\";\nimport {Col} from \"reactstrap\";\nimport TreeNode from \"rc-tree/es/TreeNode\";\nimport {findChildrenLowestLevel} from \"../common/PeykHelper\";\n\nclass DepartmentTree extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      treeData: [],\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n    };\n  }\n\n  componentDidMount() {\n    let levelInfo = findChildrenLowestLevel(this.props.treeData[0]);\n    this.setState({level: levelInfo[0], maxLength: levelInfo[1] + 20});\n  }\n\n  render() {\n    let maxLength = this.state.maxLength ? this.state.maxLength : 0;\n    const icon = ({}) => (<i className=\"fa fa-university\"/>);\n    const loop = (nodes, width) => {\n      if (!nodes || !nodes.length) {\n        return null\n      }\n      return nodes.map((node) =>\n        <TreeNode key={node.key}\n                  title={customLabel(node, width)}>\n          {loop(node.children, width - 18)}\n        </TreeNode>\n      )\n    };\n    const tooltip = (node) => (\n      \"Departman : \" + node.title + \"\\n\" +\n      \"Departman Kodu : \" + (!!node.integrationCode ? node.integrationCode : \"\")\n    );\n    const customLabel = (node, width) => (\n      <div style={{display: 'inline-flex'}}>\n        <Col xs={'12'} title={tooltip(node)} style={{margin: '0', padding: '0', width: width + \"px\"}}>\n          <label>{node.title}</label>\n        </Col>\n      </div>\n    );\n\n    return (\n      <div style={{overflow: 'auto'}}>\n        <Tree\n          showLine\n          icon={icon}\n          selectable={false}\n          defaultExpandAll={true}>\n          {loop(this.props.treeData, maxLength)}\n        </Tree>\n      </div>\n    )\n  }\n}\n\nexport default DepartmentTree;","import React, {Component} from 'react';\nimport {humanReadableByteCount} from \"../../../helper/helper\";\nimport {Button} from 'reactstrap';\nimport 'react-datetime/css/react-datetime.css'\nimport Dropzone from 'react-dropzone'\nimport Notify from 'react-notification-alert';\nimport Table from \"../../../components/Table/Table\";\nimport Alert from \"react-s-alert\";\n\nclass UploadDepartmentFile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: [],\n            acceptedFiles: [],\n            loading: false,\n            uploading: false,\n            alert: null,\n        };\n        this.startUpload = this.startUpload.bind(this);\n        this.canUpload = this.canUpload.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.removeAcceptedFile = this.removeAcceptedFile.bind(this);\n    }\n\n    startUpload() {\n\n        let showError = false, errorMessage = \"\";\n        if (!this.state.acceptedFiles || this.state.acceptedFiles.length === 0) {\n\n            errorMessage = 'Yüklenecek dosyayı seçiniz';\n            showError = true;\n        }\n\n        if (showError) {\n            this.refs.notify.notificationAlert({\n                place: 'tr',\n                message: errorMessage,\n                type: 'danger',\n                autoDismiss: 5,\n            });\n            return;\n        }\n\n        this.props.onFileSelect(this.state.acceptedFiles[0]);\n    }\n\n    onDrop(acceptedFiles, rejectedFiles) {\n\n        this.setState({acceptedFiles})\n\n        if (rejectedFiles.length > 0) {\n            this.refs.notify.notificationAlert({\n                place: 'tr',\n                message: 'Yalnızca \\'xls\\' veya \\'xlsx\\' uzantılı dosya seçebilirsiniz',\n                type: 'danger',\n                autoDismiss: 5,\n            });\n        }\n    }\n\n    removeAcceptedFile(row, index) {\n        let {acceptedFiles} = this.state\n\n        acceptedFiles.splice(index, 1);\n\n        this.setState({acceptedFiles})\n    }\n\n    canUpload() {\n        return (!!this.state.acceptedFiles && this.state.acceptedFiles.length > 0)\n    }\n\n    render() {\n        return (\n            <div>\n                <Notify ref=\"notify\"/>\n                {this.state.alert}\n                <div className=\"row\">\n                    <Dropzone\n                        accept=\".xls,.xlsx,.XLS,.XLSX\"\n                        className=\"FormRenk col-sm-12\"\n                        activeClassName=\"dropzoneActiveClass\"\n                        style={{}}\n                        multiple={false}\n                        onDrop={this.onDrop}>\n                        <div className=\"dropzoneInnerArea\">\n                            {this.props.title ? this.props.title : \"Toplu Departman Excel dosyalarınızı buraya sürükleyin veya seçmek için tıklayın\"}\n                        </div>\n                    </Dropzone>\n                </div>\n                {this.state.acceptedFiles.length > 0 &&\n                this.filesToBeUploaded()\n                }\n            </div>\n        );\n    }\n\n    handleButtonClick = () => {\n        if (this.state.acceptedFiles.some(file => file.size > 75 * 1024 * 1024)) {\n            Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return;\n        }\n\n        this.startUpload();\n    }\n\n\n    filesToBeUploaded() {\n\n        const columns = [\n            {\n                Header: \"Dosya Adı\",\n                accessor: \"name\",\n                sortable: false\n            },\n            {\n                Header: \"Boyut\",\n                accessor: \"size\",\n                sortable: false,\n                Cell: row => (<div>{humanReadableByteCount(row.size, true)}</div>)\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: (row, index) => (\n                    <div>\n                        <button type=\"button\"\n                                onClick={() => this.removeAcceptedFile(row, index)}\n                                data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Sil\"\n                                style={{background: 'crimson'}} rel=\"tooltip\"\n                                className=\"Btn btn-icon\">\n                            <i className=\"BtnIcon fa fa-remove \"/>\n                        </button>\n                    </div>\n                )\n            }\n        ];\n        return (\n            <div className=\"row\">\n                <h4 style={{width: \"100%\"}}>Yüklenecek Dosyalar</h4>\n                <Button color=\"primary\" onClick={this.handleButtonClick} disabled={this.state.uploading || !this.canUpload()}>\n                    <span>Yüklemeyi Başlat&nbsp;&nbsp;</span>\n                    <i className=\"fa fa-upload\"/>\n                </Button>\n                <Table columns={columns}\n                       content={this.state.acceptedFiles}\n                       paginationEnabled={false}\n                />\n            </div>\n        );\n    }\n}\n\nexport default UploadDepartmentFile;","import React, {Component} from 'react';\nimport {Button, Container, Input} from 'reactstrap';\nimport ReactTable from 'react-table'\nimport * as XLSX from 'xlsx';\nimport Alert from \"react-s-alert\";\nimport moment from \"moment\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport UploadDepartmentFile from \"./UploadDepartmentFile\";\n\nclass DepartmentXlsxImporter extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            loading: false\n        };\n\n        this.okClicked = this.okClicked.bind(this);\n        this.autoPairing = this.autoPairing.bind(this);\n        this.onFileSelect = this.onFileSelect.bind(this);\n        this.cancelClicked = this.cancelClicked.bind(this);\n        this.checkFieldsOk = this.checkFieldsOk.bind(this);\n        this.downloadTemplate = this.downloadTemplate.bind(this);\n        this.bulkFileSelected = this.bulkFileSelected.bind(this);\n        this.headerDropDownChanged = this.headerDropDownChanged.bind(this);\n        DepartmentXlsxImporter.getCellValue = DepartmentXlsxImporter.getCellValue.bind(this);\n    }\n\n    onFileSelect(file) {\n        let fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(file);\n        fileReader.onload = () => {\n            this.bulkFileSelected(fileReader.result);\n        };\n    }\n\n    headerDropDownChanged(key, val) {\n        this.setState((prevState, props) => {\n            prevState.headerNames[key] = val;\n            Object.keys(prevState.headerNames).forEach((key2, index) => {\n                if (key2 === key)\n                    return;\n                if (prevState.headerNames[key2] === val && val !== \"outOfScope\") {\n                    prevState.headerNames[key2] = \"\";\n                }\n            });\n            return {headerNames: prevState.headerNames};\n        });\n    }\n\n    bulkFileSelected(fileContent) {\n        let data = [];\n        let workbook = XLSX.read(fileContent, {type: \"array\"});\n        if (workbook.Directory && workbook.Directory.vba && workbook.Directory.vba.length) {\n            Alert.error(\"Excel macro içermemelidir.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return;\n        }\n        let sheet = workbook.Sheets[workbook.SheetNames[0]];\n        let range = XLSX.utils.decode_range(sheet[\"!ref\"]);\n\n        for (let row = range.s.r; row <= range.e.r; row++) {\n\n            let rowData = {};\n\n            for (let col = range.s.c; col <= range.e.c; col++) {\n                let cell = sheet[XLSX.utils.encode_cell({r: row, c: col})];\n                let content = \"\";\n                if (cell) {\n                    if (cell.t === \"s\") {\n                        content = cell.v;\n                    } else if (cell.t === \"n\") {\n                        content = DepartmentXlsxImporter.getCellValue(cell);\n                    }\n                }\n                if (content && content.length > 0) {\n                    rowData[String.fromCharCode(\"A\".charCodeAt(0) + col)] = content;\n                }\n            }\n            data.push(rowData);\n        }\n\n        let headerNames = {};\n        if (data.length > 0) {\n            Object.keys(data[0]).forEach((key, index) => {\n                headerNames[key] = \"\";\n            });\n        }\n\n        this.setState({bulkCreateData: data, headerNames: headerNames});\n        this.autoPairing(data);\n    }\n\n    static getCellValue(cell) {\n        if (cell.v.toString() === cell.w.toString()) {\n            return cell.w;\n        } else {\n            let date = XLSX.SSF.parse_date_code(cell.v);\n            if (date)\n                return moment(new Date(parseInt(date.y), parseInt(date.m) - 1, parseInt(date.d))).format(\"YYYY-MM-DD\");\n            else\n                return cell.v.toString();\n        }\n    }\n\n    autoPairing(data) {\n        let columnNameList = [\n            {text: \"departman adı\", code: \"departmentName\"},\n            {text: \"departman kodu\", code: \"departmentCode\"},\n            {text: \"bağlı olduğu departman kodu\", code: \"departmentParentCode\"},\n            {text: \"departman türü\", code: \"typeDescription\"},\n            {text: \"il\", code: \"ilName\"},\n            {text: \"ilçe\", code: \"ilceName\"},\n            {text: \"adres\", code: \"adres\"},\n            {text: \"Masraf Yeri\", code: \"isExpenditureDepartment\"},\n            {text: \"masraf yeri\", code: \"isExpenditureDepartment\"},\n\n        ];\n        let firstRow = data[0];\n        let compareResult = true;\n\n        Object.keys(firstRow).forEach((key, index) => {\n            let check = false;\n            columnNameList.forEach(col => {\n                if (firstRow[key].trim().replace(\"İ\",\"i\").toLowerCase() === (col.text)) {\n                    check = true;\n                    this.headerDropDownChanged(key, col.code);\n                }\n            });\n            compareResult = compareResult && check;\n        });\n\n        if (compareResult) {\n\n            this.setState({headerRowSelected: true});\n\n\n            // :::::::::::::::::::::::::::::::::::::::::::\n            // :::::: Doğrudan yüklemesine izin ver ::::::\n            // :::::::::::::::::::::::::::::::::::::::::::\n            // let columnList = Object.keys(firstRow);\n            //\n            // let realData = data.slice(1).map((val) => {\n            //   let obj = {};\n            //   columnList.forEach((key, i) => {\n            //     let header = this.props.headerNames[i].code;\n            //     if (header) {\n            //       obj[header] = val[key];\n            //     }\n            //   });\n            //   return obj;\n            // });\n            //\n            // if (this.props.onSubmit) {\n            //   this.props.onSubmit(realData);\n            // }\n            // :::::::::::::::::::::::::::::::::::::::::::\n        }\n    }\n\n    okClicked() {\n\n        if (this.checkFieldsOk()) {\n\n            let bulkCreateDataFiltered;\n            if (this.state.bulkCreateData && this.state.headerRowSelected) {\n                bulkCreateDataFiltered = this.state.bulkCreateData.slice(1);\n            } else {\n                bulkCreateDataFiltered = this.state.bulkCreateData;\n            }\n\n            let hasError = false;\n            let rowNumber = 2;\n            let errorRowList = [];\n            let errorTextList = \"\";\n            bulkCreateDataFiltered = bulkCreateDataFiltered.filter(val=>Object.keys(val).length > 0)\n            let realData = bulkCreateDataFiltered.map((val) => {\n                if(Object.keys(val).length === 0)\n                    return ;\n                let obj = {};\n                let customFields = {};\n                Object.keys(this.state.headerNames).forEach((key, i) => {\n                    let header = this.state.headerNames[key];\n                    if (header) {\n                        let value = val[key];\n                        let error = this.checkFormatValidity(rowNumber, header, value);\n                        if (error && error.length) {\n                            errorTextList = errorTextList + (!hasError ? error : (\"\\r\\n\" + error));\n                            errorRowList.push(rowNumber);\n                            hasError = true;\n                        }\n                        if (header === \"isExpenditureDepartment\") {\n                            obj[header] = (value != null && value==='Evet') ? true : false;\n                        }else {\n                            obj[header] = value;\n                        }\n                    }\n                });\n                rowNumber++;\n                return obj;\n            });\n\n            if (this.props.onSubmit && realData && !hasError) {\n                this.props.onSubmit(realData);\n            } else if (hasError) {\n                this.setState({\n                    alert: <SweetAlert error\n                                       confirmBtnText=\"Tamam\"\n                                       confirmBtnBsStyle=\"error\"\n                                       title=\"Hata\"\n                                       onConfirm={() => this.setState({alert: null})}>\n                        <div>\n                            <label>Excel'de formatı hatalı satırlar bulunmaktadır. Hata içeriği aşağıdaki\n                                gibidir.</label>\n                            <Input type=\"textarea\" rows={5}\n                                   style={{height: '200px', border: '1px solid #E3E3E3', marginTop: '2px'}}\n                                   value={errorTextList}\n                                   disable={true}/>\n                        </div>\n                    </SweetAlert>\n                });\n            }\n        } else {\n            Alert.error(\"Seçim yapılmamış başlık var.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        }\n    }\n\n    checkFormatValidity = (rowNumber, header, value) => {\n        switch (header) {\n            case \"departmentName\":\n                if (value == null) {\n                    return rowNumber + \". Satırdaki Departman Adı boş bırakılamaz.\"\n                }\n                break;\n            case \"departmentCode\":\n                if (value == null) {\n                    return rowNumber + \". Satırdaki Departman Kodu boş bırakılamaz.\"\n                }\n                break;\n            case \"typeDescription\":\n                if (value == null) {\n                    return rowNumber + \". Satırdaki Departman Tür boş bırakılamaz.\"\n                }\n                break;\n        }\n    };\n\n    checkDateFormat(key, value) {\n        if (value && value !== \"\" && (key === 'employmentStartDate' || key === 'dateOfBirth')) {\n            value = value.toString()\n                .split(\" \").join(\"-\")\n                .replace(/\\//g, \"-\")\n                .replace(/,/g, \"-\")\n                .replace(/\\./g, \"-\");\n\n            if (moment(value, \"DD-MM-YYYY\", true).isValid()) {\n                return moment(value, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\");\n            } else if (moment(value, \"DD-MM-YY\", true).isValid()) {\n                return moment(value, \"DD-MM-YY\").format(\"YYYY-MM-DD\");\n            } else if (moment(value, \"YYYY-MM-DD\", true).isValid()) {\n                return value;\n            } else if (moment(value, \"MM-DD-YYYY\", true).isValid()) {\n                return moment(value, \"MM-DD-YYYY\").format(\"YYYY-MM-DD\");\n            } else if (moment(value, \"MM-DD-YY\", true).isValid()) {\n                return moment(value, \"MM-DD-YY\").format(\"YYYY-MM-DD\");\n            } else if (moment(value, \"YYYY-DD-MM\", true).isValid()) {\n                return moment(value, \"YYYY-DD-MM\").format(\"YYYY-MM-DD\");\n            } else {\n                return null;\n            }\n        } else {\n            return value;\n        }\n    }\n\n\n    checkFieldsOk() {\n        let allFieldSelected = true;\n        if (this.state.headerNames && Object.keys(this.state.headerNames).length > 0) {\n            Object.keys(this.state.headerNames).forEach(key => {\n                if (this.state.headerNames[key] === '')\n                    allFieldSelected = false;\n            });\n        } else {\n            allFieldSelected = false;\n        }\n        return allFieldSelected;\n    }\n\n    cancelClicked() {\n        if (this.props.onCancel)\n            this.props.onCancel();\n    }\n\n    downloadTemplate() {\n        let self = this;\n        self.setState({loading: true});\n        let data = [];\n        let csv = self.props.headerNames.map((e) => {\n            return e.name;\n        });\n        data.push(csv);\n        let csvExample = self.props.exampleNames.map((e) => {\n            return e.name;\n        });\n        data.push(csvExample);\n        let ws = XLSX.utils.json_to_sheet(data, {skipHeader: true});\n        let wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, \"Sheet\");\n        let wopts = {bookType: 'xlsx', bookSST: false, type: 'base64'};\n        let wbout = XLSX.write(wb, wopts);\n        let params = {\n            url: `/department/updateDepartmentUploadTemplate`,\n            method: \"post\",\n            responseType: 'arraybuffer',\n            data: wbout\n        };\n        requestK(params)\n            .then(function (response) {\n                let link = document.createElement('a');\n                link.href = window.URL.createObjectURL(new Blob([response.data], {type: \"application/vnd.ms-excel\"}));\n                link.download = \"Toplu_Departman_Sablonu.xlsx\";\n                document.body.appendChild(link);\n                link.click();\n                self.setState({loading: false});\n            }).catch(function (error) {\n            self.setState({loading: false});\n            showAxiosError(error);\n        });\n    }\n\n    renderMainTable(data) {\n\n        if (!data || data.length <= 0)\n            return \"\";\n\n        let firstRow = data[0];\n        let columns = [];\n\n        Object.keys(firstRow).forEach((key, index) => {\n            columns.push({\n                Header: <Input type=\"select\"\n                               value={this.state.headerNames[key]}\n                               onChange={(e) => {\n                                   this.headerDropDownChanged(key, e.target.value)\n                               }}\n                               style={{backgroundColor: !this.state.headerNames[key] ? 'orange' : ''}}>\n                    {\n                        [\n                            <option value=\"\" style={{backgroundColor: '#ffffffc2'}}>Seçiniz</option>,\n                            <option value=\"outOfScope\" style={{backgroundColor: '#cccccc'}}>Kapsam Dışı</option>,\n                            ...this.props.headerNames.map(\n                                e => <option value={e.code} style={{backgroundColor: '#ffffffc2'}}>{e.name}</option>\n                            )\n                        ]\n                    }\n                </Input>,\n                columns: [\n                    {\n                        Header: key,\n                        accessor: key\n                    }\n                ]\n            });\n        });\n\n        if (this.state.headerRowSelected)\n            data = data.slice(1);\n\n        return <ReactTable data={data} columns={columns} defaultPageSize={5}\n                           previousText={\"Önceki\"} nextText={\"Sonraki\"} pageText={\"Sayfa\"}\n                           ofText={\"Sayfa Toplamı:\"} rowsText={\"kayıt\"}\n                           style={{overflowWrap: 'break-word'}}/>;\n    }\n\n    render() {\n\n        return (\n            <div>\n                {!this.state.bulkCreateData &&\n                <Container>\n                    <div className=\"row\" style={{marginBottom: \"15px\"}}>\n                        <Button color=\"info\" title=\"Uygun formattaki şablon dosyasını indir\"\n                                disabled={this.state.loading}\n                                onClick={this.downloadTemplate}>\n                            <span>Şablon İndir&nbsp;&nbsp;</span>\n                            <i className=\"fa fa-download\"/>\n                        </Button>\n                        <div id='MessageHolder'/>\n                    </div>\n                    <UploadDepartmentFile onFileSelect={this.onFileSelect}/>\n                </Container>\n                }\n                {this.state.bulkCreateData &&\n                <div>\n                    <div style={{marginLeft: \"5%\"}}>\n                        <Input type=\"checkbox\" onChange={e => {\n                            this.setState({headerRowSelected: e.target.checked})\n                        }} checked={this.state.headerRowSelected}/>\n                        <label>İlk satırda başlıklar var</label>\n                    </div>\n                    {this.renderMainTable(this.state.bulkCreateData)}\n                    <div style={{marginLeft: \"2%\"}}>\n                        <Button color=\"secondary\" onClick={this.cancelClicked}>\n                            İptal\n                        </Button>\n                        <Button color=\"primary\" onClick={this.okClicked}>\n                            Kaydet\n                        </Button>\n                    </div>\n                </div>\n                }\n                {this.state.alert}\n            </div>\n        );\n    }\n}\n\nexport default DepartmentXlsxImporter;","import React, {Component} from 'react';\nimport {Button, Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Nav} from 'reactstrap';\nimport Table from '../../../components/Table/Table'\nimport MiniButton from '../../../components/MiniButton'\nimport SweetAlertExt from '../../../components/SweetAlertExt'\nimport Notify from 'react-notification-alert';\nimport validator from 'validator'\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {checkGrantToDisplay, create_UUID, showAxiosError} from \"../../../helper/helper\";\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport Alert from \"react-s-alert\";\nimport {validDepartment} from \"../common/validation/fieldValidation\";\nimport DepartmentTree from \"../organization/DepartmentTree\";\nimport StickButton from \"../../../components/StickButton\";\nimport Joyride from \"react-joyride\";\nimport DepartmentXlsxImporter from \"./DepartmentXslxImporter\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport DropdownCheck from \"../../../components/Table/DropdownCheck\";\nimport {DEPARTMENT_DEFINITION} from \"../../../common/authorities/GrantDef\";\nimport Swal from \"sweetalert2\";\n\nclass DepartmentPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.notify = React.createRef();\n        this.state = {\n            alert: null,\n            session: null,\n            loading: true,\n            displayCreateUpdateDialog: false,\n            valid: null,\n            manual: false,\n            content: [],\n            treeData: [],\n            parentList: [],\n            departmanList: [],\n            total: 0,\n            searching: false,\n            searchQuery: undefined,\n            page: 0,\n            size: 10,\n            searchKey: \"\",\n            selectedKeys: [],\n            checkedKeys: [],\n            halfCheckedKeys: [],\n            selection: [],\n            totalIdList: [],\n            steps: [\n                {\n                    target: '.baseBackground',\n                    content: \"Departman tanımlarınızı bu sayfada yapabilirsiniz.\",\n                    placement: \"center\",\n                },\n                {\n                    target: '.zocial',\n                    content: 'Departman bilgileri departman ağacı şeklinde tutulmaktadır.' +\n                        'Bu sebeple, bir departmanın hangi bir departmanın hangi departmana bağlı olduğuna dair ilişkiler kurulmalıdır.' +\n                        '       Çalışanlarınızı, çalışan ekranından excel ile toplu eklerken \"Departman Kodu\" bilgisi ile yükleyerek güncellerseniz departman bilgileri eşleşmiş olur',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.zocial:nth-child(2)',\n                    content: 'Birden fazla departman güncellenmek veya eklenmek istendiğinde \"Toplu ekle/Güncelle\" butonundan şablon indirip yapabilirsiniz.',\n                    placement: \"auto\",\n                }\n            ],\n            steps2: [\n                {\n                    target: '.baseBackground',\n                    content: \"Yeni departman bilgisi bu sayfadan eklenir.\",\n                    placement: \"center\",\n                },\n                {\n                    target: '.form-group:nth-child(1) .form-control',\n                    content: 'Yeni girilen departmanın hangi departmana bağlı olacağı bilgisi verilmelidir. İlk defa departman girişinde bir tane ana departman oluşturulmalı,' +\n                        'bundan sonrakiler bu departmana bağlı olarak sırasıyla oluşturulmalıdır.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.form-group:nth-child(2) .form-control',\n                    content: 'Departman türü seçilir.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.form-group:nth-child(3) .form-control ',\n                    content: 'Departman adı girilir.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.form-group:nth-child(4) .form-control ',\n                    content: 'Çalışanlarınızı \"Toplu Ekle\" den excel ile yüklerken çalışan listenizin olduğu bir excel dosyasında departman kolonunda yazılması gereken koddur.' +\n                        'Departman koduna göre eşleşme yapılmaktadır.',\n                    placement: \"auto\",\n                },\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            types: [],\n            iller: [],\n            ilceler: [],\n            excelIsDownloading: false,\n            displayCreateBulkDialog: false\n        };\n\n        this.editValidateDef = {\n            name: v => !validator.isEmpty(v),\n        };\n\n        this.fetchData = this.fetchData.bind(this);\n        this.editClicked = this.editClicked.bind(this);\n        this.saveClicked = this.saveClicked.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.searchWithKey = this.searchWithKey.bind(this);\n        this.createClicked = this.createClicked.bind(this);\n        this.deleteClicked = this.deleteClicked.bind(this);\n        this.editHandleInputChange = this.editHandleInputChange.bind(this);\n        this.callback = this.callback.bind(this);\n        this.getDepartmentTypes = this.getDepartmentTypes.bind(this);\n        this.getIlList = this.getIlList.bind(this);\n        this.downloadMedia = this.downloadMedia.bind(this);\n        this.createBulkClicked = this.createBulkClicked.bind(this);\n        this.createBulkSubmit = this.createBulkSubmit.bind(this);\n        this.isSelected = this.isSelected.bind(this);\n        this.deleteList = this.deleteList.bind(this);\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.getDepartmentTypes();\n        this.getIlList();\n    }\n\n    createBulkSubmit(list) {\n        let self = this;\n        let params = {\n            url: `/department/saveDepartments`,\n            method: \"post\",\n            data: list\n        };\n        self.setState({loading: true, displayCreateBulkDialog: false});\n        requestK(params)\n            .then(function (response) {\n                let result = response.data;\n                if (Array.isArray(result)) {\n                    let errorText = \"\";\n                    result.map(each => {\n                        if (errorText === \"\") {\n                            errorText = each;\n                        } else {\n                            errorText = errorText + \"\\n\" + each;\n                        }\n                    });\n                    self.setState({\n                        alert: <SweetAlert success\n                                           confirmBtnText=\"Tamam\"\n                                           confirmBtnBsStyle=\"warning\"\n                                           title=\"Hatasız satırlar için yükleme tamamlandı.\"\n                                           onConfirm={() => self.setState({alert: null})}>\n                            <div>\n                                <label>Excel'de departman formatı/mantığı hatalı satırlar bulunmaktadır, hata içeriği\n                                    aşağıdaki gibidir.</label>\n                                <Input type=\"textarea\" rows={5}\n                                       style={{height: '200px', border: '1px solid #E3E3E3', marginTop: '2px'}}\n                                       value={errorText}\n                                       disable={true}/>\n                            </div>\n                        </SweetAlert>\n                    });\n                } else {\n                    Alert.success(result, {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                }\n                self.setState({loading: false, manual: true});\n            })\n            .catch(function (error) {\n                let result = error.response.data;\n                if (Array.isArray(result)) {\n                    let errorText = \"\";\n                    result.map(each => {\n                        if (errorText === \"\") {\n                            errorText = each;\n                        } else {\n                            errorText = errorText + \"\\n\" + each + \"\\n\";\n                        }\n                    });\n                    self.setState({\n                        alert: <SweetAlert error\n                                           confirmBtnText=\"Tamam\"\n                                           confirmBtnBsStyle=\"error\"\n                                           title=\"Yüklenemedi\"\n                                           onConfirm={() => self.setState({alert: null})}>\n                            <div>\n                                <label>Excel'de departman formatı/mantığı hatalı satırlar bulunmaktadır, hata içeriği\n                                    aşağıdaki gibidir.</label>\n                                <Input type=\"textarea\" rows={5}\n                                       style={{height: '200px', border: '1px solid #E3E3E3', marginTop: '2px'}}\n                                       value={errorText}\n                                       disable={true}/>\n                            </div>\n                        </SweetAlert>\n                    });\n                } else {\n                    showAxiosError(error);\n                }\n                self.setState({loading: false, manual: true});\n            });\n    }\n\n    getDepartmentTypes() {\n        let self = this;\n        let params = {\n            url: '/departmenttype/readDepartmentTypeAll',\n            method: \"get\",\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({types: response.data});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    getIlList() {\n        let self = this;\n        let params = {\n            url: '/il/iller',\n            method: \"get\",\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({iller: response.data});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            searching: true\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    searchWithKey(e) {\n        this.setState({searchKey: e.target.value, manual: true});\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/department/readDepartmentAll?page=' + page + '&size=' + size + searchQuery + sortStr,\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        self.props.reload(true);\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: response.data.totalElements,\n                    content: response.data.list,\n                    treeData: response.data.treeData,\n                    parentList: response.data.parentList,\n                    totalIdList: response.data ? response.data.selectedIdList.reverse() : [],\n                    loading: false,\n                    searching: false\n                });\n                self.props.reload(false);\n            }).catch(function (error) {\n            self.setState({loading: false, searching: false});\n            self.props.reload(false);\n            showAxiosError(error);\n        });\n    }\n\n    createClicked() {\n        this.newData = true;\n        let type = this.state.types.find(e => e.isDefault === true);\n        this.setState({\n            selected: {\n                name: \"\",\n                type: type !== undefined ? type.id : \"\"\n            },\n            valid: {},\n            displayCreateUpdateDialog: true,\n            departmanList: this.state.parentList\n        });\n    }\n\n    getDepartmentList = (list, id) => {\n        let departmentList = [];\n        let found = false;\n        if (id) {\n            if (list && list.length > 0) {\n                for (let i = 0; i < list.length; i++) {\n                    if (list[i].id === id) {\n                        found = true;\n                    } else {\n                        departmentList.push(list[i]);\n                    }\n                    if (found && i === 0)\n                        return [];\n                }\n            }\n        }\n        return departmentList;\n    }\n\n    editClicked(row) {\n        let clone = Object.assign({}, row);\n        delete clone[\"_$visited\"];\n        let departmanList = this.getDepartmentList(this.state.parentList, clone.id);\n        let il = this.state.iller.find(item => item.ilNo === parseInt(clone.il));\n        let ilces = [];\n        if (il !== undefined && il.ilceler !== undefined) {\n            ilces = il.ilceler;\n        }\n        this.setState({\n            ilceler: ilces,\n            selected: clone,\n            valid: {},\n            displayCreateUpdateDialog: true,\n            departmanList\n        });\n    }\n\n    saveClicked() {\n        let department = Object.assign({}, this.state.selected);\n        let result = validDepartment(department, this.checkIfCodeIsMust());\n        let valid = result.valid;\n        if (valid) {\n            let self = this;\n            let params = {\n                url: `/department/saveDepartment`,\n                method: \"post\",\n                data: department\n            };\n            self.setState({disabledSaveBtn: true});\n            requestK(params)\n                .then(function (response) {\n                    let message = response.data;\n                    self.setState({\n                        selected: null,\n                        displayCreateUpdateDialog: false,\n                        manual: true,\n                        disabledSaveBtn: false\n                    });\n                    Alert.success(message, {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                }).catch(function (error) {\n                showAxiosError(error);\n                self.setState({disabledSaveBtn: false});\n            });\n        } else {\n            Alert.error(result.errorMessage, {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 8000\n            });\n        }\n    }\n\n    checkDepartment = (id) => {\n        let canDelete = true;\n        let {parentList} = this.state;\n        if (id) {\n            if (parentList && parentList.length > 0) {\n                for (let i = 0; i < parentList.length; i++) {\n                    if (parentList[i].parentId === id) {\n                        canDelete = false;\n                    }\n                }\n            }\n        }\n        return canDelete;\n    }\n\n    deleteClicked(row) {\n\n        if (!this.checkDepartment(row.id)) {\n            this.setState({\n                alert: <SweetAlert warning\n                                   confirmBtnText=\"Tamam\"\n                                   confirmBtnBsStyle=\"warning\"\n                                   title=\"Departmana bağlı departman bulunmaktadır, lütfen kontrol ediniz.\"\n                                   onConfirm={() => this.setState({alert: null})}>\n                </SweetAlert>\n            });\n        } else {\n            let self = this;\n            let params = {\n                url: `/department/deleteDepartment`,\n                method: \"post\",\n                data: row\n            };\n            self.setState({disabledDeleteBtn: true});\n            requestK(params)\n                .then(function (response) {\n                    let message = response.data;\n                    self.setState({\n                        selected: null,\n                        displayCreateUpdateDialog: false,\n                        manual: true,\n                        alert: null,\n                        disabledDeleteBtn: false\n                    });\n                    Alert.success(message, {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                }).catch(function (error) {\n                showAxiosError(error);\n                self.setState({loading: false, disabledDeleteBtn: false});\n            });\n        }\n\n\n    }\n\n    deleteList() {\n        let self = this;\n        let canDelete = [];\n        let cannotDelete = [];\n\n        this.state.selection.forEach(id => {\n            if (this.checkDepartment(id)) {\n                canDelete.push(id)\n            } else {\n                cannotDelete.push(id);\n            }\n        });\n\n        if (cannotDelete.length > 0) {\n            this.setState({\n                alert: <SweetAlert warning\n                                   confirmBtnText=\"Tamam\"\n                                   confirmBtnBsStyle=\"warning\"\n                                   title=\"Seçilen Departmanlar Silinemez\"\n                                   onConfirm={() => this.setState({alert: null})}>\n                    <div style={{overflowY: 'scroll'}}>\n                        {\n                            cannotDelete.map(id => {\n                                return (\n                                    <label style={{color: 'red'}}>\n                                        {this.getDepartmentName(id) + \" departmanına bağlı departman vardır.\" +\n                                        \"Silme işlemine en alt seviye departmanlardan başlayınız.\"}\n                                    </label>\n                                )\n                            })\n                        }\n                    </div>\n                </SweetAlert>\n            });\n        } else {\n            let params = {\n                url: `/department/deleteDepartmentList`,\n                method: \"post\",\n                data: canDelete,\n            };\n            self.setState({loading: true, alert: null});\n            requestK(params)\n                .then(function (response) {\n                    let message = response.data;\n                    self.setState({\n                        selected: null,\n                        manual: true,\n                        alert: null,\n                        page: 0,\n                        selection: [],\n                        selectedAll: false,\n                    });\n                    self.deleteResponseAlert(message);\n                })\n                .catch((error) => {\n                    showAxiosError(error);\n                    self.setState({loading: false, createUpdateLoading: false});\n                });\n        }\n    }\n\n    getDepartmentName = (id) => {\n        let name;\n        this.state.parentList.forEach(department => {\n            if (department.id === id)\n                name = department.name;\n        });\n        return name;\n    }\n\n    deleteResponseAlert = (message) => {\n        const divStyle = {\n            overflowY: 'scroll',\n            border: '1px solid black',\n            width: '440px',\n            float: 'center',\n            height: '250px',\n            position: 'relative'\n        };\n        this.setState({\n            alert: <SweetAlert warning\n                               confirmBtnText=\"Tamam\"\n                               confirmBtnBsStyle=\"warning\"\n                               title=\"Departman Seçilenleri Silme İşlem Sonucu\"\n                               onConfirm={() => this.setState({alert: null})}>\n                <div style={divStyle}>\n                    {\n                        message.map(msg => {\n                            if (msg.toString().includes(\"silindi\"))\n                                return <label style={{color: 'green'}}>{msg}</label>\n                            else\n                                return <label style={{color: 'red'}}>{msg}</label>\n                        })\n                    }\n                </div>\n            </SweetAlert>\n        });\n    };\n\n    editHandleInputChange(event) {\n        const target = event.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n\n        if (name === \"integrationCode\") {\n            value = value.toString().split(\" \").join(\"\");\n        }\n\n        if (name != null && name === 'il') {\n            let il = this.state.iller.find(item => item.ilNo === parseInt(value));\n            if (il !== undefined && il.ilceler !== undefined) {\n                let ilces = il.ilceler;\n                this.setState({ilceler: ilces});\n            }\n        }\n\n        let valid = this.editValidateDef[name] && this.editValidateDef[name](value);\n        if (name !== \"integrationCode\" || value.match(/^[a-zA-Z0-9üÜığĞİşŞçÇöÖ./&\\s\\-]+$/)) {\n            this.setState((prevState) => {\n                prevState.selected[name] = value;\n                prevState.valid[name] = valid;\n                return {\n                    selected: prevState.selected,\n                    valid: prevState.valid\n                };\n            });\n        }\n    }\n\n    editClassName(name) {\n        let valid = this.state.valid[name];\n        if (typeof valid !== \"boolean\")\n            return undefined;\n        else {\n            return {\n                valid: valid,\n                invalid: !valid\n            };\n        }\n    }\n\n    checkIfCodeIsMust = () => {\n        return !this.state.parentList.includes(\"{Ana Departman}\");\n    };\n\n    generateRecommendation = () => {\n        let parentName = \"\", recommendedCode = \"\";\n        let parentId = this.state.selected && this.state.selected.parentId;\n        let departmentName = this.state.selected && this.state.selected.name;\n        this.state.parentList && this.state.parentList.map(e => {\n            if (e.id === parseInt(parentId)) {\n                parentName = e.name;\n            }\n        });\n        if (parentName.length && !parentName.includes(\"{\")) {\n            if (!parentName.includes(\" \")) {\n                recommendedCode = parentName.substring(0, 3);\n            } else {\n                let parentNameList = parentName.split(\" \");\n                parentNameList.map((e, i) => {\n                    if (i === 1 && parentNameList.length === 2) {\n                        recommendedCode = recommendedCode + e.substring(0, 2);\n                    } else {\n                        recommendedCode = recommendedCode + e[0];\n                    }\n                });\n            }\n        }\n        return (!!recommendedCode ? \"Önerilen Departman Kodu: \" + recommendedCode +\n            (departmentName ? \"-\" + departmentName : \"-...Departman Adı...\") : \"\");\n    };\n\n    arrangeDataSet = () => {\n        let self = this;\n        let dataSet = {};\n        dataSet.sheetName = \"Departman_Listesi\"\n        dataSet.uuid = create_UUID();\n        dataSet.list = self.state.selection;\n        dataSet.type = \"excel\"\n        return dataSet;\n    }\n\n    downloadMedia() {\n        let self = this;\n        if (self.state.selection.length === 0) {\n            this.setState({\n                alert: (\n                    <SweetAlert error\n                                confirmBtnText=\"Tamam\"\n                                confirmBtnBsStyle=\"error\"\n                                title=\"Boş Liste\"\n                                onConfirm={() => this.setState({alert: null})}\n                    >\n                        İndirmek istediğiniz departmanlara lütfen tik atınız!\n                    </SweetAlert>\n                )\n            });\n        } else {\n            let data = self.arrangeDataSet();\n            let params = {\n                url: `/department/getDepartmentsForExcelFormat`,\n                method: \"post\",\n                data: data\n            };\n            requestK(params)\n                .then(() => {\n                    Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 8000\n                    });\n                }).catch(function (error) {\n                showAxiosError(error);\n            });\n        }\n    }\n\n    createBulkClicked() {\n        this.setState({displayCreateBulkDialog: true});\n    }\n\n    renderBulkInsert() {\n        let headerNameList = [\n            {name: ' Departman Adı ', code: 'departmentName'},\n            {name: ' Departman Kodu ', code: 'departmentCode'},\n            {name: ' Bağlı Olduğu Departman Kodu ', code: 'departmentParentCode'},\n            {name: ' Departman Türü ', code: 'typeDescription'},\n            {name: ' İl ', code: 'ilName'},\n            {name: ' İlçe ', code: 'ilceName'},\n            {name: '      Adres     ', code: 'adres'},\n            {name: ' Masraf Yeri ', code: 'isExpenditureDepartment'}\n        ];\n        this.state.titleList && this.state.titleList.map((item, index) => {\n            let titleCode = \"title\" + index;\n            headerNameList.push({name: item, code: titleCode});\n        });\n        /*let exampleList = [\n            {name: 'MERKEZ', code: 'departmentName'},\n            {name: 'MRK', code: 'departmentCode'},\n            {name: '', code: 'departmentParentCode'},\n            {name: 'Şube', code: 'typeDescription'},\n            {name: 'Ankara', code: 'ilName'},\n            {name: 'Çankaya', code: 'ilceName'},\n            {name: 'Kızılay', code: 'adres'}\n        ];*/\n        let headerNames = headerNameList;//renewListForPrivileges(this, headerNameList, \"code\", this.state.isKepOwner);\n        let exampleNames = []; //exampleList; //renewListForPrivileges(this, exampleList, \"code\", this.state.isKepOwner);\n\n        return <Modal isOpen={this.state.displayCreateBulkDialog} size=\"lg\"\n                      toggle={() => this.setState({displayCreateBulkDialog: false})}>\n            <ModalHeader className=\"justify-content-center\"\n                         toggle={() => this.setState({displayCreateBulkDialog: false})}>\n                Toplu Departman Yükleme\n            </ModalHeader>\n            <ModalBody>\n                <DepartmentXlsxImporter headerNames={headerNames} exampleNames={exampleNames}\n                                        onCancel={() => this.setState({displayCreateBulkDialog: false})}\n                                        onSubmit={this.createBulkSubmit}/>\n            </ModalBody>\n        </Modal>\n    }\n\n    renderCreateUpdate() {\n\n        return <Modal isOpen={this.state.displayCreateUpdateDialog} size=\"xl\"\n                      toggle={() => this.setState({displayCreateUpdateDialog: false})}>\n            <ModalHeader className=\"justify-content-center\"\n                         toggle={() => this.setState({displayCreateUpdateDialog: false})}>\n                Departman Oluştur\n                <button className=\"helpButton\" onClick={() => {\n                    this.activateJoyride()\n                }} style={{position: \"absolute\", right: \"70px\", alignSelf: \"center\", marginTop: \"-5px\"}}>\n                    <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                    <i className=\"far fa-question-circle helpButtonIcon\" style={{opacity: \".5\"}}/></button>\n            </ModalHeader>\n            <ModalBody>\n                {this.state.displayCreateUpdateDialog && <Notify ref={this.notify}/>}\n                {this.state.selected && <div>\n                    <Form>\n                        <FormGroup row>\n                            <Label sm={4} for=\"parentId\">Bağlı Olduğu Departman: *</Label>\n                            <Col sm={8}>\n                                <Input type=\"select\" name=\"parentId\" value={this.state.selected.parentId}\n                                       onChange={this.editHandleInputChange} {...this.editClassName(\"parentId\")}>\n                                    {[<option key=\"0\" value=\"\">Seçiniz</option>, ...this.state.departmanList.map(e =>\n                                        <option\n                                            key={e.id} value={e.id} il={e.il} ilce={e.ilce}>{e.name}</option>)]}\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={4} for=\"type\">Departman Tür : *</Label>\n                            <Col sm={8}>\n                                <Input type=\"select\" name=\"typeId\" value={this.state.selected.typeId}\n                                       onChange={this.editHandleInputChange} {...this.editClassName(\"typeId\")}>\n                                    {[<option key=\"0\" value=\"\">Seçiniz</option>, ...this.state.types.map(e => <option\n                                        key={e.id} value={e.id}>{e.type}</option>)]}\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={4} for=\"name\">Departman Adı: *</Label>\n                            <Col sm={8}>\n                                <Input type=\"text\" name=\"name\" value={this.state.selected.name}\n                                       onChange={this.editHandleInputChange} {...this.editClassName(\"name\")}/>\n                            </Col>\n                        </FormGroup>\n                        {this.checkIfCodeIsMust() &&\n                        <FormGroup row>\n                            <Label sm={4} for=\"parentId\">Departman Kodu : *</Label>\n                            <Col sm={8}>\n                                <Input type=\"text\" name=\"integrationCode\" value={this.state.selected.integrationCode}\n                                       onChange={this.editHandleInputChange} {...this.editClassName(\"integrationCode\")}/>\n                            </Col>\n                        </FormGroup>}\n                        <FormGroup row>\n                            <Label sm={5} for=\"is_expenditure_dep\">Masraf Yeri :</Label>\n                            <Col sm={7}>\n                                <Input type=\"checkbox\" name=\"is_expenditure_dep\"\n                                       checked={this.state.selected.isExpenditureDepartment != null ? this.state.selected.isExpenditureDepartment : false}\n                                       onChange={(e) => {\n                                           let selected = this.state.selected;\n                                           selected.isExpenditureDepartment = e.target.checked;\n                                           this.setState({selected});\n                                       }}/>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={4} for=\"il\">İl :</Label>\n                            <Col sm={8}>\n                                <Input type=\"select\" name=\"il\" value={this.state.selected.il}\n                                       onChange={this.editHandleInputChange} {...this.editClassName(\"il\")}>\n                                    {[<option key=\"0\" value=\"\">Seçiniz</option>, ...this.state.iller.map(e => <option\n                                        key={e.ilNo} value={e.ilNo}>{e.isim}</option>)]}\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={4} for=\"ilce\">İlçe :</Label>\n                            <Col sm={8}>\n                                <Input type=\"select\" name=\"ilce\" value={this.state.selected.ilce}\n                                       onChange={this.editHandleInputChange} {...this.editClassName(\"ilce\")}>\n                                    {[<option key=\"0\" value=\"\">Seçiniz</option>, ...this.state.ilceler.map(e => <option\n                                        key={e.ilceNo} value={e.ilceNo}>{e.isim}</option>)]}\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label sm={4} for=\"adres\">Adres :</Label>\n                            <Col sm={8}>\n                            <textarea type=\"text\" className=\"form-control\" name=\"adres\"\n                                      value={this.state.selected.adres} rows=\"5\"\n                                      onChange={this.editHandleInputChange} {...this.editClassName(\"adres\")}/>\n                            </Col>\n                        </FormGroup>\n                        {this.checkIfCodeIsMust() &&\n                        <FormGroup row>\n                            <Col sm={4}/>\n                            <Label sm={8} for=\"recommendedCode\"\n                                   style={{color: 'darkgray'}}>{this.generateRecommendation()}</Label>\n                        </FormGroup>}\n                    </Form>\n                </div>}\n            </ModalBody>\n            <ModalFooter>\n                <Button title=\"İptal\" style={{paddingLeft: '16px', width: '100px'}} color=\"secondary\"\n                        onClick={() => this.setState({displayCreateUpdateDialog: false})}>\n                    İptal\n                </Button>\n                <Button title=\"Kaydet\" style={{paddingLeft: '16px', width: '100px'}} color=\"primary\"\n                        disabled={this.state.disabledSaveBtn}\n                        onClick={this.saveClicked}>\n                    Kaydet\n                </Button>\n            </ModalFooter>\n        </Modal>\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true})\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback(data) {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false})\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let steps2 = this.state.steps2;\n        let locale = this.state.locale;\n\n        let pageIdList = [];\n        if (this.state.content && this.state.content instanceof Array) {\n            this.state.content.map(e => {\n                pageIdList.push(e.id);\n            });\n        }\n\n        const columns = [\n            {\n                Header: (this.state.content &&\n                    <DropdownCheck selectionIdList={this.state.selection}\n                                   totalIdList={this.state.totalIdList}\n                                   pageIdList={pageIdList}\n                                   onChange={e => this.setState({selection: e})}/>\n                ),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.content &&\n                    <input type=\"checkbox\" checked={this.isSelected(row.id)}\n                           onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}/>)\n            },\n            {\n                Header: \"Departman Adı\",\n                accessor: \"name\",\n                Cell: (item) => (\n                    <div style={{textAlign: \"left\", width: '200px', overflow: 'auto'}}>{item.name}</div>)\n            },\n            {\n                Header: \"Bağlı Olduğu Departman\",\n                accessor: \"parentName\",\n                sortable: false,\n                Cell: (item) => (<div style={{textAlign: \"left\", overflow: 'auto'}}>{item.parentName}</div>),\n                width: \"30%\"\n            },\n            {\n                Header: \"Departman Kodu\",\n                accessor: \"integrationCode\",\n                Cell: (item) => (<div style={{\n                    textAlign: \"left\",\n                    color: 'cornflowerblue',\n                    width: '200px',\n                    overflow: 'auto'\n                }}>{item.integrationCode}</div>),\n                width: \"30%\"\n            },\n            {\n                Header: \"Masraf Yeri\",\n                accessor: \"isExpenditureDepartment\",\n                Cell: (item) => (<div style={{textAlign: \"center\"}}><input type=\"checkbox\"\n                                                                           checked={item.isExpenditureDepartment !== null ? item.isExpenditureDepartment : false}\n                                                                           disabled=\"disabled\"/></div>)\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                width: \"auto\",\n                Cell: row => (\n                    <div>\n                        <MiniButton title=\"Düzenle\" faIcon=\"fa-edit\" onClick={() => this.editClicked(row)}\n                                    color=\"success\"/>\n                        <MiniButton title=\"Sil\" faIcon=\"fa-trash\" color=\"danger\"\n                                    onClick={() => {\n                                        this.setState({\n                                            alert: (\n                                                <SweetAlertExt showCancel warning\n                                                               confirmBtnText=\"Evet\"\n                                                               cancelBtnText=\"Hayır\"\n                                                               confirmBtnBsStyle=\"danger\"\n                                                               cancelBtnBsStyle=\"default\"\n                                                               disabled={this.state.disabledDeleteBtn}\n                                                               title=\"Emin misiniz?\"\n                                                               onConfirm={() => this.setState({alert: null}, () => {\n                                                                   this.deleteClicked(row);\n                                                               })}\n                                                               onCancel={() => this.setState({alert: null})}\n                                                >\n                                                    {row.name + ((row.isExpenditureDepartment != null && row.isExpenditureDepartment == true) ? \" masraf yeri \" : \" departmanı \") + \" silinecek.\"}\n                                                </SweetAlertExt>\n                                            )\n                                        });\n                                    }}/>\n                    </div>)\n\n            }\n        ];\n\n        const fields = [\n            {\n                label: \"Departman Adı\",\n                accessor: \"name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Departman Kodu\",\n                accessor: \"integrationCode\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Masraf Yeri\",\n                accessor: \"isExpenditureDepartment\",\n                type: \"boolean\",\n                operator: \"=\",\n            }\n        ];\n\n        return (<div className=\"row baseBackground\">\n            {this.state.joyrideActive &&\n            <Joyride\n                disableBeacon={false}\n                autoStart\n                locale={locale}\n                steps={!this.state.displayCreateUpdateDialog ? steps : steps2}\n                continuous={true}\n                run={this.state.shouldRun}\n                scrollToFirstStep={true}\n                showProgress={true}\n                showSkipButton={true}\n                scrollToSteps={true}\n                disableCloseOnEsc={true}\n                disableOverlay={false}\n                disableOverlayClicks={false}\n                keyboardNavigation={true}\n                hideBackButton={false}\n                disableOverlayClose={true}\n                callback={this.callback}\n                holePadding={0}\n                shouldRun={this.state.shouldRun}\n                styles={{\n                    options: {\n                        zIndex: 100000,\n                        primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                    }\n                }}\n\n            />\n            }\n            <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                {/*<NavItem>*/}\n                {/*  <NavLink href=\"#\" onClick={this.createClicked} style={{color: '#fcfdff', fontSize: '13px'}}>*/}\n                {/*    <img className=\"simple-text logo-mini\" style={{maxWidth: '28px', marginRight: '6px'}}*/}\n                {/*         src={process.env.REACT_APP_CONTEXT_NAME + \"/image/plus_sign.png\"}/>*/}\n                {/*    Yeni Oluştur*/}\n                {/*  </NavLink>*/}\n                {/*</NavItem>*/}\n                <StickButton position=\"leftSide\" className=\"zocial Yeni\" style={{fontSize: 'x-small'}}\n                             label=\"Yeni Oluştur\"\n                             onClick={this.createClicked}/>\n                {!this.props.currentUser.pairedEmployeeId &&\n                <StickButton position=\"leftSide\" className=\"zocial Yeni\" style={{fontSize: 'x-small'}}\n                             label=\"Toplu Ekle / Güncelle\" title=\"Toplu Departman Listesi ile Güncelleme Yap\"\n                             onClick={this.createBulkClicked}/>}\n                {checkGrantToDisplay(this, DEPARTMENT_DEFINITION) &&\n                <StickButton position=\"leftSide\" className=\"zocial Sil\" style={{fontSize: 'x-small'}}\n                             label=\"Seçilenleri Sil\" title=\"Seçilen Kayıtları Sil\"\n                             disabled={this.state.loading}\n                             onClick={() => {\n                                 if (this.state.selection && this.state.selection.length > 0) {\n                                     this.setState({\n                                         alert: (\n                                             <SweetAlert showCancel warning\n                                                         confirmBtnText=\"Evet\"\n                                                         cancelBtnText=\"Hayır\"\n                                                         confirmBtnBsStyle=\"danger\"\n                                                         cancelBtnBsStyle=\"default\"\n                                                         title=\"Emin misiniz?\"\n                                                         onConfirm={() => {\n                                                             this.deleteList()\n                                                         }}\n                                                         onCancel={() => this.setState({alert: null})}\n                                             >\n                                                 Seçilen kayıtlar silinecek.\n                                             </SweetAlert>\n                                         )\n                                     });\n                                 } else {\n                                     this.setState({\n                                         alert: (\n                                             <SweetAlert warning\n                                                         confirmBtnText=\"Tamam\"\n                                                         confirmBtnBsStyle=\"warning\"\n                                                         title=\"Seçim Yapılmadı\"\n                                                         onConfirm={() => this.setState({alert: null})}\n                                             >\n                                                 Departman seçilmedi.\n                                             </SweetAlert>\n                                         )\n                                     });\n                                 }\n                             }}/>}\n                <ul className=\"helpfulList\">\n                    <li className=\"helpButtonContainer\">\n                        <button className=\"helpButton\" onClick={() => {\n                            this.activateJoyride()\n                        }}>\n                            <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                            <i className=\"far fa-question-circle helpButtonIcon\"/>\n                        </button>\n                    </li>\n                </ul>\n            </Nav>\n            <div className=\"col-sm-12 satirBasi\">\n                <div className=\"card-header\">\n                    <h4 className=\"card-title\">Departman Listesi</h4>\n                </div>\n                <div className=\"row\" style={{margin: '1px 0 1px 0'}}>\n                    <div className=\"col-lg-4 col-md-12\">\n                        <DepartmentTree\n                            treeData={this.state.treeData}\n                            selectedKeys={this.state.selectedKeys}\n                            checkedKeys={this.state.checkedKeys}/>\n                    </div>\n                    <div className=\"col-lg-8 col-md-12\" style={{marginTop: '-9px'}}>\n                        <div className='col-sm-12'>\n                            <DetailedSearch fields={fields}\n                                            loading={this.state.searching}\n                                            onSearch={this.handleSearch}/>\n                        </div>\n                        <div className='col-sm-12'>\n                            <Table columns={columns}\n                                   content={this.state.content}\n                                   loading={this.state.loading}\n                                   total={this.state.total}\n                                   page={this.state.page}\n                                   manual={this.state.manual}\n                                   size={this.state.size}\n                                   options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                                   fetchData={this.fetchData}\n                            />\n                        </div>\n                        <div style={{float: 'right'}}>\n                            <StickButton position=\"rightSide\" className=\"zocial Excel\" style={{fontSize: 'x-small'}}\n                                         label=\"Excel'e Aktar\" title=\"Departman Listesi\"\n                                         disabled={this.state.excelIsDownloading}\n                                         onClick={this.downloadMedia}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {this.state.alert}\n            {this.renderCreateUpdate()}\n            {!this.state.displayCreateUpdateDialog && <Notify ref={this.notify}/>}\n            {this.renderBulkInsert()}\n        </div>)\n    }\n}\n\nexport default DepartmentPage;"],"sourceRoot":""}