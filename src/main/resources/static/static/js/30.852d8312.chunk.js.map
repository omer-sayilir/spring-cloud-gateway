{"version":3,"sources":["accounting/kepik/bordrosession/component/UploadBordroFileModal.js","accounting/kepik/bordrosession/BordroSessionListPage.js"],"names":["UploadBordroFileModal","Component","constructor","props","super","zipAndUploadFiles","self","this","fileList","state","zip","require","forEach","file","name","content","generateAsync","type","compression","compressionOptions","level","then","File","Blob","lastModified","Date","now","size","push","methodCall","formData","FormData","newSession","append","sessionMonth","year","toString","month","location","id","params","url","method","cancelToken","_source","token","data","status","statusText","setState","btnDisabled","requestK","response","document","toggleModal","history","peykName","loadBordroSession","catch","error","axios","isCancel","showAxiosError","index","process","realIndex","disableZone","steps","target","placement","steps2","locale","back","close","last","next","skip","joyrideActive","shouldRun","onDrop","bind","callback","onCancel","changeLocation","sendNextBordroFile","componentDidUpdate","prevProps","prevState","snapshot","removeMonth","setRemoveMonthOff","firstCycle","total","moment","isValid","message","CancelToken","source","totalCount","length","allPdf","allXlsx","i","fileName","toLowerCase","endsWith","totalFileSize","toggleModalWithTimeout","load","Alert","success","position","effect","timeout","warning","document1","splice","cancel","acceptedFiles","rejectedFiles","processing","uploadBtnDisabled","getStatusRender","className","color","React","createElement","style","paddingRight","activateJoyride","action","e","value","render","DefaultModal","isOpen","modal","disabled","title","modalBodyStyle","padding","minHeight","secondaryButton","onClick","right","alignSelf","marginTop","opacity","confirmBtnText","cancelBtnText","onConfirm","Row","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","options","zIndex","primaryColor","Datetime","timeFormat","dateFormat","closeOnSelect","inputProps","placeholder","renderMonth","isValidDate","current","startOf","isSameOrBefore","onChange","onMonthChange","Input","Col","sm","paddingTop","paddingLeft","Dropzone","accept","activeClassName","multiple","maxHeight","overflow","textAlign","paddingBottom","backgroundColor","width","map","key","margin","TextOverFlowTooltip","text","maxLength","Decimal","toFixed","toNumber","colSpan","float","BordroSessionListPage","videos","switchVideo","video","showEczaciHelpModal","arrangeDataSetForSession","dataSet","list","sheetName","uuid","create_UUID","dt","getTime","replace","c","r","Math","random","floor","arrangeDataSet","selection","flag","selectedAll","searchQuery","loading","totalIdList","manual","searching","page","searchKey","showModal","loadingType","window","innerWidth","stop","deleteRow","fetchData","isSelected","toggleCheckboxChange","downloadSessionZipFile","searchWithKey","handleSearch","downloadMedia","uploadBordroFile","refreshDublicateInfo","checkDateQueryIsValid","accessor","direction","sortStr","reload","checkGrantForFetchResponse","totalElements","selectedIdList","sessionId","dublicatedCount","row","checked","items","item","indexOf","slice","bordroSession","responseType","alert","showUploadModal","fileLoadSessionId","fileLoadSessionYear","term","format","fileLoadSessionMonth","minMonth","minYear","maxMonth","maxYear","mYChecker","xYChecker","disabledDeleteBtn","SweetAlert","confirmBtnBsStyle","pageIdList","Array","columns","Header","DropdownCheck","selectionIdList","selectType","sortable","Cell","unPairedCount","checkGrantToDisplay","BORDRO_SESSION_WORKS","data-toggle","aria-labelledby","BORDRO_IMPORT","pointerEvents","cursor","signedMimeCount","showCancel","cancelBtnBsStyle","Nav","height","StickButton","fontSize","label","aria-haspopup","aria-expanded","CardBody","marginBottom","DetailedSearch","fields","operator","onSearch","Table","ApproveDocumentViewer","closeModal","Notify","ref","VideoModal"],"mappings":"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","file":"static/js/30.852d8312.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport 'moment/locale/tr';\nimport {Col, Input, Row} from 'reactstrap';\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport DefaultModal from \"../../../../components/DefaultModal\";\nimport Alert from \"react-s-alert\";\nimport {Decimal} from 'decimal.js';\nimport TextOverFlowTooltip from \"../../../../components/TextOverFlowTooltip\";\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Joyride from \"react-joyride\";\n\nclass UploadBordroFileModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: [],\n      index: 0,\n      process: false,\n      realIndex: 0,\n      year: null,\n      month: null,\n      disableZone: false,\n      steps: [\n        {\n          target: '.modal-content',\n          content: \"Çalışanlarınıza ücret bordrosu gönderimi yapmak için, toplu veya ayrı ayrı olan ücret bordrolarını pdf veya xlsx uzantılı olarak yükleme yapınız.\",\n          placement: \"center\",\n        },\n        {\n          target: '.form-control',\n          content: \"Bordro dönemini buradan seçebilirsiniz.\",\n          placement: \"auto\",\n        },\n        {\n          target: '.dropzoneInnerArea',\n          content: 'Ücret bordrolarınızı sürükle-bırak veya bu alana tıklayarak yükleyebilirsiniz.',\n          placement: \"auto\",\n        },\n        {\n          target: '.kaydet',\n          content: 'Dönem ve yüklenecek dosyalar seçildikten sonra yüklemeyi başlatabilirsiniz.',\n          placement: \"auto\",\n        }\n      ],\n      steps2: [\n        {\n          target: '.modal-content',\n          content: \"Seçilen bordro dönemine dosya eklemesi yapmak için, toplu veya ayrı ayrı olan ücret bordrolarını pdf veya xlsx uzantılı olarak yükleme yapınız.\",\n          placement: \"center\",\n        },\n        {\n          target: '.dropzoneInnerArea',\n          content: 'Ücret bordrolarınızı sürükle-bırak veya bu alana tıklayarak yükleyebilirsiniz.',\n          placement: \"auto\",\n        },\n        {\n          target: '.kaydet',\n          content: 'Yüklenecek dosyalar seçildikten sonra yüklemeyi başlatabilirsiniz.',\n          placement: \"auto\",\n        }\n      ],\n      locale: {\n        back: 'Geri',\n        close: 'Kapat',\n        last: 'Son',\n        next: 'İleri',\n        skip: 'Atla',\n      },\n      joyrideActive: false,\n      shouldRun: true,\n    };\n    this.onDrop = this.onDrop.bind(this);\n    this.callback = this.callback.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.changeLocation = this.changeLocation.bind(this);\n    this.sendNextBordroFile = this.sendNextBordroFile.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.removeMonth === true && !!this.state.sessionMonth) {\n      this.setState({sessionMonth: null});\n      this.props.setRemoveMonthOff();\n    }\n  }\n\n  zipAndUploadFiles = () => {\n    let self = this;\n    let fileList = self.state.fileList;\n    const zip = require('jszip')();\n    fileList.forEach(file => {\n      zip.file(file.name, file.content);\n    });\n    zip.generateAsync({\n      type: 'arrayBuffer',\n      compression: 'DEFLATE',\n      compressionOptions: {\n        level: 9\n      }\n    }).then(content => {\n      let file = {\n        content:\n          new File(\n            [new Blob([content], {type: \"application/zip\"})],\n            \"yuklenenDokumanlar.zip\",\n            {type: \"application/zip\", lastModified: Date.now()}),\n        name: \"zipFile.zip\",\n        size: 1};\n      fileList = [];\n      fileList.push(file);\n      let formData = new FormData();\n      let methodCall;\n\n      if (self.props.newSession) {\n        formData.append(\"content\", file.content);\n        formData.append(\"year\", self.state.sessionMonth.year().toString());\n        formData.append(\"month\", (self.state.sessionMonth.month() + 1).toString());\n        formData.append(\"totalCount\", 1);\n        formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n        methodCall = \"/create\";\n\n      } else {\n        formData.append(\"content\", file.content);\n        formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n        formData.append(\"totalCount\", 1);\n        methodCall = \"/sendNextBordroFile\";\n      }\n\n      let params = {\n        url: `/bordrosession${methodCall}`,\n        method: 'post',\n        cancelToken: self._source.token,\n        data: formData\n      };\n      fileList[0] = {\n        status: \"processing\",\n        statusText: \"Gönderim başlatıldı.\",\n        name: file.name,\n        size: file.size,\n        content: file.content,\n      };\n      self.setState({btnDisabled: true, fileList});\n      requestK(params)\n        .then(function (response) {\n          let document = fileList[0];\n          fileList[0] = {\n            status: \"success\",\n            statusText: \"Gönderim başarılı.\",\n            name: document.name,\n            size: document.size,\n            content: document.content,\n          };\n          self.setState({fileList, id: response.data, btnDisabled: false});\n          self.props.toggleModal(true, true);\n          if (self.props.newSession) {\n            self.props.toggleModal(false, true);\n            self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n            self.props.loadBordroSession();\n          }\n        })\n        .catch(function (error) {\n          if (!axios.isCancel(error)) {\n            file.status = \"error\";\n            file.statusText = error.data;\n            fileList[0] = {\n              status: \"error\",\n              statusText: error.data,\n              name: file.name,\n              size: file.size,\n              content: file.content,\n            };\n            self.setState({fileList: fileList, btnDisabled: false});\n            showAxiosError(error);\n          }\n        });\n\n    });\n  };\n\n  // sendNextBordroFile() {\n  //   if (this.props.newSession && !moment(this.state.sessionMonth, \"YYYY/MM\", true).isValid()) {\n  //     showAxiosError({message: 'Ücret Bordrosu Dönemi alanına YYYY/AA formatında geçerli bir değer giriniz.'});\n  //   } else {\n  //     this._source = axios.CancelToken.source();\n  //     this.zipAndUploadFiles();\n  //   }\n  // }\n\n  sendNextBordroFile(index, firstCycle, total) {\n    if (this.props.newSession && !moment(this.state.sessionMonth, \"YYYY/MM\", true).isValid()) {\n      showAxiosError({message: 'Ücret Bordrosu Dönemi alanına YYYY/AA formatında geçerli bir değer giriniz.'});\n    } else {\n      let self = this;\n      this._source = axios.CancelToken.source();\n      let fileList = self.state.fileList;\n      let totalCount;\n      if (total === 0)\n        totalCount = fileList.length;\n      else\n        totalCount = total;\n\n      let allPdf = true;\n      let allXlsx = true;\n      for (let i = 0; i < totalCount; i++) {\n        let fileName = fileList[i].name;\n        if (!fileName.toLowerCase().endsWith(\".pdf\")) {\n          allPdf = false;\n        }\n        if (!fileName.toLowerCase().endsWith(\".xlsx\")) {\n          allXlsx = false;\n        }\n      }\n      if (totalCount > 1 && allPdf) {\n        let totalFileSize = 0;\n        fileList.forEach(file => {\n          totalFileSize += file.size;\n        });\n        if(totalFileSize < 75 * 1024 * 1024){\n          let formData = new FormData();\n          fileList.forEach(file => {\n            formData.append(\"files\", file.content);\n          });\n          if (!self.props.id) {\n            formData.append(\"year\", this.state.sessionMonth.year().toString());\n            formData.append(\"month\", (this.state.sessionMonth.month() + 1).toString());\n            formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n          }else{\n            formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n          }\n          let methodCall = \"/createOrSendNextBordroFile\";\n\n          let params = {\n            url: `/bordrosession${methodCall}`,\n            method: 'post',\n            cancelToken: self._source.token,\n            data: formData\n          };\n\n          fileList.forEach((document, index) => {\n            fileList[index] = {\n              status: \"processing\",\n              statusText: \"Gönderim başlatıldı.\",\n              name: document.name,\n              size: document.size,\n              content: document.content,\n            };\n          });\n\n          self.setState({btnDisabled: true, fileList: fileList});\n\n          requestK(params)\n              .then(function (response) {\n                fileList.forEach((document, index) => {\n                  fileList[index] = {\n                    status: \"success\",\n                    statusText: \"Gönderim başarılı.\",\n                    name: document.name,\n                    size: document.size,\n                    content: document.content,\n                  };\n                });\n                self.setState({btnDisabled: false, index: index + 1});\n                if (self.props.newSession) {\n                  self.props.toggleModal(false, true);\n                  self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n                  self.props.loadBordroSession();\n                } else {\n                  if (fileList[index].status === \"success\")\n                    self.props.toggleModalWithTimeout(false, true);\n                }\n                self.load();\n                Alert.success('Tüm dokümanlar kaydedildi.', {\n                  position: 'top-right',\n                  effect: 'stackslide',\n                  timeout: 5000\n                });\n              })\n              .catch(function (error) {\n                if (!axios.isCancel(error)) {\n                  fileList.forEach((document, index) => {\n                    document.status = \"error\";\n                    document.statusText = error.data;\n                    fileList[index] = {\n                      status: \"error\",\n                      statusText: error.data,\n                      name: document.name,\n                      size: document.size,\n                      content: document.content,\n                    };\n                  });\n                  self.setState({fileList, btnDisabled: false});\n                  showAxiosError(error);\n                }\n              });\n        }else{\n          Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n          });\n        }\n\n      } else if(totalCount>1 && !allPdf && allXlsx){\n        Alert.warning('.xlsx olarak sadece bir dosya yüklenebilir.', {\n          position: 'top-right',\n          effect: 'stackslide',\n          timeout: 5000\n        });\n      }else if(totalCount>1 && !allPdf && !allXlsx){\n        Alert.warning('.pdf ve .xlsx dosyaları birlikte yüklenemez.', {\n          position: 'top-right',\n          effect: 'stackslide',\n          timeout: 5000\n        });\n      } else {\n        if (index < fileList.length) {\n          let document1 = fileList[index];\n          if(document1.size< 75 * 1024 * 1024){\n            let formData = new FormData();\n            let methodCall;\n\n            if (self.props.newSession && firstCycle) {\n              formData.append(\"content\", document1.content);\n              formData.append(\"year\", this.state.sessionMonth.year().toString());\n              formData.append(\"month\", (this.state.sessionMonth.month() + 1).toString());\n              formData.append(\"totalCount\", totalCount);\n              formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n              methodCall = \"/create\";\n\n            } else {\n              formData.append(\"content\", document1.content);\n              formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n              formData.append(\"totalCount\", totalCount);\n              methodCall = \"/sendNextBordroFile\";\n            }\n\n            let params = {\n              url: `/bordrosession${methodCall}`,\n              method: 'post',\n              cancelToken: self._source.token,\n              data: formData\n            };\n            fileList[index] = {\n              status: \"processing\",\n              statusText: \"Gönderim başlatıldı.\",\n              name: document1.name,\n              size: document1.size,\n              content: document1.content,\n            };\n            self.setState({btnDisabled: true, fileList: fileList});\n            requestK(params)\n                .then(function (response) {\n                  let document = fileList[index];\n                  fileList[index] = {\n                    status: \"success\",\n                    statusText: \"Gönderim başarılı.\",\n                    name: document.name,\n                    size: document.size,\n                    content: document.content,\n                  };\n                  self.setState({fileList, index: (index + 1)});\n                  firstCycle && self.setState({id: response.data});\n                  if (index + 1 < fileList.length) {\n                    if ((index + 1) % 5 === 0) {\n                      fileList.splice(0, 4);\n                      self.setState({realIndex: (self.state.realIndex + 4)});\n                      self.sendNextBordroFile((index + 1) - 4, false, totalCount);\n                    } else {\n                      self.sendNextBordroFile(index + 1, false, totalCount);\n                    }\n                  } else {\n                    self.setState({btnDisabled: false, index: index + 1});\n                    if (self.props.newSession) {\n                      self.props.toggleModal(false, true);\n                      self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n                      self.props.loadBordroSession();\n                    } else {\n                      if (fileList[index].status === \"success\")\n                        self.props.toggleModalWithTimeout(false, true);\n                    }\n                  }\n                })\n                .catch(function (error) {\n                  if (!axios.isCancel(error)) {\n                    document1.status = \"error\";\n                    document1.statusText = error.data;\n                    fileList[index] = {\n                      status: \"error\",\n                      statusText: error.data,\n                      name: document1.name,\n                      size: document1.size,\n                      content: document1.content,\n                    };\n                    self.setState({fileList: fileList, btnDisabled: false});\n                    showAxiosError(error);\n                  }\n                });\n          }else{\n            Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n              position: 'top-right',\n              effect: 'stackslide',\n              timeout: 5000\n            });\n          }\n\n        } else {\n          Alert.success('Tüm dokümanlar kaydedildi.', {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n          });\n        }\n      }\n    }\n  }\n\n  onCancel() {\n    if (this._source)\n      this._source.cancel();\n\n    if (this.state.index > 0) {\n      this.props.toggleModal(false, true);\n    } else {\n      this.props.toggleModal(false, false);\n    }\n  }\n\n  onDrop(acceptedFiles, rejectedFiles) {\n    let self = this;\n    if (!!acceptedFiles) {\n      self.setState({processing: true, uploadBtnDisabled: true, fileList: []});\n      let fileList = [];\n      for (let i = 0; i < acceptedFiles.length; i++) {\n        fileList.push({content: acceptedFiles[i], name: acceptedFiles[i].name, size: acceptedFiles[i].size});\n      }\n      self.setState({processing: false, uploadBtnDisabled: false, fileList: fileList, index: 0, realIndex: 0});\n    }\n  }\n\n  getStatusRender(status) {\n    let className = (status === \"processing\" ? \"spinner fa-spin\" : (status === \"success\" ? \"check\" : (status === \"error\" ? \"close\" : \"pause\")));\n    let color = (status === \"processing\" ? \"dark\" : (status === \"success\" ? \"green\" : (status === \"error\" ? \"red\" : \"dark\")));\n    return (<i className={\"fas fa-\" + className} style={{color: color, paddingRight: \"4px\"}}></i>);\n  }\n\n  // activeJoyride(){\n  //     this.setState({joyrideActive:true})\n  // }\n\n  activateJoyride() {\n    if (this.state.joyrideActive === false)\n      this.setState({joyrideActive: true})\n    // else\n    //     this.setState({ joyrideActive: false })\n  }\n\n  callback(data) {\n    if (data.action === 'close' && data.type === 'step:after') {\n      this.setState({shouldRun: false});\n    }\n    if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n      this.setState({shouldRun: true});\n      this.setState({joyrideActive: false});\n      this.activateJoyride();\n    }\n  }\n\n  changeLocation(e) {\n    this.setState({location: e.target.value});\n  }\n\n  render() {\n    let steps = this.props && this.props.newSession ? this.state.steps : this.state.steps2;\n    let locale = this.state.locale;\n    return (\n      <DefaultModal\n        isOpen={this.props.modal}\n        disabled={\n          this.state.btnDisabled ||\n          (this.state.fileList && this.state.fileList.length === 0) ||\n          (this.props.newSession && !this.state.sessionMonth)}\n        title=\"Ücret Bordrosu Dosyalarını Yükleme\"\n        size=\"lg\"\n        modalBodyStyle={{padding: \"0\", minHeight: \"500px\"}}\n        secondaryButton={<button className=\"helpButton\" onClick={() => {\n          this.activateJoyride()\n        }} style={{position: \"absolute\", right: \"70px\", alignSelf: \"center\", marginTop: \"-5px\"}}>\n          <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n          <i className=\"far fa-question-circle helpButtonIcon\" style={{opacity: \".5\"}}/></button>}\n        confirmBtnText=\"Doküman(lar)ı Yükle\"\n        cancelBtnText=\"Kapat\"\n        onConfirm={(e) => this.sendNextBordroFile(this.state.index, true, 0)}\n        onCancel={(e) => this.props.toggleModal(false, false)}>\n        <Row>\n          {this.state.joyrideActive &&\n              <Joyride\n                  disableBeacon={true}\n                  autoStart\n                  locale={locale}\n                  steps={steps}\n                  continuous={true}\n                  run={this.state.shouldRun}\n                  scrollToFirstStep={true}\n                  showProgress={true}\n                  showSkipButton={true}\n                  scrollToSteps={true}\n                  disableCloseOnEsc={true}\n                  disableOverlay={false}\n                  disableOverlayClicks={false}\n                  keyboardNavigation={true}\n                  hideBackButton={false}\n                  disableOverlayClose={true}\n                  callback={this.callback}\n                  holePadding={0}\n                  shouldRun={this.state.shouldRun}\n                  styles={{\n                    options: {\n                      zIndex: 100000,\n                      primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                    }\n                  }}\n\n              />\n        }\n          {this.props.newSession &&\n          <div className=\" col-sm-12 row\" style={{marginTop: \"15px\"}}>\n            <div className=\"col-sm-4\"/>\n            <div className=\"col-sm-8 row\">\n              <div className=\"col-sm-4\">\n                Dönem\n              </div>\n              <div className=\"col-sm-4\">\n                <Datetime timeFormat={false} dateFormat=\"YYYY-MM\" closeOnSelect={true}\n                          inputProps={{placeholder: 'YIL/AY'}}\n                          value={this.state.sessionMonth}\n                          renderMonth={this.props.renderMonth}\n                          isValidDate={function (current) {\n                            return current.startOf('month').isSameOrBefore(Datetime.moment().startOf('month'));\n                          }}\n                          onChange={(e) => {\n                            this.setState({sessionMonth: e});\n                            this.props.onMonthChange(e)\n                          }}/>\n              </div>\n            </div>\n            <div className=\"col-sm-2\"/>\n          </div>}\n          {this.props.newSession &&\n          <div className=\" col-sm-12 row\" style={{marginTop: \"15px\"}}>\n            <div className=\"col-sm-4\"/>\n            <div className=\"col-sm-8 row\">\n              <div className=\"col-sm-4\">\n                Lokasyon\n              </div>\n              <div className=\"col-sm-4\">\n                <Input type=\"text\" name=\"location\"\n                       value={this.state.location}\n                       onChange={this.changeLocation}/>\n              </div>\n            </div>\n            <div className=\"col-sm-2\"/>\n          </div>}\n          <Col sm=\"12\" style={{paddingTop: \"15px\", paddingRight: \"32px\", paddingLeft: \"32px\"}}>\n            <Dropzone\n              accept=\".pdf, .xlsx\"\n              activeClassName=\"dropzoneActiveClass\"\n              className=\"FormRenk col-sm-12\"\n              multiple={true}\n              disabled={this.state.btnDisabled}\n              onDrop={this.onDrop}>\n              <div className=\"dropzoneInnerArea\">\n                Ücret Bordrosu dosyalarını (.pdf, .xlsx) yükleyiniz.\n              </div>\n            </Dropzone>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\" style={{\n            paddingTop: \"0px\",\n            paddingRight: \"15px\",\n            paddingLeft: \"15px\",\n            maxHeight: '500px',\n            overflow: \"auto\"\n          }}>\n            <table className=\"\" style={{textAlign: 'center', paddingBottom: \"5px\"}}>\n              <thead>\n              <tr style={{backgroundColor: '#ebedf0'}}>\n                <th width=\"5%\">#</th>\n                <th>Dosya Adı</th>\n                <th>Dosya Boyutu</th>\n                <th>Durum</th>\n              </tr>\n              </thead>\n              <tbody>\n              {this.state.fileList && this.state.fileList.map((document, index) =>\n                <tr key={index + \"_\" + document.name + \"_\" + document.size}>\n                  <td>{index + 1}</td>\n                  <td style={{margin: \"0px\", textAlign: \"left\"}}>{<TextOverFlowTooltip\n                    text={document.name || \"-\"}\n                    maxLength={30}/>}</td>\n                  <td\n                    style={{margin: \"0px\"}}>{(new Decimal(new Decimal(document.size / 1024 / 1024).toFixed(2))).toNumber() + \" MB\"}</td>\n                  <td\n                    style={{margin: \"0px\"}}>{this.getStatusRender(document.status)}{(document.statusText || \"Gönderim bekliyor\")}</td>\n                </tr>\n              )}\n              {!this.state.processing && (this.state.fileList && this.state.fileList.length === 0) &&\n              <tr>\n                <td colSpan=\"8\">Kayıt bulunamadı</td>\n              </tr>\n              }\n              {this.state.processing &&\n              <tr>\n                <td colSpan=\"8\">Doküman işleniyor...</td>\n              </tr>\n              }\n              </tbody>\n            </table>\n          </Col>\n          <Col sm=\"12\">\n            <p style={{float: \"right\"}}>Toplam\n              Adet: {this.state.fileList ? this.state.fileList.length : 0}</p>\n          </Col>\n        </Row>\n\n      </DefaultModal>\n    );\n  }\n}\n\nexport default UploadBordroFileModal;\n\n","import React, {Component} from 'react';\nimport Table from \"../../../components/Table/Table\";\nimport 'react-table/react-table.css'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport {CardBody, Nav} from 'reactstrap';\nimport Notify from 'react-notification-alert';\nimport moment from 'moment';\nimport 'moment/locale/tr';\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport {checkGrantForFetchResponse, checkGrantToDisplay, showAxiosError} from \"../../../helper/helper\";\nimport StickButton from \"../../../components/StickButton\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport UploadBordroFileModal from \"./component/UploadBordroFileModal\";\nimport \"../../../helper/explorer_support\";\nimport DropdownCheck from \"../../../components/Table/DropdownCheck\";\nimport Joyride from \"react-joyride\";\nimport VideoModal from \"../../../components/VideoModal\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport ApproveDocumentViewer from \"../approval/helper/ApproveDocumentViewer\";\nimport {BORDRO_IMPORT, BORDRO_SESSION_WORKS} from \"../../../common/authorities/GrantDef\";\nimport Alert from \"react-s-alert\";\n\nclass BordroSessionListPage extends Component {\n\n    videos = [\n        {title: \"Form işlemleri\", id: \"lTjRaQZI4_Y\"},\n    ];\n    switchVideo = (video) => {\n        this.setState({video: video, showEczaciHelpModal: true})\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selection: [],\n            selectedAll: false,\n            searchQuery: {},\n            loading: true,\n            content: [],\n            totalIdList: [],\n            manual: false,\n            total: 0,\n            searching: false,\n            page: 0,\n            size: 10,\n            searchKey: \"\",\n            showModal: false,\n            loadingType: null,\n            index: null,\n            steps: [\n                {\n                    target: '.card-title',\n                    content: \"Ücret bordrosu yükleme ile başlattığınız bütün dönem işlemleri burada listelenmektedir. Gönderim yapmak için ilgili dönem işlemini 'Dönemi Göster' ile açabilirsiniz. \",\n                    placement: \"center\",\n                },\n                // {\n                //     target: '.Select',\n                //     content: \"form2 \" ,\n                //     placement: \"center\",\n                // },\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            width: window.innerWidth,\n            flag: 0,\n            showEczaciHelpModal: false,\n            video: null,\n            stop: null,\n        };\n\n        this.deleteRow = this.deleteRow.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n        this.isSelected = this.isSelected.bind(this);\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n        this.downloadSessionZipFile = this.downloadSessionZipFile.bind(this);\n        this.searchWithKey = this.searchWithKey.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.downloadMedia = this.downloadMedia.bind(this);\n        this.uploadBordroFile = this.uploadBordroFile.bind(this);\n        this.refreshDublicateInfo = this.refreshDublicateInfo.bind(this);\n        BordroSessionListPage.checkDateQueryIsValid = BordroSessionListPage.checkDateQueryIsValid.bind(this);\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = !!accessor ? ('&sort=' + accessor + ',' + direction) : '&sort=id,desc';\n\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/bordrosession/readBordroSessionAll?page=' + page + '&size=' + size + searchQuery + sortStr,\n            method: \"post\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        self.props.reload(true);\n        requestK(params)\n            .then(function (response) {\n                checkGrantForFetchResponse(self, response.data);\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: (response.data && response.data.page) ? response.data.page.totalElements : 0,\n                    content: (response.data && response.data.page) ? response.data.page.content : [],\n                    totalIdList: response.data ? response.data.selectedIdList : [],\n                    loading: false,\n                    searching: false\n                });\n                self.props.reload(false);\n                response.data.content && response.data.content.map(e => {\n                    self.refreshDublicateInfo(e.id)\n                });\n            }).catch(function (error) {\n            self.setState({loading: false, searching: false});\n            self.props.reload(false);\n            showAxiosError(error);\n        });\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            searching: true\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    searchWithKey(e) {\n        this.setState({searchKey: e.target.value, manual: true});\n    }\n\n    refreshDublicateInfo(sessionId) {\n        let self = this;\n        let params = {\n            url: '/bordrosession/readBordroSessionDublicateInfo',\n            method: \"post\",\n            data: sessionId\n        };\n        requestK(params)\n            .then(function (response) {\n                let content = self.state.content;\n                self.state.content && self.state.content.map((e, index) => {\n                    if (e.id === sessionId) {\n                        content[index].dublicatedCount = response.data;\n                    }\n                });\n                self.setState({content: content});\n            })\n            .catch(function (error) {\n                showAxiosError(error);\n            });\n    }\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    arrangeDataSetForSession = (id) => {\n        let self = this;\n        let dataSet = {};\n        let list = [];\n        list.push(id)\n        dataSet.sheetName = \"Dönem_Dosyaları\"\n        dataSet.uuid = self.create_UUID();\n        dataSet.list = list;\n        dataSet.type = \"zip\";\n        return dataSet;\n    }\n\n    downloadSessionZipFile(bordroSession, index) {\n        let self = this;\n        let data = self.arrangeDataSetForSession(bordroSession.id);\n        let params = {\n            url: `/bordrosession/downloadBordroSessionFile`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: data\n        };\n        self.setState({alert: null, loadingType: 'downloadZip', index: index});\n        requestK(params)\n            .then(function (response) {\n                Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 8000\n                });\n                self.setState({loadingType: null});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({loadingType: null});\n        });\n    }\n\n    uploadBordroFile(item, index) {\n        this.setState({\n            showUploadModal: true,\n            fileLoadSessionId: item.id,\n            fileLoadSessionYear: moment(item.term, 'YYYY/MM/DD').format('YYYY'),\n            fileLoadSessionMonth: moment(item.term, 'YYYY/MM/DD').format('M'),\n            index: index\n        });\n    }\n\n    static checkDateQueryIsValid(minMonth, minYear, maxMonth, maxYear) {\n        let mMChecker = minMonth !== 0 ? minMonth : 0;\n        let mYChecker = minYear !== 0 ? minYear : 0;\n        let xMChecker = maxMonth !== 0 ? maxMonth : 12;\n        let xYChecker = maxYear !== 0 ? maxYear : 3000;\n        return !(mYChecker === xYChecker && mMChecker > xMChecker || mYChecker > xYChecker);\n    }\n\n    create_UUID = () => {\n        let dt, uuid;\n        dt = new Date().getTime();\n        uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            let r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    }\n\n    arrangeDataSet = (type) => {\n        let self = this;\n        let dataSet = {};\n        dataSet.sheetName = \"Bordro_Dönem_Raporu\"\n        dataSet.uuid = self.create_UUID();\n        dataSet.list = self.state.selection\n        dataSet.type = type;\n        return dataSet;\n    }\n\n    downloadMedia(type) {\n        let self = this;\n        let data = self.arrangeDataSet(type);\n        let params = {\n            url: `/bordrosession/downloadMedia`,\n            method: \"post\",\n            data: data\n        };\n        requestK(params)\n            .then(function (response) {\n                Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 8000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    deleteRow(row) {\n        let self = this;\n        let params = {\n            url: `/bordrosession/deleteBordroSession`,\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({disabledDeleteBtn: true, alert: null});\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    alert: (\n                        <SweetAlert success\n                                    confirmBtnText=\"Tamam\"\n                                    confirmBtnBsStyle=\"success\"\n                                    title=\"Silindi\"\n                                    onConfirm={() => self.setState({alert: null})}\n                        >\n                            Ücret bordrosu dönemi başarıyla silindi.\n                        </SweetAlert>\n                    ),\n                    manual: true,\n                    disabledDeleteBtn: false\n                });\n            }).catch(function (error) {\n            showAxiosError({error});\n            self.setState({disabledDeleteBtn: false});\n        });\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true});\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback = (data) => {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    };\n\n    render() {\n        let steps = this.state.steps;\n        let locale = this.state.locale;\n\n        const fields = [\n            {\n                label: \"Dönem Tarihi (Başlangıç)\",\n                accessor: \"min_term\",\n                type: \"month\",\n                operator: \">=\",\n            },\n            {\n                label: \"Lokasyon Bilgisi\",\n                accessor: \"location\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Dönem Tarihi (Bitiş)\",\n                accessor: \"max_term\",\n                type: \"month\",\n                operator: \"<=\",\n            },\n\n        ];\n\n        let pageIdList = [];\n        if (this.state.content && this.state.content instanceof Array) {\n            this.state.content.map(e => {\n                pageIdList.push(e.id);\n            });\n        }\n        let columns = [\n            {\n                Header: (this.state.content &&\n                    <DropdownCheck selectionIdList={this.state.selection}\n                                   totalIdList={this.state.totalIdList}\n                                   pageIdList={pageIdList}\n                                   onChange={e => this.setState({selection: e})}/>),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.content &&\n                    <div style={{textAlign: \"center\"}}>\n                        <input type=\"checkbox\" checked={this.isSelected(row.id)}\n                               onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}/></div>)\n            },\n            {\n                Header: \"Dönem\",\n                accessor: \"term\",\n                Cell: row => (\n                    <div>\n                        {!!row.term && moment(row.term, 'YYYY/MM/DD').format('YYYY/MM')}\n                    </div>\n                )\n            },\n            {\n                Header: \"Lokasyon\",\n                accessor: \"location\",\n                Cell: row => (\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.location} maxLength={25}/></div>\n                )\n            },\n            {\n                Header: \"Ücret Bordrosu Sayısı\",\n                accessor: \"bordroCount\",\n                sortable: false\n            },\n            {\n                Header: \"Gönderilmiş İleti\",\n                accessor: \"sentMimeCount\",\n                sortable: false\n            },\n            {\n                Header: \"İmzalı İleti\",\n                accessor: \"signedMimeCount\",\n                sortable: false\n            },\n            {\n                Header: \"Eşleştirilemeyen\",\n                accessor: \"unPairedCount\",\n                sortable: false,\n                Cell: row => (<span style={{color: row.unPairedCount ? 'red' : 'dark'}}>{row.unPairedCount}</span>)\n            },\n            {\n                Header: \"Mükerrer Çalışan\",\n                accessor: \"dublicatedCount\",\n                sortable: false,\n                Cell: row => (<span style={{color: row.dublicatedCount ? 'red' : 'dark'}}>{row.dublicatedCount}</span>)\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: (item, index) => (\n                    <div className=\"btn-group\" style={{padding: 0, margin: 0}}>\n                        {checkGrantToDisplay(this, BORDRO_SESSION_WORKS) &&\n                            <div className=\"dropdown\" style={{padding: 0, margin: 0}}>\n                                <button className=\"MenuBtn2 listt btn btn-default\" type=\"button\"\n                                        data-toggle=\"dropdown\">Seçİnİz\n                                </button>\n                                <div className=\"dropdown-menu\" aria-labelledby={\"dropdownMenuButton_\" + item.id}>\n                                    {checkGrantToDisplay(this, BORDRO_IMPORT) &&\n                                        <a className=\"dropdown-item\"\n                                           onClick={() => this.props.history.push(`/${this.props.peykName}/bordroimport/${item.id}`)}>\n                                            <i className=\"fa fa-eye\"/>Dönemi Göster\n                                        </a>}\n                                    {checkGrantToDisplay(this, BORDRO_SESSION_WORKS) &&\n                                        <a className=\"dropdown-item\"\n                                           style={(this.state.index === index && this.state.loadingType === \"downloadZip\") ? {\n                                               pointerEvents: 'none',\n                                               cursor: 'none'\n                                           } : {}}\n                                           onClick={() => this.downloadSessionZipFile(item, index)}>\n                                            <i\n                                                className={(this.state.index === index && this.state.loadingType === \"downloadZip\" ? \"fas fa-spinner fa-spin\" : \"fa fa-download\")}/>Dönemi\n                                            İndir\n                                        </a>}\n                                    {checkGrantToDisplay(this, BORDRO_SESSION_WORKS) &&\n                                        <a className=\"dropdown-item\" onClick={() => this.uploadBordroFile(item)}>\n                                            <i className=\"fa fa-upload\"/>Döneme Dosya Ekle\n                                        </a>}\n                                    {item.signedMimeCount <= 0 && !this.state.disabledDeleteBtn &&\n                                        <a className=\"dropdown-item\" onClick={() =>\n                                            this.setState({\n                                                alert: (\n                                                    <SweetAlert showCancel\n                                                                warning\n                                                                confirmBtnText=\"Evet\"\n                                                                cancelBtnText=\"Hayır\"\n                                                                confirmBtnBsStyle=\"danger\"\n                                                                cancelBtnBsStyle=\"default\"\n                                                                title=\"Emin misiniz?\"\n                                                                onConfirm={() => {\n                                                                    this.deleteRow(item)\n                                                                }}\n                                                                onCancel={() => this.setState({alert: null})}>\n                                                        Dönem silinecek.\n                                                    </SweetAlert>)\n                                            })\n                                        }>\n                                            <i className=\"fa fa-close\"/>Dönemi Sil\n                                        </a>\n                                    }\n                                </div>\n                            </div>}\n                    </div>\n                )\n            }\n        ];\n\n        return (\n            <div className=\"row baseBackground\">\n                {this.state.joyrideActive &&\n                    <Joyride\n                        disableBeacon={false}\n                        autoStart\n                        locale={locale}\n                        steps={steps}\n                        continuous={true}\n                        run={this.state.shouldRun}\n                        scrollToFirstStep={true}\n                        showProgress={true}\n                        showSkipButton={true}\n                        scrollToSteps={true}\n                        disableCloseOnEsc={true}\n                        disableOverlay={false}\n                        disableOverlayClicks={false}\n                        keyboardNavigation={true}\n                        hideBackButton={false}\n                        disableOverlayClose={true}\n                        callback={this.callback}\n                        holePadding={0}\n                        shouldRun={this.state.shouldRun}\n                        styles={{\n                            options: {\n                                zIndex: 100000,\n                                primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                            }\n                        }}/>\n                }\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    {checkGrantToDisplay(this, BORDRO_SESSION_WORKS) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Excel\" style={{fontSize: 'x-small'}}\n                                     label=\"Rapor Excel İndir\" title=\"Seçilen Ücret Bordrosu Dönem Bilgilerini İndir\"\n                                     disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                     onClick={(e) => this.state.selection && this.state.selection.length > 0 && this.downloadMedia(\"excel\")}/>}\n                    {checkGrantToDisplay(this, BORDRO_SESSION_WORKS) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Pdf\" style={{fontSize: 'x-small'}}\n                                     label=\"Rapor PDF İndir\" title=\"Seçilen Ücret Bordrosu Dönem Bilgilerini İndir\"\n                                     disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                     onClick={(e) => this.state.selection && this.state.selection.length > 0 && this.downloadMedia(\"pdf\")}/>}\n\n                    <ul className=\"helpfulList\">\n                        <li className=\"helpButtonContainer\" position=\"rightside\">\n                            <button className=\"helpButton\" onClick={() => {\n                                this.activateJoyride()\n                            }}>\n                                <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                                <i className=\"far fa-question-circle helpButtonIcon\"/>\n                            </button>\n                        </li>\n                        {this.state.stop &&\n                            <li className=\"nav-item dropdown  videoIconContainer\">\n                                <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                        aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                    <span className=\"tooltipText\">Yardimci Videolar</span>\n                                    <i className=\"fab fa-youtube videoIcon\"/>\n                                </button>\n                                <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                     aria-labelledby=\"videosLink\">\n                                    {\n                                        this.videos.map((video, i) =>\n                                            <a key={i} className=\"dropdown-item\"\n                                               onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                    }\n                                </div>\n                            </li>\n                        }\n                    </ul>\n                </Nav>\n                <div className=\"row satirBasi\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"card-title\">Ücret Bordrosu Dönem İşlemleri</h4>\n                            </div>\n                            <CardBody style={{paddingBottom: '0px'}}>\n                                <div className=\"\">\n                                    <div className=\"\" style={{marginTop: '10px', marginBottom: '0px'}}>\n                                        <DetailedSearch fields={fields}\n                                                        loading={this.state.searching}\n                                                        onSearch={this.handleSearch}/>\n                                    </div>\n                                </div>\n                            </CardBody>\n                            <CardBody>\n                                <Table columns={columns}\n                                       content={this.state.content}\n                                       loading={this.state.loading}\n                                       total={this.state.total}\n                                       page={this.state.page}\n                                       manual={this.state.manual}\n                                       size={this.state.size}\n                                       options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                                       fetchData={this.fetchData}\n                                />\n                            </CardBody>\n                        </div>\n                    </div>\n                </div>\n                {this.state.showModal &&\n                    <ApproveDocumentViewer url={this.state.url}\n                                           modal={this.state.showModal}\n                                           closeModal={() => this.setState({url: null, showModal: false})}/>\n                }\n                {this.state.showUploadModal &&\n                    <UploadBordroFileModal\n                        id={this.state.fileLoadSessionId} peykName={this.props.peykName}\n                        title={(this.state.fileLoadSessionYear / this.state.fileLoadSessionMonth > 9 ? this.state.fileLoadSessionMonth : 0 + this.state.fileLoadSessionMonth) + \" dönemi bordro yükleme\"}\n                        toggleModal={(flag, manual) => this.setState({showUploadModal: flag, manual: manual})}\n                        toggleModalWithTimeout={(flag, manual) => this.setState({\n                            showUploadModal: flag,\n                            manual: manual\n                        })}\n                        modal={this.state.showUploadModal}/>\n                }\n                {this.state.alert &&\n                    <div className=\"row satirBasi\">\n                        <Notify ref=\"notify\"/>\n                        {this.state.alert}\n                    </div>\n                }\n                {this.state.showEczaciHelpModal &&\n                    <VideoModal video={this.state.video} isOpen={this.state.showEczaciHelpModal}\n                                close={() => this.setState({showEczaciHelpModal: false})}/>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default BordroSessionListPage;\n"],"sourceRoot":""}