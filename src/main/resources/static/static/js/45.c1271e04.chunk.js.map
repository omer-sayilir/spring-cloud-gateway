{"version":3,"sources":["accounting/kepik/formsession/FormSessionPage.js"],"names":["FormSessionPage","Component","constructor","props","super","videos","title","id","switchVideo","video","this","setState","showEczaciHelpModal","updateDimensions","width","window","innerWidth","readTitleAll","self","params","url","method","requestK","then","response","titleList","data","catch","error","sessionAndEmployeeListChecker","sessionId","timeout","unloadedEmployeesLength","readSmsTemplate","smsBody","showAxiosError","isNoTemplateValid","state","mimeTitle","trim","Alert","position","effect","alert","mimeBody","callback","action","type","shouldRun","flag","joyrideActive","activateJoyride","isNotEminEczanesi","currentUser","vknTckn","pageStatus","selection","formSessionId","pageNumber","pageSize","loading","pdfName","signError","completed","signedDocumentCount","progressLength","pageState","selectedFormIdList","timer","timerStarted","certError","manual","content","toBeSentList","total","searching","searchQuery","undefined","page","size","searchKey","isKepOwner","isHsmOwner","send","reloadCalled","showOnlySents","formState","steps","target","placement","locale","back","close","last","next","skip","stop","temporaryRow","showDownloadButton","showManuelSign","formInteractionInProgress","checkFormState","creditLoading","sign","bind","hsmSign","preview","getList","mimeSign","fetchData","kepPdfSign","mailPdfSign","editReceiver","manualPdfSign","deleteSession","setMediaViewer","getToBeSentList","downloadContent","showAlreadySentMessage","omitSentForms","deleteRow","checkCustomerSmsCreditAndSent","updateMimeInfo","signDocuments","signPdf","writeSignedForm","updatePdfCertificates","isDisabled","stateMap","0","label","10","wait","20","30","40","danger","50","60","cancelSendingForm","item","disabledCancelSendingBtn","conditionalSelection","conditionalSelectedAll","success","load","hasGrant","grant","componentDidMount","axios","Axios","create","baseURL","match","history","push","pathname","peykName","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","snapshot","setInterval","backToTheFuture","reload","previousPage","parseInt","formSession","kepAccountList","formTemplate","length","formName","replace","formParamList","JSON","parse","extInputLabelList","formParams","externalList","disabledBtn","accessor","direction","sortStr","tableLoading","formType","category","isNotEditable","totalElements","form","responseType","mediaModal","blob","Blob","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","result","row","index","disabledDownloadBtn","selectedIndex","link","document","createElement","href","URL","createObjectURL","createdAt","toString","substring","indexOf","fileName","employee","name","surname","Math","floor","random","download","body","appendChild","timeStamp","formTimeStamp","base64_arraybuffer","decode","linkTs","click","sendList","updateMailInfo","kepAccountId","disableButton","timerStatus","status","onTimerStatus","hsmType","pdfCertificate","certificate","value","certificateKeyId","keyId","stringify","signedInfoList","signedDocument","element","post","base64","pin","signedInfo","signature","React","SweetAlert","info","confirmBtnText","confirmBtnBsStyle","onConfirm","location","HsmErrorAlert","selectedIdList","list","map","e","stateCompare","employeeId","tckn","receiverModal","message","selected","toggleCheckboxChange","checked","items","forEach","DocumentState","selectedAll","slice","isSelected","disabledDeleteBtn","downloadExcel","unloadedLoading","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","renderEnteredSections","Fragment","className","style","textDecoration","fontWeight","display","textAlign","margin","Object","keys","renderInputList","renderState","marginBottom","Col","sm","md","marginRight","ReactLoading","color","height","top","lineHeight","paddingRight","opacity","fontSize","renderMimeInputs","Container","Row","Input","rows","disabled","border","marginTop","padding","onChange","renderFormTemplateInfo","paddingLeft","fontStyle","whiteSpace","updatedAt","moment","split","format","renderFormInputInfo","isAnswerable","fontWeigth","formCount","onClick","input","col","key","Label","includes","backgroundColor","showWarning","text","pretext","arguments","warning","render","replaceStep","splice","columnList","Header","Cell","_row$employee$departm","_row$employee$departm2","TextOverFlowTooltip","department","maxLength","jobTitle","conditionalApproveAllowed","declineAllowed","pageCount","warningCount","messageType","sortable","WebkitTextFillColor","data-toggle","aria-labelledby","downloadApproveDocument","ISG_FORM_SEND","HEALTH_FORM_SEND","ZIMMET_FORM_SEND","KVKK_FORM_SEND","showCancel","cancelBtnText","cancelBtnBsStyle","onCancel","stateDetail","columns","renewListForPrivileges","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","options","zIndex","primaryColor","Nav","checkGrantToDisplay","FORM_SEND","HSM_AUTHORITY","StickButton","createdByWebservice","right","aria-haspopup","aria-expanded","i","NavBarKS","CardHeader","CardTitle","tag","CardBody","Table","HsmCertificateViewer","val","pinValueChange","certificateError","displayCertificateMenu","userId","ApproveDocumentViewer","modal","closeModal","canvas","CreateEditEmployeeModal","sidebarMenus","toggleModal","StateDetail","detail","documentType","toggle","VideoModal","isOpen"],"mappings":"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","file":"static/js/45.c1271e04.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {CardBody, CardHeader, CardTitle, Col, Container, Input, Label, Nav, Row} from \"reactstrap\";\nimport Table from \"../../../components/Table/Table\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport {checkGrantToDisplay, showAxiosError} from \"../../../helper/helper\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {downloadApproveDocument, renewListForPrivileges, stateCompare} from \"../common/PeykHelper\";\nimport StickButton from \"../../../components/StickButton\";\nimport Alert from \"react-s-alert\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport CreateEditEmployeeModal from \"../employee/component/CreateEditEmployeeModal\";\nimport DocumentState from \"../common/DocumentState\";\nimport StateDetail from \"../common/StateDetail\";\nimport NavBarKS from \"../../../components/NavBarKS\";\nimport Joyride from \"react-joyride\";\nimport VideoModal from \"../../../components/VideoModal\";\nimport ApproveDocumentViewer from \"../approval/helper/ApproveDocumentViewer\";\nimport moment from \"moment/moment\";\nimport {\n    HEALTH_FORM_SEND,\n    ISG_FORM_SEND,\n    ZIMMET_FORM_SEND,\n    KVKK_FORM_SEND,\n    FORM_SEND, HSM_AUTHORITY\n} from \"../../../common/authorities/GrantDef\";\nimport base64_arraybuffer from \"base64-arraybuffer\";\nimport ReactLoading from \"react-loading\";\nimport HsmErrorAlert from \"../../../common/hsm/HsmErrorAlert\";\nimport Axios from \"axios\";\nimport HsmCertificateViewer from \"../common/HsmCertificateViewer\";\n\nclass FormSessionPage extends Component {\n    videos = [\n        {title: \"Form işlem kaydı bilgileri\", id: \"lTjRaQZI4_Y\"},\n    ];\n    switchVideo = (video) => {\n        this.setState({video: video, showEczaciHelpModal: true})\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pageStatus: 0,\n            alert: null,\n            selection: [],\n            formSessionId: null,\n            pageNumber: 0,\n            pageSize: 10,\n            loading: false,\n            pdfName: \"\",\n            signError: false,\n            completed: false,\n            signedDocumentCount: 0,\n            progressLength: 1,\n            pageState: 0,\n            selectedFormIdList: [],\n            timer: 1,\n            timerStarted: false,\n            certError: true,\n            manual: false,\n            content: [],\n            toBeSentList: [],\n            total: 0,\n            searching: false,\n            searchQuery: undefined,\n            page: 0,\n            size: 10,\n            searchKey: \"\",\n            isKepOwner: false,\n            isHsmOwner: false,\n            send: true,\n            reloadCalled: false,\n            showOnlySents: false,\n            formState:false,\n            steps: [\n\n                {\n                    target: '.card-title',\n                    content: \"Seçmiş olduğunuz form ile ilgili düzenlemeleri bu sayfada yapabilirsiniz\",\n                    placement: \"center\",\n                },\n                {\n                    target: 'button.zocial.Gonder',\n                    content: \"Uyarı gönderme işlemlerinizi buradan yapabilirsiniz\",\n                    placement: \"auto\",\n                },\n                {\n                    target: 'button.MenuBtn2.listt ',\n                    content: \"Açılır menüden diğer işlemleri gerçekleştirebilirsiniz\",\n                    placement: \"auto\",\n                },\n\n                // {\n                //   target: 'button.zocial.Ayar.btn.btn-secondary',\n                //   content: \"Form işleminizi ve çalışanlarınızı düzenleyebilirsiniz.\",\n                //   placement: \"auto\",\n                // },\n\n                // {\n                //   target: 'button.zocial.Sil.btn.btn-secondary',\n                //   content: \"Form işleminizi buradan silebilirsiniz.\",\n                //   placement: \"auto\",\n                // },\n\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            width: window.innerWidth,\n            flag: 0,\n            showEczaciHelpModal: false,\n            video: null,\n            stop: null,\n            temporaryRow: '',\n            showDownloadButton: false,\n            showManuelSign: false,\n            unloadedEmployeesLength: 0,\n            formInteractionInProgress: false,\n            checkFormState: true,\n            creditLoading: false,\n\n        };\n\n        this.sign = this.sign.bind(this);\n        this.hsmSign = this.hsmSign.bind(this);\n        this.preview = this.preview.bind(this);\n        this.getList = this.getList.bind(this);\n        this.mimeSign = this.mimeSign.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n        this.kepPdfSign = this.kepPdfSign.bind(this);\n        this.isHsmOwner = this.isHsmOwner.bind(this);\n        this.isKepOwner = this.isKepOwner.bind(this);\n        this.mailPdfSign = this.mailPdfSign.bind(this);\n        this.editReceiver = this.editReceiver.bind(this);\n        this.manualPdfSign = this.manualPdfSign.bind(this);\n        this.deleteSession = this.deleteSession.bind(this);\n        this.setMediaViewer = this.setMediaViewer.bind(this);\n        this.getToBeSentList = this.getToBeSentList.bind(this);\n        this.downloadContent = this.downloadContent.bind(this);\n        this.showAlreadySentMessage = this.showAlreadySentMessage.bind(this);\n        this.omitSentForms = this.omitSentForms.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n        this.checkCustomerSmsCreditAndSent = this.checkCustomerSmsCreditAndSent.bind(this);\n        this.updateMimeInfo = this.updateMimeInfo.bind(this);\n        this.signDocuments = this.signDocuments.bind(this);\n        this.signPdf = this.signPdf.bind(this);\n        this.writeSignedForm = this.writeSignedForm.bind(this);\n        this.updatePdfCertificates = this.updatePdfCertificates.bind(this);\n        this.isDisabled = this.isDisabled.bind(this);\n\n\n        this.stateMap = {\n            0: {\n                label: \"Pdf dosyaları imzalama için hazır. İmzalayınız\",\n            },\n            10: {\n                label: \"İletiler oluşturuluyor. Lütfen bekleyiniz.\",\n                wait: true\n            },\n            20: {\n                label: \"Sertifika sahibi formlara yazılıyor. Lütfen, sayfayı terk etmeyiniz.\",\n                wait: true\n            },\n            30: {\n                label: \"Pdf dosyaları imzalanıyor. Lütfen bekleyiniz\",\n            },\n            // İmzalanamadı ise;\n            40: {\n                label: \"Pdf dosyaları imzalanamadı. Lütfen bilgileri kontrol ediniz.\",\n                danger: true\n            },\n            50: {\n                label: \"Pdf dosyaları imzalandı.\"\n            },\n            60: {\n                label: \"\"\n            },\n        };\n    }\n\n    cancelSendingForm(item) {\n        let self = this;\n        let params = {\n            url: `/form/cancelSendingForm`,\n            method: \"post\",\n            data: item.id\n        };\n        self.setState({disabledCancelSendingBtn: true});\n        requestK(params)\n            .then(function () {\n                self.setState({\n                    manual: true,\n                    alert: null,\n                    disabledCancelSendingBtn: false,\n                    selection: [],\n                    conditionalSelection: [],\n                    conditionalSelectedAll: false,\n                });\n                Alert.success(\"Form Gönderimi İptal Edildi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                self.props.load();\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledCancelSendingBtn: false});\n        });\n    }\n\n    checkCustomerSmsCreditAndSent() {\n        let self = this;\n        self.setState({ creditLoading: true, alert:null });\n        let params = {\n            url: `/form/checkCustomerSmsCredit`,\n            method: \"post\",\n            data: self.state.formSessionId\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({ creditLoading: false });\n                if (self.isNotEminEczanesi()) {\n                    self.sign();\n                } else {\n                    self.manualPdfSign();\n                }\n            }).catch(function (error) {\n                showAxiosError(error);\n                self.setState({alert: null,creditLoading: false});\n        });\n    }\n\n    hasGrant(grant) {\n        return this.props.hasGrant(grant);\n    }\n\n    componentDidMount() {\n        this.axios = Axios.create({\n            baseURL: \"http://127.0.0.1:9999\"\n        });\n        if ((this.props.match && this.props.match.params.formSessionId)) {\n            this.setState({formSessionId: this.props.match.params.formSessionId});\n        } else {\n            this.props.history.push({pathname: `/${this.props.peykName}/formsessionlist`});\n        }\n\n        window.addEventListener(\"resize\", this.updateDimensions);\n\n        this.isHsmOwner();\n        this.isKepOwner();\n        this.getList();\n        this.getToBeSentList();\n        this.readTitleAll();\n        this.readSmsTemplate();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    updateDimensions = () => {\n        this.setState({width: window.innerWidth});\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.completed && this.state.signError) {\n            this.setState({pageState: 40});\n        } else if (this.state.timer === 1 && !this.state.timerStarted &&\n            this.state.completed && this.state.signedDocumentCount === this.state.progressLength) {\n            setInterval(() => {\n                this.setState(prevState => ({timer: prevState.timer - 1}))\n            }, 1000);\n            this.setState({timerStarted: true});\n        } else if (this.state.timer === 0) {\n            this.setState({backToTheFuture: true});\n            if (this.state.formSessionId) {\n                if (this.state.formState) {\n                    if (this.state.backToTheFuture) {\n                        if (!this.state.reloadCalled) {\n                            this.props.reload(true, \"sidebar\");\n                            this.setState({ reloadCalled: true });\n                        }\n                    }\n                }else{\n                    this.props.history.push({\n                        pathname: `/${this.props.peykName}/formsend/` + this.state.formSessionId,\n                        previousPage: \"formsession\"\n                    });\n                }\n            } else {\n                this.props.history.push({pathname: `/${this.props.peykName}/formsessionlist`});\n            }\n        }\n        if (this.state.backToTheFuture) {\n            if (!this.state.reloadCalled) {\n                this.props.reload(true, \"sidebar\");\n                this.setState({ reloadCalled: true });\n            }\n        }\n    }\n\n    isKepOwner() {\n        this.setState({isKepOwner: this.props.isKepOwner});\n    }\n\n    isHsmOwner() {\n        requestK({url: 'signer/hsm/hasAccess', method: \"get\"})\n            .then(response => this.setState({isHsmOwner: response.data}))\n            .catch(() => this.setState({isHsmOwner: false}));\n    }\n\n    readTitleAll = () => {\n        let self = this;\n        let params = {\n            url: `/employeecustom/readTitleAll`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({titleList: response.data});\n            })\n            .catch(function (error) {\n            });\n    };\n\n    getList() {\n        let self = this;\n        let params = {\n            url: `/formsession/getList`,\n            method: \"post\",\n            data: {\n                formSessionId: parseInt(self.props.match.params.formSessionId)\n            }\n        };\n        self.setState({loading: true});\n        requestK(params)\n            .then(function (response) {\n                let {formSession, kepAccountList} = response.data;\n                self.setState({\n                    formSession,\n                    kepAccountList,\n                    formTemplate: formSession.formTemplate,\n                    mimeTitle: (formSession.mimeTitle != null && formSession.mimeTitle.length > 0) ? formSession.mimeTitle : formSession.formTemplate.formName && formSession.formTemplate.formName.replace(\" Örneği\", \"\"),\n                    mimeBody: (formSession.mimeBody != null && formSession.mimeBody.length > 0) ? formSession.mimeBody : formSession.formTemplate.mimeBody,\n                    smsBody: (formSession.smsBody != null && formSession.smsBody.length > 0) ? formSession.smsBody : self.state.smsBody,\n                    formParamList: formSession.formParamList && JSON.parse(formSession.formParamList),\n                    extInputLabelList: formSession.formTemplate.formParams && JSON.parse(formSession.formTemplate.formParams).externalList\n                });\n                self.setState({loading: false}, () => {\n                    self.sessionAndEmployeeListChecker(self.props.match.params.formSessionId)\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({loading: false});\n        });\n    }\n\n    getToBeSentList() {\n        let self = this;\n        let params = {\n            url: `/formsession/getToBeSentList`,\n            method: \"post\",\n            data: parseInt(self.props.match.params.formSessionId)\n        };\n        self.setState({loading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    toBeSentList: response.data ? response.data : [],\n                    loading: false\n                });\n                self.isDisabled();\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({loading: false});\n        });\n    }\n\n    isDisabled() {\n        let self = this;\n        if (this.state.disabledBtn || this.state.loading) {\n            self.setState({formInteractionInProgress: true})\n        }\n        if (this.state.toBeSentList.length > 0) {\n            let formIds = this.state.toBeSentList;\n            let params = {\n                url: `/form/checkFormStates`,\n                method: \"post\",\n                data: formIds\n            };\n            requestK(params)\n                .then(function (response) {\n                    if(response.data === true){\n                        self.setState({checkFormState: true})\n                    }else{\n                        self.setState({checkFormState: false})\n                    }\n                })\n                .catch(function (error) {\n                    showAxiosError(error);\n                });\n        }\n        return false;\n    }\n\n    sessionAndEmployeeListChecker = (sessionId) => {\n        let self = this;\n        let params = {\n            url: `/employee/sessionChecker`,\n            method: \"post\",\n            data:\n                {\n                    \"sessionId\": sessionId,\n                    \"type\": \"form\"\n                },\n            timeout: 180000\n        };\n        requestK(params)\n            .then(function (response) {\n                if (typeof response.data !== \"string\") {\n                    self.setState({\n                        unloadedEmployeesLength: response.data\n                    });\n                }\n            })\n            .catch(function (error) {\n            });\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/form/readAllFormBySession?formSessionId=' + parseInt(self.props.match.params.formSessionId) +\n                '&showOnlySents=' + self.state.showOnlySents +\n                '&page=' + page + '&size=' + size + searchQuery + sortStr,\n            method: \"get\"\n        };\n        self.setState({tableLoading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        requestK(params)\n            .then(function (response) {\n                if (response.data && response.data.page && response.data.page.content.length && response.data.page.content[0].formType.category === \"ŞABLONSUZ\") {\n                    self.setState({isNotEditable: true});\n                }\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: response.data && response.data.page && response.data.page.totalElements,\n                    content: response.data && response.data.page && response.data.page.content,\n                    tableLoading: false,\n                    searching: false,\n                    send: response.data && response.data.send\n                });\n            }).catch(function (error) {\n            self.setState({tableLoading: false, searching: false});\n            showAxiosError(error);\n        });\n    }\n\n    preview(form) {\n        let self = this;\n        let params = {\n            url: `/form/previewFormContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: form.id\n        };\n        self.setState({mediaModal: true, temporaryRow: form, showDownloadButton: true});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                let base64Data = \"\";\n                if (blob != undefined) {\n                    let reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = function () {\n                        base64Data = reader.result;\n                        self.setState({url: base64Data});\n                    }\n                }\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({mediaModal: false});\n        });\n    }\n\n    downloadContent(row, index) {\n        let self = this;\n        let params = {\n            url: `/form/previewFormContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({disabledDownloadBtn: true, selectedIndex: index});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                var link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                let createdAt = !!row.createdAt && row.createdAt.toString().substring(0, row.createdAt.indexOf(\"T\"));\n                let employeeName = (row.employee !== undefined && row.employee !== null) ? row.employee.name + \"_\" + row.employee.surname : \"\";\n                let randomNum = Math.floor(Math.random() * 100000);\n                let fileName = \"Form_\" +employeeName+ \"_\" +createdAt + \"_\" + randomNum +\".pdf\";\n                link.download = fileName;\n                document.body.appendChild(link);\n                if (row.timeStamp != null && row.timeStamp != \"\") {\n                    let formTimeStamp = new Blob([base64_arraybuffer.decode(row.timeStamp)], {type: 'application/octet-stream'});\n                    let linkTs = document.createElement('a');\n                    linkTs.href = window.URL.createObjectURL(formTimeStamp);\n                    linkTs.download = fileName + \".zd\";\n                    document.body.appendChild(linkTs);\n                    linkTs.click();\n                }\n                link.click();\n                self.setState({disabledDownloadBtn: false});\n                self.setState({loading: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDownloadBtn: false, title: null});\n        });\n    }\n\n\n    setMediaViewer() {\n        this.setState({url: null, mediaModal: false});\n    }\n\n    sign() {\n        if (this.state.isKepOwner) {\n            this.mimeSign();\n        } else {\n            if (this.state.isHsmOwner) {\n                this.hsmSign();\n            } else {\n                this.mailPdfSign();\n            }\n        }\n    }\n\n    mimeSign() {\n        let sendList = this.state.toBeSentList;\n        if (sendList && sendList.length > 0) {\n            this.props.history.push({\n                pathname: `/${this.props.peykName}/formmimesign`,\n                formSessionId: this.state.formSessionId,\n                kepAccountList: this.state.kepAccountList,\n                mimeTitle: this.state.mimeTitle,\n                mimeBody: this.state.mimeBody\n            });\n        } else {\n            this.showAlreadySentMessage();\n        }\n    }\n    updateMailInfo() {\n        let self = this;\n        let params = {\n            url: `/signer/writeFormMimeInfo`,\n            method: \"post\",\n            data: {\n                formSessionId: parseInt(this.state.formSessionId),\n                kepAccountId: self.state.kepAccountId && parseInt(self.state.kepAccountId),\n                title: self.state.mimeTitle,\n                body: self.state.mimeBody,\n                smsBody: self.state.smsBody\n            }\n        };\n        self.setState({pageState: 10, alert: null, disableButton: true});\n        requestK(params)\n            .then(function (response) {\n                self.updatePdfCertificates();\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({pageState: 40, disableButton: false});\n        });\n    }\n\n    timerStatus(status){\n        this.props.onTimerStatus(status);\n    };\n\n    updatePdfCertificates() {\n        let self = this;\n        let params = {\n            url: `/signer/createFormPdfSignedInfoList`,\n            method: \"post\",\n            data: {\n                formSessionId: parseInt(self.state.formSessionId),\n                hsmType: self.state.pdfCertificate.hsmType,\n                certificate: self.state.pdfCertificate.value,\n                certificateKeyId: self.state.pdfCertificate.keyId,\n                pdfCertificate:  JSON.stringify(self.state.pdfCertificate)\n            },\n            timeout: 9600000\n        };\n        this.setState({pageState: 20, alert: null});\n        this.timerStatus(true);\n        requestK(params)\n            .then(function (response) {\n                self.setState({signedInfoList: response.data});\n                self.signPdf();\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({pageState: 40, disableButton: false});\n            this.timerStatus(false);\n        });\n    }\n    async signPdf() {\n        let signedDocument = [];\n        this.setState({\n            progressLength: this.state.signedInfoList.length,\n            pageState: 30\n        });\n        try {\n            for (const element of this.state.signedInfoList) {\n                this.setState({pdfName: element.pdfName});\n                const response = await this.axios.post(\"/signature/signedinfo?hsmtype=\" + element.hsmType, {\n                    base64: true,\n                    pin: this.state.pin,\n                    signedInfo: element.signedInfo,\n                    certificate: {\n                        keyId: element.certificateKeyId\n                    }\n                });\n                signedDocument.push({\n                    id: element.id,\n                    signature: response.data.signedDocument\n                });\n                await this.writeSignedForm(signedDocument);\n                signedDocument = [];\n                this.setState({\n                    loading: false,\n                    completed: true,\n                    formState:true\n                });\n                this.timerStatus(false);\n            }\n        } catch (error) {\n            if (error.response && error.response.status === 401) {\n                this.setState({\n                    alert: (\n                        <SweetAlert info\n                                    confirmBtnText=\"Tamam\"\n                                    confirmBtnBsStyle=\"warning\"\n                                    title=\"UYARI\"\n                                    onConfirm={() => {\n                                        this.setState({alert: null});\n                                        window.location = \"/accounting/login\";\n                                    }}\n                        >\n                            Peyk sunucularına erişim esnasindaki bir hatadan dolayi İmza süreci tamamlanamadi. Lütfen tekrar login olup kalan imzalama islemine devam ediniz.\n                        </SweetAlert>\n                    )\n                });\n                return;\n            }else{\n                this.setState({\n                    loading: false,\n                    completed: false,\n                    pageState: 0,\n                    disableButton: false,\n                    alert: <HsmErrorAlert error={error} onConfirm={() => this.setState({alert: null})}/>\n                });\n                this.timerStatus(false);\n            }\n        }\n    }\n\n\n    async writeSignedForm(signedDocument) {\n        try {\n            let params = {\n                url: `/signer/writeFormPdfSignature`,\n                method: \"post\",\n                data: signedDocument,\n                timeout: 9600000\n            };\n            await requestK(params);\n            this.setState((prevState) => ({\n                signedDocumentCount: prevState.signedDocumentCount + 1\n            }));\n        } catch (error) {\n            if (error.response && error.response.status === 401) {\n                throw error;\n            } else {\n                showAxiosError(error);\n                this.setState({pageState: 40, disableButton: false});\n                this.timerStatus(false);\n            }\n        }\n    }\n    updateMimeInfo() {\n        let self = this;\n        let params = {\n            url: `/signer/writeFormMimeInfo`,\n            method: \"post\",\n            data: {\n                formSessionId: parseInt(this.state.formSessionId),\n                title: self.state.mimeTitle,\n                body: self.state.mimeBody,\n                smsBody: self.state.smsBody\n            },\n            timeout: 9600000\n        };\n        self.setState({pageStatus: 10, alert: null, disableButton: true});\n        requestK(params)\n            .then(function (response) {\n                    self.signDocuments()\n            })\n            .catch(function (error) {\n                showAxiosError(error);\n                self.setState({pageStatus: 40, disableButton: false});\n            });\n    }\n    signDocuments() {\n        let sendList = this.state.toBeSentList;\n        this.setState({\n            progressLength: sendList.length,\n            loading: true,\n            pageStatus: 30\n        });\n        this.timerStatus(true);\n        requestK({\n            url: `/signer/hsm-sign-form-list`,\n            method: \"post\",\n            data: sendList\n        }).then((response) => {\n            Alert.success(response.data);\n            this.stateMap[60].label = response.data;\n            this.setState({\n                completed: true,\n                pageStatus: 60,\n                send: true\n            });\n            setInterval(() => {\n                this.setState({backToTheFuture: true,loading: false})\n            }, 3500);\n        }).catch(error => {\n            this.setState({\n                loading: false,\n                completed: true,\n                pageStatus: 40,\n                disableButton: false,\n                alert: <HsmErrorAlert error={error} onConfirm={() => this.setState({alert: null})}/>\n            });\n        });\n        this.timerStatus(false);\n    }\n    hsmSign() {\n        let sendList = this.state.toBeSentList;\n        if (sendList && sendList.length > 0) {\n            if (this.isNoTemplateValid()) {\n                this.updateMimeInfo();\n            }\n        }\n        else {\n            this.showAlreadySentMessage();\n        }\n    }\n\n    kepPdfSign() {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/formsign`,\n            formSessionId: this.state.formSessionId,\n            selectedIdList: this.state.selection\n        });\n    }\n\n    mailPdfSign() {\n        let sendList = this.state.toBeSentList;\n        if (sendList && sendList.length > 0) {\n            if (this.isNoTemplateValid()) {\n                this.updateMailInfo();\n            }\n        }\n        else {\n            this.showAlreadySentMessage();\n        }\n    }\n\n    manualPdfSign() {\n        let sendList = this.state.toBeSentList;\n        if (sendList && sendList.length > 0) {\n            this.props.history.push({\n                pathname: `/${this.props.peykName}/formsign/manual`,\n                formSessionId: this.state.formSessionId,\n                mimeTitle: this.state.mimeTitle,\n                mimeBody: this.state.mimeBody\n            });\n        } else {\n            this.showAlreadySentMessage();\n        }\n    }\n\n    omitSentForms() {\n        let list = [];\n        this.state.content.map(e => {\n            if (stateCompare(e.state, \"<\", \"MIME_SIGNED\")) {\n                list.push(e.id)\n            }\n        });\n        return list;\n    }\n\n    showAlreadySentMessage() {\n        Alert.info(\"Tüm formlar zaten imzalı ve gönderilmiş durumundadır.\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n        });\n    }\n\n    editReceiver(row) {\n        this.setState({\n            employeeId: row.employee ? row.employee.id : null,\n            tckn: (row.employee && row.employee.tckn) ? row.employee.tckn : null,\n            receiverModal: true\n        })\n    }\n\n    deleteSession() {\n        let self = this;\n        let params = {\n            url: `/formsession/deleteFormSession`,\n            method: \"post\",\n            data: this.state.formSessionId\n        };\n        self.setState({disabledBtn: true});\n        requestK(params)\n            .then(function (response) {\n                let message = response.data;\n                Alert.success(message, {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                self.setState({\n                    selected: null,\n                    manual: true,\n                    disabledBtn: false,\n                    alert: null\n                });\n                if(response.data !== \"Silme işlemi başarılı şekilde gerçekleşti.\"){\n                    self.props.history.push(`/${self.props.peykName}/formsessionlist`);\n                }\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledBtn: false, alert: null});\n        });\n    }\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    if (DocumentState[item.state].value >= 300 && DocumentState[item.state].value < 630) {\n                        selection.push(item[id]);\n                    }\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                if (DocumentState[row.state].value >= 300 && DocumentState[row.state].value < 630) {\n                    selection.push(row[id]);\n                }\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    deleteRow(item) {\n        let self = this;\n        let params = {\n            url: `/form/deleteForm`,\n            method: \"post\",\n            data: item.id\n        };\n        self.setState({disabledDeleteBtn: true});\n        requestK(params)\n            .then(function () {\n                self.setState({\n                    manual: true,\n                    alert: null,\n                    disabledDeleteBtn: false\n                });\n                Alert.success(\"Form silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                self.props.reload(true, \"sidebar\")\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDeleteBtn: false});\n        });\n    }\n\n    downloadExcel(sessionId) {\n        let self = this;\n        let params = {\n            url: `/employee/downloadUnloadedExcel`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: {\n                \"sessionId\": sessionId,\n                \"type\": \"form\"\n            }\n        };\n        self.setState({unloadedLoading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({alert: null, unloadedLoading: false});\n                let link = document.createElement('a');\n                link.href = window.URL.createObjectURL(new Blob([response.data], {type: \"application/vnd.ms-excel\"}));\n                let date = new Date();\n                link.download = \"Form_Gonderilmeyen_Calisanlar_\" +\n                    date.getFullYear() + \"-\" +\n                    date.getMonth() + \"-\" +\n                    date.getDate() + \"_\" +\n                    date.getHours() + \"-\" +\n                    date.getMinutes() + \"-\" +\n                    date.getSeconds() + \".xlsx\";\n                link.click();\n            })\n            .catch(function (error) {\n                if (error.response === undefined) {\n                    showAxiosError({message: \"Şu an işleminiz gerçekleştirilemiyor.\"});\n                }\n                self.setState({alert: null, unloadedLoading: false});\n            });\n    }\n\n    renderEnteredSections(){\n        return <>\n            <div>\n                {this.state.formParamList &&\n                    <div className=\"row col-sm-12\">\n                        <label style={{\n                            textDecoration: 'underline',\n                            fontWeight: 'bold',\n                            display: 'block',\n                            textAlign: 'center',\n                            margin: '10px 0px 5px 0px'\n                        }}>\n                            Giriş Yapılan Veriler:\n                        </label>\n                    </div>}\n                {this.state.formParamList && Object.keys(this.state.formParamList).length > 0 && this.renderInputList()}\n            </div>\n        </>\n    }\n    readSmsTemplate = () => {\n        let self = this;\n        let params = {\n            url: `/signer/readFormSmsTemplateInfo`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({smsBody: response.data})\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n    isNoTemplateValid = () => {\n        if (this.state.mimeTitle.trim() === \"\") {\n            Alert.error(\"E-Posta İleti Konusu alanı boş bırakılamaz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            this.setState({alert: null});\n            return false;\n        } else if (this.state.mimeBody.trim() === \"\") {\n            Alert.error(\"E-Posta İleti İçeriği alanı boş bırakılamaz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            this.setState({alert: null});\n            return false;\n        } else if (this.state.smsBody.trim() === \"\") {\n            Alert.error(\"SMS İleti İçeriği alanı boş bırakılamaz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            this.setState({alert: null});\n            return false;\n        }else{\n            return true;\n        }\n    }\n    renderState() {\n        let stateMap = this.stateMap[this.state.pageStatus];\n\n        return <div className=\"row\" style={{marginBottom: \"15px\"}}>\n            <Col sm={12} md='6'>\n                <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n                    {stateMap.wait && <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={24} width={24}/>}\n                </div>\n                <div style={{\n                    display: \"inline-block\", marginRight: \"8px\", position: \"relative\", top: \"-6px\",\n                    color: stateMap.danger === true ? \"trueColor\" : \"falseColor\"\n                }}>\n                    {stateMap.label}\n                </div>\n            </Col>\n\n            <Col sm='12' md='6'>\n                { !this.state.isHsmOwner &&\n                <div className='explanationOfSigning' style={{lineHeight: '1.2'}}>\n                    <i className=\"fas fa-exclamation-triangle\" id=\"exclamationIcon\" style={{paddingRight: '10px'}}/>\n                    <span style={{opacity: '0.9', fontSize: '12px', fontWeight: '500'}}>İmzalama süresince lütfen ekranı kapatmayınız ve bilgisayarınızın ekran koruyucusunun kapalı olduğundan emin olun.</span>\n                </div>}\n            </Col>\n        </div>\n    }\n\n    renderMimeInputs() {\n        return <Container>\n            <Row>\n                <Col sm={3} style={{top: '5px'}}>\n                    E-Posta İleti Konusu:\n                </Col>\n                <Col sm={8}>\n                    <Input type=\"textarea\" rows={3} value={this.state.mimeTitle} disabled={this.state.send ? true : false}\n                           style={{height: 'auto', border: '1px solid #E3E3E3', marginTop: '2px', padding: '3px 3px'}}\n                           onChange={(e) => this.setState({mimeTitle: e.target.value})}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={3} style={{top: '25px'}}>\n                    E-Posta İleti İçeriği:\n                </Col>\n                <Col sm={8}>\n                    <Input type=\"textarea\" rows={6} value={this.state.mimeBody} disabled={this.state.send ? true : false}\n                           style={{height: 'auto', border: '1px solid #E3E3E3', marginTop: '2px', padding: '3px 3px'}}\n                           onChange={(e) => this.setState({mimeBody: e.target.value})}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={3} style={{top: '5px'}}>\n                    SMS İçerik\n                </Col>\n                <Col sm={8}>\n                    <Input type=\"textarea\" rows={6} value={this.state.smsBody} disabled={this.state.send ? true : false}\n                           style={{height: 'auto', border: '1px solid #E3E3E3', marginTop: '2px', padding: '3px 3px'}}\n                           onChange={(e) => this.setState({smsBody: e.target.value})}/>\n                </Col>\n            </Row>\n        </Container>\n    }\n\n    renderFormTemplateInfo() {\n        return (\n            <div className=\"col-sm-8\" style={{paddingLeft: '20px'}}>\n                <div className=\"row\">\n                    <div className=\"col-sm-3\"><label>Form Türü:</label></div>\n                    <div className=\"col-sm-9\">\n                        <label style={{fontStyle: 'italic'}}>\n                            {(this.state.formTemplate && this.state.formTemplate.formType.category) ? this.state.formTemplate.formType.category : \"\"}\n                        </label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-3\"><label>Form Adı:</label></div>\n                    <div className=\"col-sm-9\">\n                        <label style={{fontStyle: 'italic', whiteSpace: 'pre' }}>\n                            {(this.state.formTemplate && this.state.formTemplate.formName) ? this.state.formTemplate.formName : \"\"}\n                        </label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-3\"><label>Son Güncellenme Tarihi:</label></div>\n                    <div className=\"col-sm-9\">\n                        <label style={{fontStyle: 'italic'}}>\n                            {(this.state.formTemplate && this.state.formTemplate.updatedAt) ? moment(this.state.formTemplate.updatedAt.replace(\"T\", \" \").split('.')[0]).format(\"DD-MM-YYYY HH:mm:ss\") : \"\"}\n                        </label>\n                    </div>\n                </div>\n                {this.renderMimeInputs()}\n            </div>\n        );\n    }\n\n    renderFormInputInfo() {\n        return ( <>\n            <div className=\"col-sm-4\" style={{padding: '0 0 0 0'}}>\n                <div className=\"row col-sm-12\">\n                    <label>İşlem Yapısı:&nbsp;&nbsp;</label>\n                    <label>{this.state.formTemplate &&\n                        <span className=\"isAnswerable\"\n                              style={this.state.formTemplate.isAnswerable === 1 ? {\n                                  color: 'blue',\n                                  fontWeigth: 'bold'\n                              } : {color: 'gray'}}>\n                        {this.state.formTemplate.isAnswerable === 1 ? \"Cevap Zorunlu\" : \"Sadece Onay\"}\n            </span>}</label>\n                </div>\n                <div className=\"row col-sm-12\">\n                    <label>Form Sayısı:&nbsp;&nbsp;</label>\n                    <label\n                        style={{fontWeight: 'bold'}}>{this.state.formSession && this.state.formSession.formCount}</label>\n                </div>\n                {this.state.unloadedEmployeesLength > 0 &&\n                    <div className=\"row col-sm-12\">\n                        <label>Form Gönderilmeyen Çalışan Sayısı:&nbsp;&nbsp;</label>\n                        <label style={{fontWeight: 'bold', color: \"red\"}}>{this.state.unloadedEmployeesLength}</label>\n                    </div>}\n                {this.state.unloadedEmployeesLength > 0 &&\n                    <button id='indirBtn' className=\"btn-outline-info\"\n                            disabled={this.state.loading}\n                            onClick={() => this.downloadExcel(this.state.formSession.id)}\n                            title=\"Form Gönderilmeyen çalışan listesini indir\">\n                        İndir\n                    </button>\n                }\n                {!!this.state.formSession && !!this.state.formSession.error &&\n                    <div className=\"row col-sm-12\">\n                        <label style={{fontWeight: 'bold', color: 'red'}}>Hata Durumu:&nbsp;&nbsp;</label>\n                        <label style={{\n                            fontWeight: 'bold',\n                            color: 'red'\n                        }}>{this.state.formSession && this.state.formSession.error}</label>\n                    </div>}\n            </div>\n                <div style={{paddingLeft: '20px'}}>\n                    {this.renderEnteredSections()}\n                </div>\n            </>\n        );\n    }\n\n    renderInputList() {\n        let extInputLabelList = this.state.extInputLabelList;\n        return <Row>\n            {extInputLabelList && extInputLabelList.map(input =>\n                <Col col sm={12} key={input}>\n                    <Label style={{fontWeight: 'bold'}}>{input.includes('span') ? input.replace(/span|<|>|b|[/]/g, \"\") + \":\" : input + \" :\"}</Label>\n                    <Label>\n                        {this.state.formParamList ? this.state.formParamList[input] : \"\"}\n                    </Label>\n                    <hr style={{ height: '3px', backgroundColor: '#E3E3E3', margin: '20px 0' }} />\n                </Col>\n            )}\n        </Row>\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true});\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback = (data) => {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    };\n\n    showWarning(text, pretext = \"Seçim Yapılmadı\") {\n        this.setState({\n            alert: (\n                <SweetAlert warning\n                            confirmBtnText=\"Tamam\"\n                            confirmBtnBsStyle=\"warning\"\n                            title={pretext}\n                            onConfirm={() => this.setState({alert: null})}>\n                    {text}\n                </SweetAlert>)\n        });\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let locale = this.state.locale;\n        let replaceStep = {\n            target: 'button.zocial.Onay',\n            content: \"İmzalama ve gönderme işlemlerinizi buradan yapabilirsiniz\",\n            placement: \"auto\",\n        };\n\n        if (!this.state.send) {\n            steps.splice(1, 1, replaceStep);\n        }\n\n        let columnList = [\n            {\n                accessor: [\n                    {Header: \"Adı\", accessor: \"employee.name\"},\n                    {Header: \"Soyadı\", accessor: \"employee.surname\"}\n                ],\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.employee && row.employee.name}\n                        <br/>\n                        {row.employee && row.employee.surname}\n                    </div>\n                )\n            },\n            {\n                accessor: [\n                    {Header: \"Departman\", accessor: \"employee.department.name\"},\n                    {Header: \"Görev\", accessor: \"employee.jobTitle\"}\n                ],\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        <TextOverFlowTooltip key={row.employee.department?.id} text={row.employee.department?.name}\n                                             maxLength={14}/>\n                        <br/>\n                        <TextOverFlowTooltip key={row.employee.id} text={row.employee.jobTitle} maxLength={14}/>\n                    </div>\n                )\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"employee.tckn\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.employee && <span className=\"text-success\">{row.employee.tckn}</span>}\n                    </div>\n                )\n            },\n            {\n                Header: \"Onay Tipi\",\n                accessor: \"formTemplate_isAnswerable\",\n                Cell: row => (\n                    <div style={{ margin: 0 }}>\n            <span className=\"isAnswerable\">\n                {(\n                    (row.conditionalApproveAllowed && row.isAnswerable && !row.declineAllowed) ? <span style={{ color: '#08c21d' }}>Cevap Zorunlu</span> :\n                        (row.conditionalApproveAllowed && row.isAnswerable && row.declineAllowed) ? <span style={{ color: '#08c21d' }}>Cevap Zorunlu - Reddedilebilir</span> :\n                            (!row.conditionalApproveAllowed && row.isAnswerable && !row.declineAllowed) ? <span style={{ color: '#08c21d' }}>Cevap Zorunlu</span> :\n                                (!row.conditionalApproveAllowed && row.isAnswerable && row.declineAllowed) ? <span style={{ color: '#08c21d' }}>Cevap Zorunlu - Reddedilebilir</span> :\n                                    (row.conditionalApproveAllowed && !row.isAnswerable && !row.declineAllowed) ? <span style={{ color: '#007acc' }}>Şartlı Onaylanabilir</span> :\n                                        (row.conditionalApproveAllowed && !row.isAnswerable && row.declineAllowed) ? <span style={{ color: '#007acc' }}>Şartlı Onaylanabilir - Reddedilebilir</span> :\n                                            (!row.conditionalApproveAllowed && !row.isAnswerable && row.declineAllowed) ? <span style={{ color: '#408f57' }}>Reddedilebilir</span> :\n                                                null\n                )}\n            </span>\n                    </div>\n                )\n            },\n            {\n                Header: \"Sayfa Sayısı\",\n                accessor: \"pageCount\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.pageCount}\n                    </div>\n                )\n            },\n            {\n                Header: \"Uyarı Sayısı\",\n                accessor: \"warningCount\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.warningCount}\n                    </div>\n                )\n            },\n            {\n                Header: \"Form Durumu\",\n                accessor: \"state\",\n                width: '200px',\n                Cell: row => (\n                    <div>\n                        {row.state &&\n                            <span\n                                className={\"text-\" + DocumentState[row.state].messageType}>{DocumentState[row.state].message}</span>}\n                        {row.state && DocumentState[row.state].value === 601 && <br/>}\n                        {row.state && DocumentState[row.state].value === 601 &&\n                            <span className={\"text-\" + DocumentState[row.state].messageType}>\n                            {\"Lütfen, Onay akışı şablonunuz ile seçilen çalışan bilgilerinin uyumluluğunu kontrol ediniz.\"}\n                        </span>}\n                    </div>\n                )\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                width: '104px',\n                Cell: (row, index) => (\n                    <div className=\"btn-group\" style={{padding: 0, margin: 0}}>\n                        <div className=\"dropdown\" style={{padding: 0, margin: 0}}>\n                            <button className=\"MenuBtn2 listt btn btn-default\"\n                                    style={{WebkitTextFillColor: 'white'}}\n                                    type=\"button\" data-toggle=\"dropdown\">Seçİnİz\n                            </button>\n                            <div className=\"dropdown-menu\" aria-labelledby={\"dropdownMenuButton_\" + row.id}>\n                                <a className=\"dropdown-item\"\n                                   onClick={() => this.preview(row)}>\n                                    <i className=\"fa fa-search\"/>Form Görüntüle\n                                </a>\n                                {!(this.state.disabledDownloadBtn && index === this.state.selectedIndex) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.downloadContent(row)}>\n                                        <i className=\"fa fa-download\"/>Form İndir\n                                    </a>}\n\n                                {!(this.state.disabledDownloadBtn && index === this.state.selectedIndex) &&\n                                    row.formType && !!row.formType.category &&\n                                    (DocumentState[row.state].value === 610 || (DocumentState[row.state].value >= 630 && DocumentState[row.state].value <= 660)) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => downloadApproveDocument(this, row, index, row.formType.category)}>\n                                        <i className=\"fa fa-download\"/>Onay Belgesini İndir\n                                    </a>}\n                                {!this.state.disabledDownloadBtn && !this.hasGrant(ISG_FORM_SEND) && !this.hasGrant(HEALTH_FORM_SEND) && !this.hasGrant(ZIMMET_FORM_SEND) && !this.hasGrant(KVKK_FORM_SEND) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.editReceiver(row)}>\n                                        <i className=\"fa fa-at\"/>Alıcı Düzenle\n                                    </a>}\n\n                                {stateCompare(row.state, \"<\", \"PDF_SIGNED\") &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() =>\n                                           this.setState({\n                                               alert: (\n                                                   <SweetAlert showCancel warning\n                                                               disabled={this.state.disabledDeleteBtn}\n                                                               confirmBtnText=\"Evet\"\n                                                               cancelBtnText=\"Hayır\"\n                                                               confirmBtnBsStyle=\"danger\"\n                                                               cancelBtnBsStyle=\"default\"\n                                                               title=\"Emin misiniz?\"\n                                                               onConfirm={() => {\n                                                                   this.deleteRow(row)\n                                                               }}\n                                                               onCancel={() => this.setState({alert: null})}>\n                                                       Form silinecek.\n                                                   </SweetAlert>)\n                                           })\n                                       }>\n                                        <i className=\"fa fa-close\"/>Sil\n                                    </a>\n                                }\n\n                                {row.employee && row.employee.name &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.setState({stateDetail: row})}>\n                                        <i className=\"fa fa-info-circle\"/>Durum Detayı\n                                    </a>}\n                                {(stateCompare(row.state, \"=\", \"INSERTED_TO_FLOW\") || stateCompare(row.state, \"=\", \"FLOW_TIMEOUT\")) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() =>\n                                           this.setState({\n                                               alert: (\n                                                   <SweetAlert showCancel warning\n                                                               disabled={this.state.disabledCancelSendingBtn}\n                                                               confirmBtnText=\"Evet\"\n                                                               cancelBtnText=\"Hayır\"\n                                                               confirmBtnBsStyle=\"danger\"\n                                                               cancelBtnBsStyle=\"default\"\n                                                               title=\"Emin misiniz?\"\n                                                               onConfirm={() => {\n                                                                   this.cancelSendingForm(row)\n                                                               }}\n                                                               onCancel={() => this.setState({alert: null})}>\n                                                       Form Gönderimi İptal Edilecek.\n                                                   </SweetAlert>)\n                                           })\n                                       }>\n                                        <i className=\"fa-solid fa-rectangle-xmark\"></i>Gönderimi İptal Et\n                                    </a>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        ];\n        let columns = renewListForPrivileges(this, columnList, \"accessor\", this.state.isKepOwner);\n\n        return <div className=\"row baseBackground\">\n            {this.state.joyrideActive &&\n                <Joyride\n                    disableBeacon={false}\n                    autoStart\n                    locale={locale}\n                    steps={steps}\n                    continuous={true}\n                    run={this.state.shouldRun}\n                    scrollToFirstStep={true}\n                    showProgress={true}\n                    showSkipButton={true}\n                    scrollToSteps={true}\n                    disableCloseOnEsc={true}\n                    disableOverlay={false}\n                    disableOverlayClicks={false}\n                    keyboardNavigation={true}\n                    hideBackButton={false}\n                    disableOverlayClose={true}\n                    callback={this.callback}\n                    holePadding={0}\n                    shouldRun={this.state.shouldRun}\n                    styles={{\n                        options: {\n                            zIndex: 100000,\n                            primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                        }\n                    }}/>\n            }\n\n            {(this.state.width > 1195) &&\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    {!this.state.send &&\n                        <>\n                            {((checkGrantToDisplay(this, FORM_SEND) || checkGrantToDisplay(this, HSM_AUTHORITY)) || checkGrantToDisplay(this,ISG_FORM_SEND) || checkGrantToDisplay(this,HEALTH_FORM_SEND) || checkGrantToDisplay(this,ZIMMET_FORM_SEND) || checkGrantToDisplay(this,KVKK_FORM_SEND)) &&\n                                <StickButton position=\"leftSide\" className=\"zocial Onay\"\n                                             style={{fontSize: 'x-small', backgroundColor: 'forestgreen'}}\n                                             label=\"İmzala & Gönder\" title=\"İmzala ve Gönder\"\n                                             disabled={this.state.disabledBtn || (!this.state.isHsmOwner && !this.state.pin)}\n                                             onClick={() => {\n                                                 if(!this.state.isHsmOwner )\n                                                     if (this.state.pdfCertificate && this.state.pdfCertificate.hsmType &&\n                                                         this.state.pdfCertificate.value && this.state.pdfCertificate.keyId)\n                                                         this.setState({\n                                                             alert: (\n                                                                 <SweetAlert showCancel warning\n                                                                             confirmBtnText=\"Evet\"\n                                                                             cancelBtnText=\"Hayır\"\n                                                                             confirmBtnBsStyle=\"success\"\n                                                                             cancelBtnBsStyle=\"default\"\n                                                                             title=\"Emin Misiniz?\"\n                                                                             onConfirm={() => this.checkCustomerSmsCreditAndSent()}\n                                                                             onCancel={() => this.setState({alert: null})}\n                                                                 >\n                                                                     Dokümanlar imzalanıp Tübitak zaman damgası ile mühürlenerek gönderilecektir.\n                                                                 </SweetAlert>\n                                                             )\n                                                         });\n                                                     else\n                                                         this.setState({\n                                                             alert: <HsmErrorAlert error={this.state.certError}\n                                                                                   onConfirm={() => this.setState({alert: null})}/>\n                                                         });\n                                                 else\n                                                     this.setState({\n                                                         alert: (\n                                                             <SweetAlert showCancel warning\n                                                                         confirmBtnText=\"Evet\"\n                                                                         cancelBtnText=\"Hayır\"\n                                                                         confirmBtnBsStyle=\"success\"\n                                                                         cancelBtnBsStyle=\"default\"\n                                                                         title=\"Emin Misiniz?\"\n                                                                         onConfirm={() => this.checkCustomerSmsCreditAndSent()}\n                                                                         onCancel={() => this.setState({alert: null})}\n                                                             >\n                                                                 Dokümanlar imzalanıp Tübitak zaman damgası ile mühürlenerek gönderilecektir.\n                                                             </SweetAlert>\n                                                         )\n                                                     });\n                                             }}/>}\n\n                        </>\n                    }\n                    {this.state.send &&\n                        <StickButton position=\"leftSide\" className=\"zocial Gonder\" style={{fontSize: 'x-small'}}\n                                     label=\"Uyarı Gönder\" title=\"Seçilecek Kişilere Uyarı Bildirisi Gönder\"\n                                     disabled={(this.state.disabledBtn && this.state.loading)}\n                                     onClick={() => {\n                                         {\n                                             this.props.history.push({\n                                                 pathname: `/${this.props.peykName}/formmimerepeat`,\n                                                 formSession: this.state.formSession,\n                                                 selectedIdList: this.state.selection,\n                                                 isKepOwner: this.state.isKepOwner\n                                             })\n                                         }\n\n                                     }}/>}\n                    <StickButton position=\"leftSide\" className=\"zocial Yenile\" style={{fontSize: 'x-small'}}\n                                 label=\"Sonuç Yenile\" title=\"Sonuç Yenile\"\n                                 disabled={this.state.disabledBtn}\n                                 onClick={() => {\n                                     this.props.reload(true, \"sidebar\")\n                                 }}/>\n                    {!this.state.send && !this.state.isNotEditable && this.state.formSession && (this.state.formSession.createdByWebservice == null || this.state.formSession.createdByWebservice == false) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Ayar\" style={{fontSize: 'x-small'}}\n                                     label=\"Düzenle\" title=\"Bilgileri Düzenle\"\n                                     disabled={ this.state.formInteractionInProgress || this.state.checkFormState }\n                                     onClick={() => {\n                                         this.props.history.push({\n                                             pathname: `/${this.props.peykName}/formsend/` + this.state.formSessionId,\n                                             previousPage: \"formsession\"\n                                         });\n                                     }}/>}\n                    {(!this.state.send || (this.state.formSession && !this.state.formSession.formCount)) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Sil\"\n                                     style={{fontSize: 'x-small', backgroundColor: 'indianred'}}\n                                     label=\"Form İşlemini Sil\" title=\"Form İşlemini Sil\"\n                                     onClick={e => {\n                                         {\n                                             (this.state.toBeSentList.length > 0 || (this.state.formSession && !this.state.formSession.formCount)) &&\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert showCancel warning\n                                                                 confirmBtnText=\"Evet\"\n                                                                 cancelBtnText=\"Hayır\"\n                                                                 confirmBtnBsStyle=\"danger\"\n                                                                 cancelBtnBsStyle=\"default\"\n                                                                 title=\"Emin misiniz?\"\n                                                                 onConfirm={this.deleteSession}\n                                                                 disabled={this.state.disabledBtn}\n                                                                 onCancel={() => this.setState({alert: null})}>\n                                                         Form işlemi içerisinde imzalanmış formlar silinemez sadece pdf oluşturuldu durumundaki formlar silinecektir. Eğer hepsi pdf oluşturuldu veya içerik boş ise açılmış form işlem kaydı silinecekdir.\n                                                     </SweetAlert>\n                                                 )\n                                             });\n                                         }\n\n                                         {\n                                             this.state.toBeSentList.length === 0 && (this.state.formSession && !!this.state.formSession.formCount) &&\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert danger\n                                                                 confirmBtnText=\"Tamam\"\n                                                                 confirmBtnBsStyle=\"danger\"\n                                                                 title=\"Hata\"\n                                                                 onConfirm={() => this.setState({alert: null})}>\n                                                         Gönderilmiş veya gönderilmekte olan ileti içeren form işlem\n                                                         kaydı\n                                                         silinemez.\n                                                     </SweetAlert>\n                                                 )\n                                             })\n                                         }\n                                     }}/>}\n\n                    <div className=\"helpButtonContainer\" position='rightSide'\n                         style={(!this.state.isKepOwner && !this.state.isHsmOwner) ?\n                             {position: \"relative\", top: '32%', right: \"-55em\"} :  // right: '-55em'\n                             {position: \"absolute\", top: '32%', right: '20%'}    //right: '-64em'\n                         }>\n                        <button className=\"helpButton\" onClick={() => {\n                            this.activateJoyride()\n                        }}>\n                            <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                            <i className=\"far fa-question-circle helpButtonIcon\"/>\n                        </button>\n                        {this.state.stop &&\n                            <div className=\"nav-item dropdown  videoIconContainer\"\n                                 style={{display: \"inline-block\", paddingRight: \"30px\"}}>\n                                <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                        aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                    <span className=\"tooltipText\">Yardimci Videolar</span>\n                                    <i className=\"fab fa-youtube videoIcon\"/>\n                                </button>\n                                <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                     aria-labelledby=\"videosLink\">\n                                    {\n                                        this.videos.map((video, i) =>\n                                            <a key={i} className=\"dropdown-item\"\n                                               onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                    }\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </Nav>\n            }\n\n            {(this.state.width <= 1195) &&\n                <NavBarKS className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    {!this.state.send &&\n                        <StickButton position=\"leftSide\" className=\"zocial Onay\"\n                                     style={{fontSize: 'x-small', backgroundColor: 'forestgreen'}}\n                                     label=\"İmzala & Gönder\" title=\"İmzala ve Gönder\"\n                                     disabled={this.state.disabledBtn}\n                                     onClick={() => {\n                                         this.sign()\n                                     }}/>}\n                    {!this.state.isKepOwner && !this.state.isHsmOwner && !this.state.send &&\n                        <StickButton position=\"leftSide\" className=\"zocial Onay\"\n                                     style={{fontSize: 'x-small', backgroundColor: 'forestgreen'}}\n                                     label=\"Manuel İmzala & Gönder\" title=\"Manuel İmzala ve Gönder\"\n                                     disabled={this.state.disabledBtn}\n                                     onClick={() => {\n                                         this.manualPdfSign()\n                                     }}/>}\n                    {this.state.send &&\n                        <StickButton position=\"leftSide\" className=\"zocial Gonder\" style={{fontSize: 'x-small'}}\n                                     label=\"Uyarı Gönder\" title=\"Seçilecek Kişilere Uyarı Bildirisi Gönder\"\n                                     disabled={(this.state.disabledBtn && this.state.loading)}\n                                     onClick={() => {\n                                         {\n                                             this.props.history.push({\n                                                 pathname: `/${this.props.peykName}/formmimerepeat`,\n                                                 formSession: this.state.formSession,\n                                                 selectedIdList: this.state.selection,\n                                                 isKepOwner: this.state.isKepOwner\n                                             })\n                                         }\n\n                                     }}/>}\n                    <StickButton position=\"leftSide\" className=\"zocial Yenile\" style={{fontSize: 'x-small'}}\n                                 label=\"Sonuç Yenile\" title=\"Sonuç Yenile\"\n                                 disabled={this.state.disabledBtn}\n                                 onClick={() => {\n                                     this.props.reload(true, \"sidebar\")\n                                 }}/>\n                    {!this.state.send && !this.state.isNotEditable &&\n                        <StickButton position=\"leftSide\" className=\"zocial Ayar\" style={{fontSize: 'x-small'}}\n                                     label=\"Düzenle\" title=\"Bilgileri Düzenle\"\n                                     disabled={this.state.disabledBtn || this.state.loading || stateCompare(this.state.content && this.state.content[0] && this.state.content[0].state, \">=\", \"MIME_SIGNED\")}\n                                     onClick={() => {\n                                         this.props.history.push({\n                                             pathname: `/${this.props.peykName}/formsend/` + this.state.formSessionId,\n                                             previousPage: \"formsession\"\n                                         });\n                                     }}/>}\n                    {!this.state.send &&\n                        <StickButton position=\"leftSide\" className=\"zocial Sil\"\n                                     style={{fontSize: 'x-small', backgroundColor: 'indianred'}}\n                                     label=\"Form İşlemini Sil\" title=\"Form İşlemini Sil\"\n                                     onClick={e => {\n                                         {\n                                             this.state.toBeSentList.length > 0 &&\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert showCancel warning\n                                                                 confirmBtnText=\"Evet\"\n                                                                 cancelBtnText=\"Hayır\"\n                                                                 confirmBtnBsStyle=\"danger\"\n                                                                 cancelBtnBsStyle=\"default\"\n                                                                 title=\"Emin misiniz?\"\n                                                                 onConfirm={this.deleteSession}\n                                                                 disabled={this.state.disabledBtn}\n                                                                 onCancel={() => this.setState({alert: null})}>\n                                                         Açılmış form işlem kaydı silinecek.\n                                                     </SweetAlert>\n                                                 )\n                                             });\n                                         }\n\n                                         {\n                                             this.state.toBeSentList.length === 0 &&\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert danger\n                                                                 confirmBtnText=\"Tamam\"\n                                                                 confirmBtnBsStyle=\"danger\"\n                                                                 title=\"Hata\"\n                                                                 onConfirm={() => this.setState({alert: null})}>\n                                                         Gönderilmiş veya gönderilmekte olan ileti içeren form işlem\n                                                         kaydı\n                                                         silinemez.\n                                                     </SweetAlert>\n                                                 )\n                                             })\n                                         }\n                                     }}/>}\n\n\n                    <div className=\"helpButtonContainer\" position='rightSide'\n                         style={{position: \"relative\", top: '60%', right: '-5em'}}>\n                        <button className=\"helpButton\" onClick={() => {\n                            this.activateJoyride()\n                        }}>\n                            <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                            <i className=\"far fa-question-circle helpButtonIcon\"/>\n                        </button>\n                        {this.state.stop &&\n                            <div className=\"nav-item dropdown  videoIconContainer\"\n                                 style={{display: \"inline-block\", paddingRight: \"30px\"}}>\n                                <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                        aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                    <span className=\"tooltipText\">Yardimci Videolar</span>\n                                    <i className=\"fab fa-youtube videoIcon\"/>\n                                </button>\n                                <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                     aria-labelledby=\"videosLink\">\n                                    {\n                                        this.videos.map((video, i) =>\n                                            <a key={i} className=\"dropdown-item\"\n                                               onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                    }\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </NavBarKS>\n            }\n\n            <div className=\"col-sm-12 satirBasi\">\n                <CardHeader>\n                    <CardTitle tag=\"h4\">\n                        Form İşlemi\n                    </CardTitle>\n                </CardHeader>\n                <CardBody>\n                    {this.state.formSessionId && !this.state.send && this.renderState()}\n                </CardBody>\n                <CardBody> { this.state.creditLoading &&\n                    <Col><CardTitle tag=\"h5\">\n                        SMS kontör bakiyeniz kontrol ediliyor&nbsp;\n                    </CardTitle>\n                        <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n                            <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={24} width={24}/>\n                        </div>\n                    </Col>}</CardBody>\n                <CardBody>\n                    <div className=\"FormRenk row\" style={{paddingLeft: '0px', right: '2px'}}>\n                        <div className=\"col-sm-12\">\n                            <label style={{\n                                fontWeight: 'bold',\n                                display: 'block',\n                                textAlign: 'center',\n                                margin: '0 20px 20px 0'\n                            }}>\n                                Form İşlem Kaydı Bilgileri\n                            </label>\n                        </div>\n                        {this.renderFormTemplateInfo()}\n                        {this.renderFormInputInfo()}\n                    </div>\n                </CardBody>\n                <CardBody>\n                    <Table columns={columns}\n                           content={this.state.content}\n                           loading={this.state.loading}\n                           total={this.state.total}\n                           page={this.state.page}\n                           manual={this.state.manual}\n                           size={this.state.size}\n                           options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                           fetchData={this.fetchData}\n                    />\n                </CardBody>\n                <CardBody>\n                    {!this.state.send && !this.state.isHsmOwner && this.state.formSessionId &&\n                        <HsmCertificateViewer value={this.state.pdfCertificate}\n                                              onChange={(val) => this.setState({pdfCertificate: val})}\n                                              pinValueChange={(val) => this.setState({pin: val})}\n                                              certificateError={(val) => this.setState({certError: val})}\n                                              pdfName={this.state.pdfName ? this.state.pdfName : \"\"}\n                                              progressLength={this.state.progressLength}\n                                              signedDocumentCount={this.state.signedDocumentCount}\n                                              displayCertificateMenu={this.state.pageState === 0 || this.state.pageState === 40}\n                                              userId={this.props.currentUser && this.props.currentUser.id}/>}\n                </CardBody>\n            </div>\n            {this.state.mediaModal &&\n                <ApproveDocumentViewer modal={this.state.mediaModal}\n                                       url={this.state.url}\n                                       title=\"Form\"\n                    // listener={this.setMediaViewer}\n                                       closeModal={this.setMediaViewer}\n                                       downloadContent={this.downloadContent}\n                                       temporaryRow={this.state.temporaryRow}\n                                       showDownloadButton={this.state.showDownloadButton}\n                                       canvas={true}\n                />\n            }\n            {this.state.receiverModal &&\n                <CreateEditEmployeeModal\n                    id={this.state.employeeId} tckn={this.state.tckn} modal={this.state.receiverModal}\n                    titleList={this.state.titleList}\n                    hasGrant={this.props.hasGrant}\n                    sidebarMenus={this.props.sidebarMenus} isKepOwner={this.state.isKepOwner}\n                    toggleModal={(flag, manual) => this.setState({receiverModal: flag}, () => {\n                        if (manual) {\n                            this.props.reload()\n                        }\n                    })}\n                />}\n            {this.state.stateDetail &&\n                <StateDetail detail={this.state.stateDetail}\n                             documentType={this.state.stateDetail.formType ? this.state.stateDetail.formType.category : \"\"}\n                             toggle={() => this.setState({stateDetail: undefined})}\n                />}\n            {this.state.alert}\n            {this.state.showEczaciHelpModal &&\n                <VideoModal video={this.state.video} isOpen={this.state.showEczaciHelpModal}\n                            close={() => this.setState({showEczaciHelpModal: false})}/>\n            }\n        </div>\n    }\n\n    isNotEminEczanesi = () => {\n        return !!this.props.currentUser && !!this.props.currentUser.vknTckn && this.props.currentUser.vknTckn !== \"3470304270\";\n    }\n}\n\nexport default FormSessionPage;"],"sourceRoot":""}