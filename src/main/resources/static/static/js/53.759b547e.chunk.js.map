{"version":3,"sources":["accounting/kepik/ntfstatement/component/SmsStatus.js","accounting/kepik/ntfstatement/component/NotificationState.js"],"names":["SmsStatus","Component","constructor","props","super","employeeSize","notifcationType","value","label","infoSms","infoIVR","undefined","infoEmail","handleChangeSms","selectedSmsOption","this","setState","handleSearchSms","handleChangeIVR","selectedIVROption","handleSearchIVR","handleChangeEmail","selectedEmailOption","handleSearchEmail","handleChangeType","selectedType","handleChangeDateTimeField","name","length","match","moment","isValid","toString","format","dateValidation","state","alert","loadingSms","loadingIvr","loadingEmail","showModal","valid","manualSms","manualIvr","manualEmail","listSms","listIvr","listEmail","searchingSms","searchingIvr","searchingEmail","searchQuerySms","searchQueryIvr","searchQueryEmail","pageSms","pageIvr","pageEmail","sizeSms","sizeIvr","sizeEmail","totalSms","totalIvr","totalEmail","selected","selection","selectedAll","isKepOwner","smsOptions","ivrOptions","emailOptions","typeOptions","isLoading","infoType","excelIsDownloading","startDateAll","finishDateAll","meanSmsCountForADocument","totalTime","selectedEmployeeLimit","bind","fetchDataSms","fetchDataEmail","fetchDataIVR","downloadMedia","getTrStyles","smsDataStatistic","clear","componentWillMount","selectedEmployees","Swal","title","text","confirmButtonText","then","searching","accessorSms","directionSms","accessorEmail","directionEmail","accessorIvr","directionIvr","item","statusType","backgroundColor","webkitTextFillColor","accessor","direction","page","size","self","selectedCustomer","searchQuery","sortStr","encodeURIComponent","employeeIds","map","val","params","url","method","data","employeeList","requestK","response","totalElements","content","catch","error","showAxiosError","shortStatus","responseType","link","document","createElement","href","window","URL","createObjectURL","Blob","type","download","body","appendChild","click","renderSMSTable","pageIdList","Array","e","push","recordId","columnFieldList","Header","sortable","Cell","row","React","style","margin","createdAt","arrivedAt","columns","renewListForPrivileges","Table","loading","loadingText","total","manual","options","fetchData","renderEMAILTable","renderIVRTable","columnIVRFieldList","sentAt","render","className","Row","Col","Select","clearable","placeholder","onChange","marginLeft","marginRight","Datetime","locale","input","closeOnSelect","dateFormat","timeFormat","noResultsText","clearValueText","data-toggle","data-placement","background","rel","onClick","float","StickButton","position","fontSize","disabled","NotificationState","handleChange","handleSearch","displayDetailDialog","list","totalIdList","openDetailDialog","isSelected","closeDetailDialog","getCustomers","clearChild","child","createRef","jobTitlesData","getJobTitles","componentDidMount","current","optionItems","customer","formattedName","isSuperAdmin","reload","selectedIdList","clone","Object","assign","toggleCheckboxChange","id","checked","target","items","forEach","index","indexOf","slice","renderMainTable","DropdownCheck","selectionIdList","selectType","department","TextOverFlowTooltip","maxLength","jobTitle","email","telephone","fieldList","operator","selectData","statusTypeFilterData","genderData","statusReasonData","fields","Nav","paddingLeft","height","marginTop","ReactLoading","width","fill","DetailedSearch","onSearch","ref"],"mappings":"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","file":"static/js/53.759b547e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {renewListForPrivileges} from \"../../common/PeykHelper\";\nimport Table from \"../../../../components/Table/Table\";\nimport Select from \"../../../../local_node_modules/react-select\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport StickButton from \"../../../../components/StickButton\";\nimport moment from \"moment\";\nimport {Col, Row} from \"antd\";\nimport 'antd/dist/antd.css';\nimport Datetime from \"react-datetime\";\nimport \"react-datetime/css/react-datetime.css\";\nimport Swal from \"sweetalert2\";\n\n\nclass SmsStatus extends Component {\n    employeeSize = 0;\n    notifcationType = [\n        {value: \"SMS\", label: \"SMS\"},\n        {value: \"EMAIL\", label: \"EMAIL\"},\n        {value: \"IVR\", label: \"IVR\"}\n        // {value: \"WHATSAPP\", label: \"WHATSAPP\"},\n        // {value: \"KEP\", label: \"KEP\"},\n        // {value: \"SLACK\", label: \"SLACK\"}\n    ];\n    infoSms = [\n        {value: \"ALL\", label: \"Tümü\"},\n        {value: \"DELIVERED\", label: \"İletildi\"},\n        {value: \"PENDING\", label: \"Bekliyor\"},\n        {value: \"NOT_DELIVERED\", label: \"İletilemedi\"},\n        {value: \"NOT_QUERIED_YET\", label: 'SMS Durumu Henüz Sorgulanmadı'},\n        {value: \"TIME_OUT\", label: \"Zaman Aşımı\"},\n        {value: \"REPEATED\", label: \"Mükerrer\"},\n        {value: \"NO_VALID_RECEIVERS\", label: \"Hatalı veya kısıtlı numara\"},\n        {value: \"GENERAL_ERROR\", label: \"Bilinmeyen Hata\"},\n        {value: \"XML_ERROR\", label: \"XML Post parametresi boş veya geçersiz.\"},\n        {value: \"AUTH_FAILED\", label: \"Hatalı kullanıcı adı veya şifre.\"},\n        {value: \"USER_DENIED\", label: \"Erişim engellendi.\"},\n        {value: \"BANNED_ORIGINATOR\", label: \"Başlık kullanılamaz.\"},\n        {value: \"ORIGINATOR_INVALID\", label: \"Başlık onay bekliyor.\"},\n        {value: \"ORIGINATOR_UNCONFIRMED\", label: \"Başlık sistemde bulunamadı.\"},\n        {value: \"NO_RECEIVERS\", label: \"Alıcı numara bulunamadı.\"},\n        {value: \"NO_VALID_RECEIVERS\", label: \"Geçerli alıcı numara bulunamadı.\"},\n        {value: \"ORIGINATOR_UNCONFIRMED\", label: \"Başlık sistemde bulunamadı.\"},\n        {value: \"NO_TEXT\", label: \"Sms mesajı boş.\"},\n        {value: \"BADWORDS_INTEXT\", label: \"Sms mesajı içeriğinde uygunsuz kelimeler tespit edildi.\"},\n        {value: \"NOT_ENOUGH_CREDITS\", label: \"Kredi yetersiz.\"},\n        {value: \"NO_MESSAGEID\", label: \"Geçersiz mesaj id değeri\"},\n        {value: \"NO_RECEIVERIDS\", label: \"Hiç alıcı id si bulunamadı.\"},\n        {value: 'NO_STATUS', label: \"SMS iletim Durumu bilinmiyor.\"},\n        {value: 'INVALID_USERNAME', label: \"Geçersiz kullanıcı adı\"},\n        {value: 'PARAMETER_ERROR', label: \"Hatalı sorgulama\"},\n        {value: 'REQUEST_BORDER_ACHIEVED', label: \"Gönderim sınır aşımı\"},\n        {value: 'TEXT_ERROR', label: \"Mesaj metninde hata\"},\n        {value: 'UNDEFINED_MESSAGE_HEADER', label: \"Mesaj başlığı tanımlı değil\"},\n        {value: 'REPEATED_TIME_OUT', label: \"Mükerrer Gönderim sınır aşımı\"}\n    ];\n    infoIVR = [\n        {value: undefined, label: 'Tümü'},\n        {value: \"-1\", label: 'Ses dosyası dinletilen numaranın çağrı esnasında kapatması'},\n        {value: \"0\", label: 'Cevaplanmayı bekleyenler'},\n        {value: \"1\", label: 'Cevaplananlar / Açan'},\n        {value: \"2\", label: 'Cevaplanmayanlar'},\n        {value: \"3\", label: 'Ulaşılamayan'},\n        {value: \"4\", label: 'Ücretlendirelemeyen / Varlık Yetersiz'},\n        {value: \"5\", label: 'Iptal Edilen'},\n        {value: \"6\", label: 'Başlatılamayan çağrılar, durdurulan, hata alanlar'},\n        {value: \"7\", label: 'Meşgule Alınan'},\n        {value: \"8\", label: 'Numara Geçersiz'},\n        {value: \"9\", label: '\"Süresi Doldu\"'},\n        {value: \"30\", label: 'Geçersiz Kullanıcı Adı ve Şifre'},\n        {value: \"60\", label: 'Kayıt Bulunamadı'},\n        {value: \"100\", label: 'Sistem Hatası'}\n    ];\n    infoEmail = [\n        {value: \"ALL\", label: 'Tümü'},\n        {value: \"SUCCESS\", label: 'Gönderildi'},\n        {value: \"ERROR\", label: 'Gönderilemedi'}\n    ];\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            alert: null,\n            loadingSms: false,\n            loadingIvr: false,\n            loadingEmail: false,\n            showModal: false,\n            valid: {},\n            manualSms: false,\n            manualIvr: false,\n            manualEmail: false,\n            listSms: [],\n            listIvr: [],\n            listEmail: [],\n            searchingSms: false,\n            searchingIvr: false,\n            searchingEmail: false,\n            searchQuerySms: undefined,\n            searchQueryIvr: undefined,\n            searchQueryEmail: undefined,\n            pageSms: 0,\n            pageIvr: 0,\n            pageEmail: 0,\n            sizeSms: 10,\n            sizeIvr: 10,\n            sizeEmail: 10,\n            totalSms: 0,\n            totalIvr: 0,\n            totalEmail: 0,\n            selected: undefined,\n            selection: [],\n            selectedAll: false,\n            isKepOwner: false,\n            selectedSmsOption: this.infoSms[0],\n            selectedIVROption: this.infoIVR[0],\n            selectedEmailOption: this.infoEmail[0],\n            smsOptions: this.infoSms,\n            ivrOptions: this.infoIVR,\n            emailOptions: this.infoEmail,\n            selectedType: this.notifcationType[0],\n            typeOptions: this.notifcationType,\n            isLoading: false,\n            infoType: 'info',\n            excelIsDownloading: false,\n            startDateAll: \"\",\n            finishDateAll: \"\",\n            meanSmsCountForADocument: 0,\n            totalTime: 0,\n            selectedEmployeeLimit: 100\n        };\n\n        this.handleChangeSms = this.handleChangeSms.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangeIVR = this.handleChangeIVR.bind(this);\n        this.handleChangeType = this.handleChangeType.bind(this);\n        this.handleSearchSms = this.handleSearchSms.bind(this);\n        this.handleSearchEmail = this.handleSearchEmail.bind(this);\n        this.handleSearchIVR = this.handleSearchIVR.bind(this);\n        this.fetchDataSms = this.fetchDataSms.bind(this);\n        this.fetchDataEmail = this.fetchDataEmail.bind(this);\n        this.fetchDataIVR = this.fetchDataIVR.bind(this);\n        this.downloadMedia = this.downloadMedia.bind(this);\n        this.getTrStyles = this.getTrStyles.bind(this);\n        this.handleChangeDateTimeField = this.handleChangeDateTimeField.bind(this);\n        this.smsDataStatistic = this.smsDataStatistic.bind(this);\n        this.clear = this.clear.bind(this);\n\n    }\n\n    componentWillMount() {\n        this.setState({isKepOwner: this.props.isKepOwner});\n    }\n\n    clear() {\n        this.setState({\n            pageSms: 0,\n            pageIvr: 0,\n            pageEmail: 0,\n            totalSms: 0,\n            totalIvr: 0,\n            totalEmail: 0,\n            sizeSms: 10,\n            sizeIvr: 10,\n            sizeEmail: 10,\n            listSms: [],\n            listIvr: [],\n            listEmail: []\n        })\n\n    }\n\n\n    handleSearchSms(searchQuerySms) {\n        if (this.props.selectedEmployees.length === 0) {\n            Swal({\n                title: 'Uyarı ! ',\n                text: (\"Lütfen listeden çalışan seçiniz!\"),\n                confirmButtonText: 'Tamam'\n            }).then(() => {\n                return;\n            });\n        }else if (this.props.selectedEmployees.length > this.state.selectedEmployeeLimit) {\n            Swal({\n                title: 'Uyarı ! ',\n                text: (\"En fazla \" + this.state.selectedEmployeeLimit + \" çalışan için sorgulama yapabilirsiniz!\"),\n                confirmButtonText: 'Tamam'\n            }).then(() => {\n                return;\n            });\n        } else {\n            this.setState({\n                searchQuerySms,\n                searching: true,\n                selection: [],\n            }, () => this.fetchDataSms(this.state.accessorSms, this.state.directionSms, 0, this.state.sizeSms));\n        }\n    }\n\n    handleSearchEmail(searchQueryEmail) {\n        if (this.props.selectedEmployees.length === 0) {\n            Swal({\n                title: 'Uyarı ! ',\n                text: (\"Lütfen listeden çalışan seçiniz!\"),\n                confirmButtonText: 'Tamam'\n            }).then(() => {\n                return;\n            });\n        }else if (this.props.selectedEmployees.length > this.state.selectedEmployeeLimit) {\n            Swal({\n                title: 'Uyarı ! ',\n                text: (\"En fazla \" + this.state.selectedEmployeeLimit + \" çalışan için sorgulama yapabilirsiniz!\"),\n                confirmButtonText: 'Tamam'\n            }).then(() => {\n                return;\n            });\n        } else {\n            this.setState({\n                searchQueryEmail,\n                searching: true,\n                selection: [],\n            }, () => this.fetchDataEmail(this.state.accessorEmail, this.state.directionEmail, 0, this.state.sizeEmail));\n        }\n    }\n\n\n    handleSearchIVR(searchQueryIvr) {\n        if (this.props.selectedEmployees.length === 0) {\n            Swal({\n                title: 'Uyarı ! ',\n                text: (\"Lütfen listeden çalışan seçiniz!\"),\n                confirmButtonText: 'Tamam'\n            }).then(() => {\n                return;\n            });\n        }else if (this.props.selectedEmployees.length > this.state.selectedEmployeeLimit) {\n            Swal({\n                title: 'Uyarı ! ',\n                text: (\"En fazla \" + this.state.selectedEmployeeLimit + \" çalışan için sorgulama yapabilirsiniz!\"),\n                confirmButtonText: 'Tamam'\n            }).then(() => {\n                return;\n            });\n        }else\n            this.setState({\n                searchQueryIvr,\n                searchingIvr: true,\n                selection: [],\n            }, () => this.fetchDataIVR(this.state.accessorIvr, this.state.directionIvr, 0, this.state.sizeIvr))\n    }\n\n    getTrStyles(item) {\n        return (item.statusType && item.statusType !== 'ACTIVE') ? {\n            backgroundColor: 'lightgray',\n            webkitTextFillColor: 'darkgray'\n        } : {};\n    }\n\n    fetchDataSms(accessor, direction, page, size) {\n        let self = this;\n        if (self.props.selectedCustomer === undefined || self.props.selectedCustomer === -1)\n            return;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=recordId,desc';\n        let searchQuery;\n        if (self.state.selectedSmsOption !== undefined &&\n            self.state.selectedSmsOption !== null) {\n            searchQuery = '&customerId=' + self.props.selectedCustomer.value;\n            if (self.state.selectedSmsOption.value!=='ALL'){\n                searchQuery = searchQuery + '&shortStatus=' + encodeURIComponent(self.state.selectedSmsOption.value);\n            }\n        }\n        if (searchQuery === undefined)\n            return;\n        let employeeIds = self.props.selectedEmployees.map((val) => val);\n        let params = {\n            url: '/customizedNtfDataController/smsStatus?page=' + page + '&size=' + size + sortStr + searchQuery,\n            method: \"post\",\n            data: {\n                employeeList: employeeIds,\n                startDateAll: self.state.startDateAll,\n                finishDateAll: self.state.finishDateAll\n            }\n        };\n        self.setState({loadingSms: true, searchingSms: true, manualSms: self.manualSms === true ? false : self.manualSms});\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    pageSms: page,\n                    sizeSms: size,\n                    totalSms: response.data.totalElements,\n                    listSms: response.data.content,\n                    // totalIdList: response.data ? response.data.selectedIdList : [],\n                    loadingSms: false,\n                    searchingSms: false\n                });\n                //self.smsDataStatistic();\n            })\n            .catch(function (error) {\n                self.setState({loadingSms: false, searching: false});\n                showAxiosError(error);\n            });\n    }\n\n    fetchDataEmail(accessor, direction, page, size) {\n        let self = this;\n        if (self.props.selectedCustomer === undefined || self.props.selectedCustomer === -1)\n            return;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=recordId,desc';\n        let searchQuery;\n        if (self.state.selectedEmailOption !== undefined &&\n            self.state.selectedEmailOption !== null) {\n            searchQuery = '&customerId=' + self.props.selectedCustomer.value;\n            if (self.state.selectedEmailOption.value!=='ALL'){\n                searchQuery = searchQuery + '&shortStatus=' + encodeURIComponent(self.state.selectedEmailOption.value);\n            }\n        }\n        if (searchQuery === undefined)\n            return;\n        let employeeIds = self.props.selectedEmployees.map((val) => val);\n        let params = {\n            url: '/customizedNtfDataController/emailStatus?page=' + page + '&size=' + size + sortStr + searchQuery,\n            method: \"post\",\n            data: {\n                employeeList: employeeIds,\n                startDateAll: self.state.startDateAll,\n                finishDateAll: self.state.finishDateAll\n            }\n        };\n        self.setState({loadingEmail: true, searchingEmail: true, manualEmail: self.manualEmail === true ? false : self.manualEmail});\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    pageEmail: page,\n                    sizeEmail: size,\n                    totalEmail: response.data.totalElements,\n                    listEmail: response.data.content,\n                    loadingEmail: false,\n                    searchingEmail: false\n                });\n            })\n            .catch(function (error) {\n                self.setState({loadingEmail: false, searchingEmail: false});\n                showAxiosError(error);\n            });\n    }\n\n    fetchDataIVR(accessor, direction, page, size) {\n        let self = this;\n        if (self.props.selectedCustomer === undefined || self.props.selectedCustomer === -1)\n            return;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=recordId,desc';\n        let searchQuery = '&customerId=' + self.props.selectedCustomer.value;\n        if (self.state.selectedIVROption !== undefined && self.state.selectedIVROption !== null && self.state.selectedIVROption.value !== undefined) {\n            searchQuery = searchQuery + '&shortStatus=' + encodeURIComponent(self.state.selectedIVROption.value);\n        }\n\n        if (searchQuery === undefined)\n            return;\n        let employeeIds = self.props.selectedEmployees.map((val) => val);\n        let params = {\n            url: '/customizedNtfDataController/ivrStatus?page=' + page + '&size=' + size + sortStr + searchQuery,\n            method: \"post\",\n            data: {\n                employeeList: employeeIds,\n                startDateAll: self.state.startDateAll,\n                finishDateAll: self.state.finishDateAll\n            }\n        };\n        self.setState({\n            loadingIvr: true,\n            searchingIvr: true,\n            manualIvr: self.manualIvr === true ? false : self.manualIvr\n        });\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    pageIvr: page,\n                    sizeIvr: size,\n                    totalIvr: response.data[0].totalElements,\n                    listIvr: response.data[0].content,\n                    loadingIvr: false,\n                    searchingIvr: false,\n                    totalTime: response.data[1]\n                });\n            })\n            .catch(function (error) {\n                self.setState({loadingIvr: false, searchingIvr: false});\n                showAxiosError(error);\n            });\n    }\n\n    smsDataStatistic() {\n        let self = this;\n        if (self.props.selectedCustomer === undefined || self.props.selectedCustomer === -1)\n            return;\n        let searchQuery;\n        if (self.state.selectedSmsOption !== undefined && self.state.selectedSmsOption !== null) {\n            searchQuery = 'customerId=' + self.props.selectedCustomer.value + '&status=' + encodeURIComponent(self.state.selectedSmsOption.value);\n        }\n        if (searchQuery === undefined)\n            return;\n        let employeeIds = self.props.selectedEmployees.map((val) => val);\n        let params = {\n            url: '/customizedNtfDataController/smsStatistic?' + searchQuery,\n            method: \"post\",\n            data: {\n                employeeList: employeeIds,\n                startDateAll: self.state.startDateAll,\n                finishDateAll: self.state.finishDateAll\n            }\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    meanSmsCountForADocument: response.data\n                });\n            })\n            .catch(function (error) {\n                showAxiosError(error);\n            });\n    }\n\n    downloadMedia() {\n        let self = this;\n        if (self.props.selectedCustomer === undefined || self.props.selectedCustomer === -1)\n            return;\n        let searchQuery;\n        if (self.state.selectedSmsOption !== undefined && self.state.selectedSmsOption !== null) {\n          let shortStatus = self.state.selectedSmsOption.value==='ALL'?'':'&shortStatus=' + encodeURIComponent(self.state.selectedSmsOption.value);\n            searchQuery = 'customerId=' + self.props.selectedCustomer.value + shortStatus;\n        }\n        if (searchQuery === undefined)\n            return;\n        let employeeIds = self.props.selectedEmployees.map((val) => val);\n        let params = {\n            url: '/customizedNtfDataController/downloadSMSStatusReport?' + searchQuery,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: {\n                employeeList: employeeIds,\n                startDateAll: self.state.startDateAll,\n                finishDateAll: self.state.finishDateAll\n            }\n        };\n        self.setState({excelIsDownloading: true});\n        requestK(params)\n            .then(function (response) {\n                let link = document.createElement('a');\n                link.href = window.URL.createObjectURL(new Blob([response.data], {type: \"application/vnd.ms-excel\"}));\n                link.download = \"SmsDurumListesi.xlsx\";\n                document.body.appendChild(link);\n                link.click();\n                self.setState({excelIsDownloading: false});\n\n            }).catch(function (error) {\n            self.setState({excelIsDownloading: false});\n            showAxiosError(error);\n        });\n    }\n\n    handleChangeSms = selectedSmsOption => {\n        this.setState(\n            {selectedSmsOption}\n        );\n        this.handleSearchSms();\n    }\n    handleChangeIVR = selectedIVROption => {\n        this.setState(\n            {selectedIVROption}\n        );\n        this.handleSearchIVR();\n    }\n    handleChangeEmail = selectedEmailOption => {\n        this.setState(\n            {selectedEmailOption}\n        );\n        this.handleSearchEmail();\n    }\n\n    handleChangeType = selectedType => {\n        this.setState(\n            {selectedType}\n        );\n    }\n\n    renderSMSTable() {\n        let pageIdList = [];\n        if (this.state.listSms && this.state.listSms instanceof Array) {\n            this.state.listSms.map(e => {\n                pageIdList.push(e.recordId);\n            });\n        }\n\n        let columnFieldList = [\n            {\n                Header: \"Ad Soyad\",\n                sortable: false,\n                accessor: \"receiverTitle\"\n            },\n            {\n                Header: \"Telefon Numarası\",\n                accessor: \"receiver\"\n\n            },\n            {\n                Header: \"Gönderilme Tarihi\",\n                sortable: true,\n                accessor: \"createdAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {moment(row.createdAt).isValid() ? moment(row.createdAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}\n                    </div>\n                )\n\n            },\n            {\n                Header: \"İletilme Tarihi\",\n                sortable: false,\n                accessor: \"arrivedAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {moment(row.arrivedAt).isValid() ? moment(row.arrivedAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}\n                    </div>\n                )\n\n            },\n            {\n                Header: \"SMS Durumu\",\n                accessor: \"status\"\n\n            }\n\n        ];\n        let columns = renewListForPrivileges(this, columnFieldList, \"accessor\", this.state.isKepOwner);\n\n        return <Table columns={columns}\n                      content={this.state.listSms}\n                      loading={this.state.loadingSms}\n                      loadingText=\"Kayıtlar getiriliyor...\"\n                      total={this.state.totalSms}\n                      page={this.state.pageSms}\n                      size={this.state.sizeSms}\n                      manual={this.state.manualSms}\n                      options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                      getTrStyles={this.getTrStyles}\n                      fetchData={this.fetchDataSms}\n        />\n    }\n\n    renderEMAILTable() {\n        let columnFieldList = [\n            {\n                Header: \"Ad Soyad\",\n                sortable: false,\n                accessor: \"receiverTitle\"\n            },\n            {\n                Header: \"Email adresi\",\n                accessor: \"receiver\"\n\n            },\n            {\n                Header: \"Gönderilme Tarihi\",\n                sortable: true,\n                accessor: \"createdAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {moment(row.createdAt).isValid() ? moment(row.createdAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}\n                    </div>\n                )\n\n            },\n            {\n                Header: \"Email Durumu\",\n                accessor: \"status\"\n\n            }\n\n        ];\n        return <Table columns={columnFieldList}\n                      content={this.state.listEmail}\n                      loading={this.state.loadingEmail}\n                      loadingText=\"Kayıtlar getiriliyor...\"\n                      total={this.state.totalEmail}\n                      page={this.state.pageEmail}\n                      size={this.state.sizeEmail}\n                      manual={this.state.manualEmail}\n                      options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                      getTrStyles={this.getTrStyles}\n                      fetchData={this.fetchDataEmail}\n        />\n    }\n\n    renderIVRTable() {\n        let columnIVRFieldList = [\n            {\n                Header: \"Ad Soyad\",\n                sortable: true,\n                accessor: \"receiverTitle\"\n            },\n            {\n                Header: \"Telefon Numarası\",\n                accessor: \"receiver\"\n\n            },\n            {\n                Header: \"Gönderilme Tarihi\",\n                sortable: true,\n                accessor: \"sentAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {moment(row.sentAt).isValid() ? moment(row.sentAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}\n                    </div>\n                )\n\n            },\n            {\n                Header: \"IVR Durumu\",\n                accessor: \"status\"\n\n            },\n            {\n                Header: \"Süre(Sn)\",\n                accessor: \"ivrTime\"\n\n            }\n\n        ];\n        return <Table columns={columnIVRFieldList}\n                      content={this.state.listIvr}\n                      loading={this.state.loadingIvr}\n                      loadingText=\"Kayıtlar getiriliyor...\"\n                      total={this.state.totalIvr}\n                      page={this.state.pageIvr}\n                      size={this.state.sizeIvr}\n                      manual={this.state.manualIvr}\n                      options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                      getTrStyles={this.getTrStyles}\n                      fetchData={this.fetchDataIVR}\n        />\n    }\n\n    handleChangeDateTimeField = (name, value) => {\n        var dateFormat = /^[0-9\\s\\-:]+$/;\n        if (value.length > 0 && (!value.match(dateFormat) || !moment(value, \"YYYY-MM-DD\", true).isValid())) {\n            this.setState({dateValidation: false});\n            return;\n        }\n        if (value && value.toString().length) {\n            value = value.format(\"YYYY-MM-DD\").toString();\n        }\n\n        this.setState({[name]: value, dateValidation: true});\n    };\n\n    render() {\n        return (\n            <div className=\"col-sm-12 satirBasi\">\n                <div className=\"card-body\">\n                    <Row className=\"col-sm-12\">\n                        <Col className=\"col-sm-12\">\n                            <div className=\"col-sm-12 row\">\n                                <h4 className=\"card-title col-sm-3\">Bilgilendirme Türü</h4>\n                                <div className=\"col-sm-6\">\n                                    <Select\n                                        value={this.state.selectedType}\n                                        clearable={false}\n                                        placeholder=\"Seçiniz...\"\n                                        onChange={this.handleChangeType}\n                                        options={this.state.typeOptions}\n                                    />\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row className=\"col-sm-12\">\n                        <Col className=\"col-sm-12\">\n                            <div className=\"radio-buttons col-sm-12 row\">\n                                <h4 className=\"card-title\" style={{marginLeft: 50, marginRight: 10}}>Başlangıç\n                                    Tarihi</h4>\n                                <Datetime locale=\"tr\"\n                                          className=\"datepicker\"\n                                          input={true}\n                                          closeOnSelect={true}\n                                          value={moment(this.state.startDateAll, \"YYYY-MM-DD\", true).isValid() ? moment(this.state.startDateAll).format(\"DD-MM-YYYY\") : this.state.startDateAll}\n                                          dateFormat=\"DD-MM-YYYY\"\n                                          timeFormat=\"\"\n                                          style={{marginLeft: 10}}\n                                          onChange={(e) => this.handleChangeDateTimeField(\"startDateAll\", e)}\n                                />\n                                <h4 className=\"card-title\" style={{marginLeft: 10}}> - </h4>\n                                <h4 className=\"card-title\" style={{marginLeft: 10, marginRight: 10}}>Bitiş Tarihi</h4>\n                                <Datetime locale=\"tr\"\n                                          className=\"datepicker\"\n                                          input={true}\n                                          closeOnSelect={true}\n                                          value={moment(this.state.finishDateAll, \"YYYY-MM-DD\", true).isValid() ? moment(this.state.finishDateAll).format(\"DD-MM-YYYY\") : this.state.finishDateAll}\n                                          dateFormat=\"DD-MM-YYYY\"\n                                          timeFormat=\"\"\n                                          onChange={(e) => this.handleChangeDateTimeField(\"finishDateAll\", e)}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row className=\"col-sm-12\">\n                        {this.state.selectedType.value==='SMS' &&\n                        <Col className=\"col-sm-12\">\n                            <div className=\"col-sm-12 row\">\n                                <h4 className=\"card-title col-sm-3\">SMS Durumları</h4>\n                                <div className=\"col-sm-6\">\n                                    <Select\n                                        value={this.state.selectedSmsOption}\n                                        clearable={false}\n                                        noResultsText=\"Veri yok\"\n                                        clearValueText=\"Temizle\"\n                                        placeholder=\"Seçiniz...\"\n                                        onChange={this.handleChangeSms}\n                                        options={this.state.smsOptions}\n                                    />\n                                </div>\n                                <div className=\"col-sm-3\">\n                                    <button type=\"button\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                            style={{\n                                                background: 'linear-gradient(rgba(159, 208, 55, 0.6), #9fd037)',\n                                                marginRight: '30px'\n                                            }}\n                                            rel=\"tooltip\" className=\"  TekBtn search btn-icon sag-1 pull-right\"\n                                            onClick={this.handleSearchSms}>Arama Yap\n                                    </button>\n                                </div>\n                            </div>\n                            {this.renderSMSTable()}\n                        </Col>}\n                        {this.state.selectedType.value==='EMAIL' &&\n                            <Col className=\"col-sm-12\">\n                                <div className=\"col-sm-12 row\">\n                                    <h4 className=\"card-title col-sm-3\">Email Durumları</h4>\n                                    <div className=\"col-sm-6\">\n                                        <Select\n                                            value={this.state.selectedEmailOption}\n                                            clearable={false}\n                                            noResultsText=\"Veri yok\"\n                                            clearValueText=\"Temizle\"\n                                            placeholder=\"Seçiniz...\"\n                                            onChange={this.handleChangeEmail}\n                                            options={this.state.emailOptions}\n                                        />\n                                    </div>\n                                    <div className=\"col-sm-3\">\n                                        <button type=\"button\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                                style={{\n                                                    background: 'linear-gradient(rgba(159, 208, 55, 0.6), #9fd037)',\n                                                    marginRight: '30px'\n                                                }}\n                                                rel=\"tooltip\" className=\"  TekBtn search btn-icon sag-1 pull-right\"\n                                                onClick={this.handleSearchEmail}>Arama Yap\n                                        </button>\n                                    </div>\n                                </div>\n                                {this.renderEMAILTable()}\n                            </Col>}\n                        {this.state.selectedType.value === 'IVR' &&\n                        <Col className=\"col-sm-12\">\n                            <div className=\"col-sm-12 row\">\n                                <h4 className=\"card-title col-sm-3\">IVR Durumları</h4>\n                                <div className=\"col-sm-6\">\n                                    <Select\n                                        value={this.state.selectedIVROption}\n                                        clearable={false}\n                                        noResultsText=\"Veri yok\"\n                                        clearValueText=\"Temizle\"\n                                        placeholder=\"Seçiniz...\"\n                                        onChange={this.handleChangeIVR}\n                                        options={this.state.ivrOptions}\n                                    />\n                                </div>\n                                <div className=\"col-sm-3 \">\n                                    <button type=\"button\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                            style={{\n                                                background: 'linear-gradient(rgba(159, 208, 55, 0.6), #9fd037)',\n                                                marginRight: '30px'\n                                            }}\n                                            rel=\"tooltip\" className=\"  TekBtn search btn-icon sag-1 pull-right\"\n                                            onClick={this.handleSearchIVR}>Arama Yap\n                                    </button>\n                                </div>\n                            </div>\n                            {this.renderIVRTable()}\n                            <Row>\n                                <Col className=\"col-sm-12\">\n                                    <div style={{float: 'left'}}>\n                                        <p>Toplam süre : {this.state.totalTime} sn</p>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>}\n                        {this.state.selectedType.value === 'SMS' &&\n                        <Row>\n                            <Col className=\"col-sm-12\">\n                                <div style={{float: 'right'}}>\n                                    <StickButton position=\"rightSide\" className=\"zocial Excel\"\n                                                 style={{fontSize: 'x-small'}}\n                                                 label=\"Excel'e Aktar\"\n                                                 title=\"Listedeki çalışanlara gönderilen smslerin iletim durumu\"\n                                                 disabled={this.state.excelIsDownloading}\n                                                 onClick={this.downloadMedia}/>\n                                </div>\n                            </Col>\n                        </Row>}\n                    </Row>\n\n                </div>\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default SmsStatus;","import React, {Component} from 'react';\nimport 'react-table/react-table.css';\nimport {Nav} from 'reactstrap';\nimport DetailedSearch from \"../../../../components/DetailedSearch/DetailedSearch\";\nimport Table from \"../../../../components/Table/Table\";\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport 'moment/locale/tr';\nimport TextOverFlowTooltip from \"../../../../components/TextOverFlowTooltip\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport ReactLoading from \"react-loading\";\nimport {\n    genderData,\n    getJobTitles,\n    renewListForPrivileges,\n    statusReasonData,\n    statusTypeFilterData\n} from \"../../common/PeykHelper\";\nimport Select from \"../../../../local_node_modules/react-select\";\nimport SmsStatus from \"./SmsStatus\";\nimport DropdownCheck from \"../../../../components/Table/DropdownCheck\";\n\nclass NotificationState extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            alert: null,\n            loading: false,\n            showModal: false,\n            displayDetailDialog: false,\n            valid: {},\n            manual: false,\n            list: [],\n            totalIdList: [],\n            total: 0,\n            searching: false,\n            searchQuery: undefined,\n            page: 0,\n            size: 10,\n            selected: undefined,\n            selection: [],\n            selectedAll: false,\n            isKepOwner: false,\n            selectedCustomer: -1,\n            options: [],\n            isLoading: false\n        };\n        this.fetchData = this.fetchData.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.getTrStyles = this.getTrStyles.bind(this);\n        this.openDetailDialog = this.openDetailDialog.bind(this);\n        this.isSelected = this.isSelected.bind(this);\n        this.closeDetailDialog = this.closeDetailDialog.bind(this);\n        this.getCustomers = this.getCustomers.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.clearChild = this.clearChild.bind(this);\n        this.child = React.createRef();\n\n    }\n\n    componentWillMount() {\n        this.setState({isKepOwner: this.props.isKepOwner, jobTitlesData: getJobTitles()});\n    }\n\n    componentDidMount() {\n        this.getCustomers();\n    }\n\n    clearChild() {\n        let self = this;\n        self.child.current.clear();\n    }\n\n    getCustomers() {\n        let self = this;\n        self.setState({isLoading: true});\n        let params = {\n            url: '/customer/fetchAllPeykCustomersForAdmin',\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let optionItems = [];\n                response.data.map((customer) => {\n                    optionItems.push({value: customer.recordId, label: customer.formattedName});\n                });\n\n                self.setState({\n                    options: optionItems,\n                    loading: false,\n                    searching: false,\n                    isLoading: false,\n                    selectedCustomer: self.props.isSuperAdmin === true ? -1 : optionItems[0]\n                });\n                self.handleChange(self.state.selectedCustomer);\n            }).catch(function (error) {\n            self.props.reload(false);\n            self.setState({loading: false, searching: false, isLoading: false});\n            showAxiosError(error);\n        });\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let selectedCustomer = self.state.selectedCustomer;\n        if (selectedCustomer === undefined || selectedCustomer === -1)\n            return;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=id,desc';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/employee/readEmployeeAllByCustomerId?customerId=' + selectedCustomer.value + '&page=' + page + '&size=' + size + searchQuery + sortStr +\n                '&showOnlyNoFirstAttempt=' + false +\n                '&lastRecord=',\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        self.props.reload(true);\n        self.clearChild();\n        requestK(params).then(function (response) {\n            self.setState({\n                page: page,\n                size: size,\n                total: (response.data && response.data.page) ? response.data.page.totalElements : 0,\n                list: (response.data && response.data.page) ? response.data.page.content : [],\n                totalIdList: response.data ? response.data.selectedIdList : [],\n                loading: false,\n                searching: false\n            });\n            self.props.reload(false);\n        }).catch(function (error) {\n            self.setState({loading: false, searching: false});\n            self.props.reload(false);\n            showAxiosError(error);\n        });\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            searching: true,\n            selection: [],\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    handleChange = selectedCustomer => {\n        if (selectedCustomer) {\n            this.setState(\n                {selectedCustomer}\n            );\n\n            if (selectedCustomer !== -1)\n                this.handleSearch();\n        }\n    };\n\n    openDetailDialog(row) {\n        let clone = Object.assign({}, row);\n        delete clone[\"_$visited\"];\n        this.setState({\n            selected: clone,\n            valid: {},\n            displayDetailDialog: true\n        });\n    }\n\n    closeDetailDialog() {\n        this.setState({\n            selected: undefined,\n            valid: {},\n            displayDetailDialog: false\n        });\n    }\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.list;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.list.length) : false)\n            });\n        }\n    }\n\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    getTrStyles(item) {\n        return (item.statusType && item.statusType !== 'ACTIVE') ? {\n            backgroundColor: 'lightgray',\n            webkitTextFillColor: 'darkgray'\n        } : {};\n    }\n\n    renderMainTable() {\n        let pageIdList = [];\n        if (this.state.list && this.state.list instanceof Array) {\n            this.state.list.map(e => {\n                pageIdList.push(e.id);\n            });\n        }\n\n        let columnFieldList = [\n            {\n                Header: (this.state.list &&\n                    <DropdownCheck selectionIdList={this.state.selection}\n                                   totalIdList={this.state.totalIdList}\n                                   pageIdList={pageIdList}\n                                   onChange={e => this.setState({selection: e})}/>\n                ),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.list &&\n                    <input type=\"checkbox\" checked={this.isSelected(row.id)}\n                           onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}/>)\n            },\n            {\n                Header: \"Ad\",\n                accessor: \"name\",\n                sortable: false\n            },\n            {\n                Header: \"Soyad\",\n                accessor: \"surname\",\n                sortable: false,\n\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"tckn\",\n                sortable: false,\n            },\n            {\n                Header: \"Departman\",\n                accessor: \"department\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.department &&\n                        <TextOverFlowTooltip text={row.department.name} maxLength={12}/>}</div>)\n            },\n            {\n                Header: \"Görev\",\n                accessor: \"jobTitle\",\n                Cell: row => (\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.jobTitle} maxLength={12}/></div>)\n            },\n            {\n                Header: \"e-Posta Adresi\",\n                accessor: \"email\",\n                Cell: row => (\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.email} maxLength={15}/></div>)\n            },\n            {\n                Header: \"Telefon Numarası\",\n                accessor: \"telephone\",\n                Cell: row => (\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={(row.telephone ? row.telephone : \"\")}\n                                                                  maxLength={15}/></div>)\n            }\n        ];\n        let columns = renewListForPrivileges(this, columnFieldList, \"accessor\", this.state.isKepOwner);\n\n        return <Table columns={columns}\n                      content={this.state.list}\n                      loading={this.state.loading}\n                      loadingText=\"Kayıtlar getiriliyor...\"\n                      total={this.state.total}\n                      page={this.state.page}\n                      size={this.state.size}\n                      manual={this.state.manual}\n                      options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                      getTrStyles={this.getTrStyles}\n                      fetchData={this.fetchData}/>\n    }\n\n    render() {\n\n        const {selectedCustomer, selection} = this.state;\n        const fieldList = [\n            {\n                label: \"İsim\",\n                accessor: \"name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Soyisim\",\n                accessor: \"surname\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Durum\",\n                accessor: \"statusType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: statusTypeFilterData()\n            },\n            {\n                label: \"TCKN\",\n                accessor: \"tckn\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n            {\n                label: \"Cinsiyet\",\n                accessor: \"gender\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: genderData()\n            },\n            {\n                label: \"Departman\",\n                accessor: \"department_name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Görev\",\n                accessor: \"jobTitle\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.jobTitlesData\n            },\n            {\n                label: \"Pasif Durum Gerekçe\",\n                accessor: \"reason\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: statusReasonData()\n            },\n            {\n                label: \"Pasif Durum Bitiş Tarihi (Başlangıç)\",\n                accessor: \"min_passiveEndDate\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"datetime\",\n                operator: \">=\",\n            },\n            {\n                label: \"Pasif Durum Bitiş Tarihi (Bitiş)\",\n                accessor: \"max_passiveEndDate\",\n                type: \"datetime\",\n                operator: \"<=\",\n            },\n            {\n                label: \"İşe Başlama Tarihi (Başlangıç)\",\n                accessor: \"min_employmentStartDate\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"date\",\n                operator: \">=\",\n            },\n            {\n                label: \"İşe Başlama Tarihi (Bitiş)\",\n                accessor: \"max_employmentStartDate\",\n                type: \"date\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Çalışma Şekli\",\n                accessor: \"employmentStatus\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Doğum Yeri\",\n                accessor: \"cityOfBirth\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Doğum Tarihi (Başlangıç)\",\n                accessor: \"min_dateOfBirth\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"date\",\n                operator: \">=\",\n            },\n            {\n                label: \"Doğum Tarihi (Bitiş)\",\n                accessor: \"max_dateOfBirth\",\n                type: \"date\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Yıllık İzin (En Düşük)\",\n                accessor: \"min_remainingAnnualVacation\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"numericText\",\n                operator: \">=\",\n            },\n            {\n                label: \"Yıllık İzin (En Yüksek)\",\n                accessor: \"max_remainingAnnualVacation\",\n                type: \"numericText\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Mazeret İzni (En Düşük)\",\n                accessor: \"min_remainingExcuseVacation\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"numericText\",\n                operator: \">=\",\n            },\n            {\n                label: \"Mazeret İzni (En Yüksek)\",\n                accessor: \"max_remainingExcuseVacation\",\n                type: \"numericText\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Eğitim Durumu\",\n                accessor: \"educationLevel\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Askerlik Durumu\",\n                accessor: \"militaryStatus\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Adres\",\n                accessor: \"address\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"KEP Adresi\",\n                accessor: \"kepAddress\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"e-Posta Adresi\",\n                accessor: \"email\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Telefon Numarası\",\n                accessor: \"telephone\",\n                type: \"text\",\n                operator: \"=\",\n            },\n        ];\n        let fields = renewListForPrivileges(this, fieldList, \"accessor\", this.state.isKepOwner);\n        return <div className=\"row baseBackground\">\n            <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                <p style={{marginTop: '18px'}}>ÇALIŞAN BİLGİLENDİRME DURUMU SORGULAMA</p>\n            </Nav>\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    <div className=\"col-sm-12 satirBasi\">\n                        {this.props.isSuperAdmin === true && <div className=\"card-header\">\n                            <h4 className=\"card-title\">Müşteri</h4>\n                            <div className=\"card-body\">\n                                <Select\n                                    value={selectedCustomer.value}\n                                    clearable={false}\n                                    noResultsText=\"Veri yok\"\n                                    placeholder=\"Seçiniz...\"\n                                    onChange={this.handleChange}\n                                    options={this.state.options}\n                                />\n                                {this.state.isLoading && <ReactLoading type=\"spinningBubbles\" style={{\n                                    width: \"40px\",\n                                    height: \"40px\",\n                                    margin: \"20px auto 0 auto\",\n                                    fill: \"#888\"\n                                }}/>}\n                            </div>\n                        </div>}\n                        <div className=\"card-header\">\n                            <h4 className=\"card-title\">Çalışan Listesi</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <DetailedSearch fields={fields}\n                                            loading={this.state.searching}\n                                            onSearch={this.handleSearch}/>\n                        </div>\n                        <div className=\"card-body\">\n                            {this.renderMainTable()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-sm-12\">\n                    <div className=\"col-sm-12 satirBasi\">\n                        <SmsStatus selectedCustomer={this.state.selectedCustomer}\n                                   selectedEmployees={this.state.selection} ref={this.child}/>\n\n                    </div>\n\n                </div>\n\n            </div>\n            {this.state.alert}\n\n        </div>\n    }\n}\n\nexport default NotificationState;\n"],"sourceRoot":""}