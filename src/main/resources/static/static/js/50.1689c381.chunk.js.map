{"version":3,"sources":["accounting/kepik/formsession/SignFormMimePage.js"],"names":["SignFormMimePage","Component","constructor","props","super","this","state","loading","completed","signedDocumentCount","progressLength","pageState","timer","timerStarted","certError","disableButton","signMimes","bind","updateMimeInfo","writeSignedMime","updateMimeCertificates","stateMap","0","label","10","wait","20","30","40","danger","componentDidMount","axios","Axios","create","baseURL","location","formSessionId","setState","kepAccountList","mimeTitle","mimeBody","history","push","pathname","peykName","componentDidUpdate","setInterval","prevState","self","params","url","method","data","parseInt","kepAccountId","title","body","alert","requestK","then","response","catch","error","showAxiosError","hsmType","mimeCertificate","certificate","value","certificateKeyId","keyId","signedInfoList","p","Promise","resolve","signedMime","length","forEach","element","index","pdfName","post","base64","pin","signedInfo","id","signature","signedDocument","result","React","createElement","HsmErrorAlert","onConfirm","renderNavButtons","Nav","className","style","paddingLeft","height","StickButton","position","fontSize","onClick","checkGrantToDisplay","FORM_SEND","ISG_FORM_SEND","HEALTH_FORM_SEND","ZIMMET_FORM_SEND","KVKK_FORM_SEND","disabled","undefined","SweetAlert","warning","confirmBtnText","confirmBtnBsStyle","showCancel","cancelBtnText","cancelBtnBsStyle","onCancel","renderState","marginBottom","Col","sm","display","marginRight","ReactLoading","type","color","width","top","renderMimeInputs","Row","Input","onChange","e","target","key","map","account","marginTop","rows","border","padding","render","Notify","ref","md","Card","CardHeader","CardTitle","tag","CardBody","HsmCertificateViewer","val","pinValueChange","certificateError","displayCertificateMenu","userId","currentUser"],"mappings":"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","file":"static/js/50.1689c381.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Card, CardBody, CardHeader, CardTitle, Col, Input, Nav, Row} from 'reactstrap';\nimport 'react-table/react-table.css'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Notify from 'react-notification-alert';\nimport 'react-datetime/css/react-datetime.css'\nimport 'moment/locale/tr'\nimport Axios from 'axios'\nimport HsmErrorAlert from '../../../common/hsm/HsmErrorAlert'\nimport HsmCertificateViewer from '../common/HsmCertificateViewer';\nimport ReactLoading from 'react-loading';\nimport StickButton from \"../../../components/StickButton\";\nimport {checkGrantToDisplay, showAxiosError} from \"../../../helper/helper\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {FORM_SEND,ISG_FORM_SEND,HEALTH_FORM_SEND,ZIMMET_FORM_SEND, KVKK_FORM_SEND} from \"../../../common/authorities/GrantDef\";\n\nclass SignFormMimePage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      completed: false,\n      signedDocumentCount: 0,\n      progressLength: 1,\n      pageState: 0,\n      timer: 1,\n      timerStarted: false,\n      certError: true,\n      disableButton: false\n    };\n\n    this.signMimes = this.signMimes.bind(this);\n    this.updateMimeInfo = this.updateMimeInfo.bind(this);\n    this.writeSignedMime = this.writeSignedMime.bind(this);\n    this.updateMimeCertificates = this.updateMimeCertificates.bind(this);\n\n    this.stateMap = {\n      0: {\n        label: \"İletiler imzalama için hazır. İmzalayınız\",\n      },\n      // İmzala'ya basıldı -> 1.E-posta bilgileri alınıyor\n      10: {\n        label: \"İletiler oluşturuluyor. Lütfen bekleyiniz.\",\n        wait: true\n      },\n      // İmzala'ya basıldı -> 2.Sertifika session'a kaydediliyor\n      //                   -> 3.SignedInfo Üretilmesi bekleniyor\n      20: {\n        label: \"Sertifika sahibi iletilere yazılıyor. Lütfen bekleyiniz.\",\n        wait: true\n      },\n      // İmzala'ya basıldı -> 4.İmzalanıyor\n      30: {\n        label: \"İletiler imzalanıyor. Lütfen bekleyiniz\",\n      },\n      // İmzalanamadı ise;\n      40: {\n        label: \"İletiler imzalanamadı. Lütfen bilgileri kontrol ediniz.\",\n        danger: true\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.axios = Axios.create({\n      baseURL: \"http://127.0.0.1:9999\"\n    });\n\n    if (!this.props || !this.props.location || !this.props.location.formSessionId) {\n      this.props.history.push({pathname: `/${this.props.peykName}/formsessionlist`});\n    } else {\n      this.setState({\n        formSessionId: this.props.location.formSessionId,\n        kepAccountList: this.props.location.kepAccountList,\n        mimeTitle: this.props.location.mimeTitle,\n        mimeBody: this.props.location.mimeBody\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.timer === 1 && !this.state.timerStarted &&\n      this.state.completed && this.state.signedDocumentCount === this.state.progressLength) {\n      setInterval(() => {\n        this.setState(prevState => ({timer: prevState.timer - 1}))\n      }, 1000);\n      this.setState({timerStarted: true});\n    } else if (this.state.timer === 0) {\n      this.props.history.push({pathname: `/${this.props.peykName}/formsession/${this.state.formSessionId}`});\n    }\n  }\n\n  updateMimeInfo() {\n    let self = this;\n    let params = {\n      url: `/signer/writeFormMimeInfo`,\n      method: \"post\",\n      data: {\n        formSessionId: parseInt(self.props.location.formSessionId),\n        kepAccountId: self.state.kepAccountId && parseInt(self.state.kepAccountId),\n        title: self.state.mimeTitle,\n        body: self.state.mimeBody\n      }\n    };\n    self.setState({pageState: 10, alert: null, disableButton: true});\n    requestK(params)\n      .then(function (response) {\n        self.updateMimeCertificates()\n      })\n      .catch(function (error) {\n        showAxiosError(error);\n        self.setState({pageState: 40, disableButton: false});\n      });\n  }\n\n  updateMimeCertificates() {\n    let self = this;\n    let params = {\n      url: `/formsession/createFormMimeSignedInfoList`,\n      method: \"post\",\n      data: {\n        formSessionId: parseInt(self.state.formSessionId),\n        hsmType: self.state.mimeCertificate.hsmType,\n        certificate: self.state.mimeCertificate.value,\n        certificateKeyId: self.state.mimeCertificate.keyId\n      }\n    };\n    self.setState({pageState: 20});\n    requestK(params)\n      .then(function (response) {\n        self.setState({signedInfoList: response.data});\n        self.signMimes();\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({loading: false, disableButton: false});\n    });\n  }\n\n  signMimes() {\n    let p = Promise.resolve([]);\n    let signedMime = [];\n\n    this.setState({\n      progressLength: this.state.signedInfoList.length,\n      loading: true,\n      pageState: 30\n    });\n\n    this.state.signedInfoList.forEach((element, index) => {\n      p = p.then((response) => {\n        this.setState({pdfName: element.pdfName});\n        return this.axios.post(\"/signature/signedinfo?hsmtype=\" + element.hsmType, {\n          base64: true,\n          pin: this.state.pin,\n          signedInfo: element.signedInfo,\n          certificate: {\n            keyId: element.certificateKeyId\n          }\n        }).then((response) => {\n          signedMime.push({\n            id: element.id,\n            signature: response.data.signedDocument\n          });\n          this.writeSignedMime(signedMime);\n          signedMime = [];\n        });\n      });\n    });\n\n    p.then((result) => {\n      this.setState({\n        loading: false,\n        completed: true\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        completed: false,\n        disableButton: false,\n        alert: <HsmErrorAlert error={error} onConfirm={() => this.setState({alert: null})}/>\n      });\n    });\n  }\n\n  writeSignedMime(signedMime) {\n    let self = this;\n    let params = {\n      url: `/formsession/writeFormMimeSignatureList`,\n      method: \"post\",\n      data: signedMime\n    };\n    requestK(params)\n      .then(function (response) {\n        self.setState((prevState, props) => {\n          return {signedDocumentCount: prevState.signedDocumentCount + 1}\n        });\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({pageState: 40, disableButton: false});\n    });\n  }\n\n  renderNavButtons() {\n    return (\n      <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n        <StickButton position=\"leftSide\" className=\"zocial GeriDon\" style={{fontSize: 'small'}}\n                     label=\"Geri\" title=\"Önceki Sayfaya Git\"\n                     onClick={() => this.props.history.push(`/${this.props.peykName}/formsession/${this.state.formSessionId}`)}/>\n        {checkGrantToDisplay(this, [FORM_SEND, ISG_FORM_SEND, HEALTH_FORM_SEND, ZIMMET_FORM_SEND, KVKK_FORM_SEND]) &&\n        <StickButton position=\"leftSide\" className=\"zocial Imza\" style={{fontSize: 'small'}}\n                     label=\"İmzala\" title=\"İleti Oluştur ve İmzala\"\n                     disabled={this.state.disableButton}\n                     onClick={() => {\n                       if (this.state.mimeCertificate && this.state.mimeCertificate.hsmType &&\n                         this.state.mimeCertificate.value && this.state.mimeCertificate.keyId) {\n                         if (this.state.kepAccountId === undefined) {\n                           this.setState({\n                             alert: (\n                               <SweetAlert warning\n                                           confirmBtnText=\"Tamam\"\n                                           confirmBtnBsStyle=\"warning\"\n                                           title=\"Uyarı\"\n                                           onConfirm={() => {\n                                             this.setState({alert: null});\n                                           }\n                                           }>\n                                 Kep hesabı seçimi yapınız.\n                               </SweetAlert>\n                             )\n                           });\n                         } else {\n                           this.setState({\n                             alert: (\n                               <SweetAlert showCancel warning\n                                           confirmBtnText=\"Evet\"\n                                           cancelBtnText=\"Hayır\"\n                                           confirmBtnBsStyle=\"danger\"\n                                           cancelBtnBsStyle=\"default\"\n                                           title=\"Emin misiniz?\"\n                                           onConfirm={this.updateMimeInfo}\n                                           onCancel={() => this.setState({alert: null})}\n                               >\n                                 İletiler imzalanacak.\n                               </SweetAlert>\n                             )\n                           });\n                         }\n                       } else {\n                         this.setState({\n                           alert: <HsmErrorAlert error={this.state.certError}\n                                                 onConfirm={() => this.setState({alert: null})}/>\n                         });\n                       }\n                     }}/>}\n      </Nav>\n    );\n  }\n\n  renderState() {\n    let stateMap = this.stateMap[this.state.pageState];\n\n    return <div className=\"row\" style={{marginBottom: \"15px\"}}>\n      <Col sm={12}>\n        <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n          {stateMap.wait && <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={24} width={24}/>}\n        </div>\n        <div style={{\n          display: \"inline-block\", marginRight: \"8px\", position: \"relative\", top: \"-6px\",\n          color: stateMap.danger === true ? \"trueColor\" : \"falseColor\"\n        }}>\n          {stateMap.label}\n        </div>\n      </Col>\n    </div>;\n  }\n\n  renderMimeInputs() {\n\n    return <div className=\"FormRenk\">\n      <Row sm={6}>\n        <Col sm={2} style={{top: '7px'}}>\n          Kep Hesabı\n        </Col>\n        <Col sm={6}>\n          {this.state.kepAccountList &&\n          <Input type=\"select\" value={this.state.kepAccountId} disabled={this.state.pageState !== 0}\n                 onChange={(e) => this.setState({kepAccountId: e.target.value})}>\n            {[<option key=\"0\" value=\"\">Seçiniz</option>, ...this.state.kepAccountList.map(e => <option\n              key={e.id} value={e.id}>{e.account}</option>)]}\n          </Input>\n          }\n          {!this.state.kepAccountList &&\n          <Input type=\"select\" value={this.state.kepAccountId}\n                 onChange={(e) => this.setState({kepAccountId: e.target.value})}>\n            {[<option key=\"0\" value=\"\">Seçiniz</option>]}\n          </Input>\n          }\n        </Col>\n      </Row>\n      <Row sm={6}>\n        <Col sm={2} style={{top: '5px'}}>\n          Kep Konu\n        </Col>\n        <Col sm={6}>\n          <Input type=\"text\" style={{marginTop: '2px'}} disabled={this.state.pageState !== 0}\n                 value={this.state.mimeTitle}\n                 onChange={(e) => this.setState({mimeTitle: e.target.value})}/>\n        </Col>\n      </Row>\n      <Row sm={6}>\n        <Col sm={2} style={{top: '25px'}}>\n          Kep İçerik\n        </Col>\n        <Col sm={6}>\n          <Input type=\"textarea\" rows={5} disabled={this.state.pageState !== 0}\n                 style={{\n                   height: '200px',\n                   border: '1px solid #E3E3E3',\n                   marginTop: '2px',\n                   padding: '3px 3px'\n                 }}\n                 value={this.state.mimeBody}\n                 onChange={(e) => this.setState({mimeBody: e.target.value})}/>\n        </Col>\n      </Row>\n    </div>\n  }\n\n  render() {\n\n    return (\n      <Row className=\"baseBackground\">\n        <Notify ref=\"notify\"/>\n        {this.state.alert}\n        {this.renderNavButtons()}\n        <div className=\"row satirBasi\">\n          <Col md=\"12\">\n            <Card className=\"card\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">\n                  İmzala & Gönder\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                {this.props.location.formSessionId && this.renderState()}\n              </CardBody>\n              <CardBody>\n                {this.props.location.formSessionId && this.renderMimeInputs()}\n              </CardBody>\n              <CardBody>\n                {this.props.location.formSessionId &&\n                <HsmCertificateViewer value={this.state.mimeCertificate}\n                                      onChange={(val) => this.setState({mimeCertificate: val})}\n                                      pinValueChange={(val) => this.setState({pin: val})}\n                                      certificateError={(val) => this.setState({certError: val})}\n                                      pdfName={this.state.pdfName ? this.state.pdfName : \"\"}\n                                      progressLength={this.state.progressLength}\n                                      signedDocumentCount={this.state.signedDocumentCount}\n                                      displayCertificateMenu={this.state.pageState === 0 || this.state.pageState === 40}\n                                      userId={this.props.currentUser && this.props.currentUser.id}/>}\n              </CardBody>\n            </Card>\n          </Col>\n        </div>\n      </Row>\n\n    );\n  }\n\n}\n\nexport default SignFormMimePage;\n"],"sourceRoot":""}