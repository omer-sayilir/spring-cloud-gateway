{"version":3,"sources":["accounting/kepik/bordrosession/helper/ProcessCode.js","accounting/kepik/bordro/component/BordroTableIdSelected.js","accounting/kepik/bordrosession/SignBordroHsmPage.js"],"names":["ProcessCode","SIGNBORDRO","code","SIGNMIME","RESENDMIME","BordroTableIdSelected","Component","constructor","props","super","getEmployeeId","async","self","this","params","url","state","content","employee","id","method","response","requestK","setState","employeeUserId","data","error","showAxiosError","loading","getApprovalUserId","approvalUserId","alert","selection","manual","total","page","size","fetchData","bind","previewBordro","setMediaViewer","accessor","direction","sortStr","undefined","processCode","selectedBordroIdList","searching","then","bordroSession","totalElements","React","createElement","SweetAlert","confirmBtnText","confirmBtnBsStyle","title","onConfirm","history","push","pathname","peykName","toggleModal","length","message","Alert","warning","position","effect","timeout","updateFlowTimeout","onComplete","selectedIdList","readFlowTimeoutTemplate","readTimeoutTemplate","catch","mediaModal","row","responseType","blob","Blob","type","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","result","render","columnList","Header","Cell","term","moment","format","name","className","parsedTckn","surname","kepAddress","style","margin","warningCount","DocumentState","messageType","sortable","textAlign","onClick","e","columns","renewListForKepOwnership","isKepOwner","ApproveDocumentViewer","modal","listener","closeModal","Table","options","SignBordroHsmPage","readSmsTemplate","smsBody","readMailTemplate","mailBody","isNoTemplateValid","mailTitle","trim","completed","signedDocumentCount","progressLength","pageStatus","timer","timerStarted","certError","disableButton","sign","signDocuments","updateMailInfo","stateMap","0","label","10","wait","30","40","danger","50","60","componentWillMount","location","monthNames","yearInput","monthInput","componentDidUpdate","setInterval","prevState","backToTheFuture","from","bordroSessionId","body","selectedBordros","timerStatus","status","onTimerStatus","success","HsmErrorAlert","renderNavButtons","Nav","paddingLeft","height","StickButton","fontSize","disabled","showCancel","cancelBtnText","cancelBtnBsStyle","onCancel","renderState","marginBottom","Col","sm","display","marginRight","ReactLoading","color","width","top","renderMailInputs","Row","Input","marginTop","value","onChange","target","rows","border","padding","renderSignProgress","percentage","textList","bordroName","split","paddingRight","fontWeight","Progress","Math","round","renderBordroList","pageSize","flag","Notify","ref","md","Card","CardHeader","CardTitle","tag","CardBody"],"mappings":"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","file":"static/js/23.b0605b65.chunk.js","sourcesContent":["let ProcessCode = {\n    SIGNBORDRO: {\n        code: 0\n    },\n    SIGNMIME: {\n        code: 1\n    },\n    RESENDMIME: {\n        code: 2\n    }\n};\n\nexport default ProcessCode;","import React, {Component} from 'react';\nimport Table from \"../../../../components/Table/Table\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport 'react-datetime/css/react-datetime.css'\nimport moment from 'moment';\nimport 'moment/locale/tr'\nimport Alert from \"react-s-alert\";\nimport ProcessCode from \"../../bordrosession/helper/ProcessCode\";\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {renewListForKepOwnership} from \"../../common/PeykHelper\";\nimport DocumentState from \"../../common/DocumentState\";\nimport ApproveDocumentViewer from \"../../approval/helper/ApproveDocumentViewer\";\n\nclass BordroTableIdSelected extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      alert: null,\n      selection: [],\n      manual: false,\n      content: [],\n      total: 0,\n      page: 0,\n      size: 10\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.previewBordro = this.previewBordro.bind(this);\n    this.setMediaViewer = this.setMediaViewer.bind(this);\n  }\n\n  getEmployeeId = async () => {\n    let self = this;\n    let employeeId = this.state.content[0].employee.id;\n    let params = {\n      url: `/employee/getEmployeeId/${employeeId}`,\n      method: \"post\"\n    };\n\n    try {\n      let response = await requestK(params);\n      self.setState({\n        employeeUserId: response.data\n      });\n    } catch (error) {\n      showAxiosError(error);\n      self.setState({ loading: false });\n    }\n  };\n\n  getApprovalUserId = async () => {\n    let self = this;\n    let approvalId = this.state.content[0].id;\n    let params = {\n      url: `/approval/getApprovalUserId/${approvalId}`,\n      method: \"post\"\n    };\n\n    try {\n      let response = await requestK(params);\n      self.setState({\n        approvalUserId: response.data\n      });\n    } catch (error) {\n      showAxiosError(error);\n      self.setState({ loading: false });\n    }\n  };\n\n  fetchData(accessor, direction, page, size) {\n    let self = this;\n    let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '';\n    let params = {\n      url: '/bordro/readBordroAllByIds?processCode=' + self.props.processCode + '&page=' + page + '&size=' + size + sortStr,\n      method: \"post\",\n      data: self.props.selectedBordroIdList\n    };\n    self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n    requestK(params)\n        .then(async function (response) {\n        let id = self.props.bordroSession && self.props.bordroSession.id;\n        if (response.data.page && response.data.page.totalElements === 0) {\n          self.setState({\n            alert: (<SweetAlert error\n                                confirmBtnText=\"Tamam\"\n                                confirmBtnBsStyle=\"danger\"\n                                title=\"Hata\"\n                                onConfirm={() => {\n                                  id ?\n                                    self.props.history.push({pathname: `/${self.props.peykName}/bordroimport/` + id}) :\n                                    self.setState({alert: null});\n                                    self.props.toggleModal && self.props.toggleModal(true);\n                                }}>\n              {self.props.processCode === ProcessCode.RESENDMIME.code && \"Seçilen alıcıların onayda bekleyen gönderileri bulunmamaktadır.\"}\n              {self.props.processCode === ProcessCode.SIGNBORDRO.code && \"Seçilen ücret bordrolarının imzalı iletiler bulunduğu veya çalışan eşleşmesi yapılmamış olduğu için bu işlem yapılamaz.\"}\n              {self.props.processCode === ProcessCode.SIGNMIME.code && \"Seçilen ücret bordrolarının imzalı iletiler bulunduğu veya çalışan eşleşmesi yapılmamış olduğu için bu işlem yapılamaz.\"}\n            </SweetAlert>),\n            loading: false\n          });\n          return;\n        } else if (response.data.page && response.data.page.totalElements < self.props.selectedBordroIdList.length) {\n          self.props.toggleModal(false);\n          let message = self.props.processCode === ProcessCode.RESENDMIME.code ? 'Tekrar gönderime hazır bordrolar seçilmiştir.' :\n            (self.props.processCode === ProcessCode.SIGNBORDRO.code ? 'Çalışan eşleşmesi olmayanlar ve daha önce gönderilmiş bordro listeden çıkarılmıştır.' :\n              'Çalışan eşleşmesi olmayanlar ve daha önce gönderilmiş bordro listeden çıkarılmıştır.');\n          Alert.warning(message, {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 8000\n          });\n        }\n\n        self.setState({\n          page: page,\n          size: size,\n          total: response.data.page && response.data.page.totalElements,\n          content: response.data.page && response.data.page.content,\n          loading: false\n        }, () => {\n          if (response.data.page.content[0].state === \"FLOW_TIMEOUT\") {\n            self.props.updateFlowTimeout(true);\n          }\n        self.props.onComplete(response.data.selectedIdList);\n        });\n          if(response.data.page.content[0].state === 'FLOW_TIMEOUT'){\n            await self.getEmployeeId();\n            await self.getApprovalUserId();\n            if (self.state.approvalUserId === self.state.employeeUserId) {\n              self.props.readFlowTimeoutTemplate();\n            } else {\n              self.props.readTimeoutTemplate();\n            }\n          }\n      }).catch(function (error) {\n      self.setState({loading: false});\n      showAxiosError(error);\n    });\n  }\n\n  setMediaViewer() {\n    this.setState({url: null, mediaModal: false});\n  }\n\n  previewBordro(row) {\n    let self = this;\n    let params = {\n      url: `/bordro/previewBordroContent`,\n      responseType: 'arraybuffer',\n      method: \"post\",\n      data: row.id\n    };\n    self.setState({mediaModal: true});\n    requestK(params)\n      .then(function (response) {\n        let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n        let base64Data=\"\";\n        if (blob != undefined) {\n          let reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = function() {\n            base64Data = reader.result;\n            self.setState({url: base64Data});\n          }\n        }\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({mediaModal: false});\n    });\n  }\n\n  render() {\n\n    let columnList = [\n      {\n        Header: \"Dönem\",\n        accessor: \"term\",\n        Cell: row => (\n          <div>\n            {!!row.term && moment(row.term, 'YYYY/MM/DD').format('YYYY/MM')}\n          </div>\n        )\n      },\n      {\n        Header: \"TCKN\",\n        accessor: \"parsedTckn\",\n        Cell: row => (\n          <div>\n            {(row.employee && row.employee.name) && <span className=\"text-success\">{row.parsedTckn}</span>}\n            {!(row.employee && row.employee.name) && <span className=\"text-danger\">{row.parsedTckn}</span>}\n          </div>\n        )\n      },\n      {\n        Header: \"Adı\",\n        accessor: \"employee_name\",\n        Cell: row => (<div>{row.employee && row.employee.name}</div>\n        )\n      },\n      {\n        Header: \"Soyadı\",\n        accessor: \"employee_surname\",\n        Cell: row => (<div>{row.employee && row.employee.surname}</div>\n        )\n      },\n      {\n        Header: \"Kep Adresi\",\n        accessor: \"employee_kepAddress\",\n        Cell: row => (\n          <div>\n            {row.employee && row.employee.kepAddress}\n          </div>\n        )\n      },\n      {\n        Header: \"Uyarı Sayısı\",\n        accessor: \"warningCount\",\n        Cell: row => (\n            <div style={{margin: 0}}>\n              {row.warningCount}\n            </div>\n        )\n      },\n      {\n        Header: \"Durumu\",\n        accessor: \"state\",\n        Cell: row => (\n          <div>\n            {row.error && <span className=\"text-danger\">{row.error}</span>}\n            {!row.error &&\n            <span\n              className={\"text-\" + DocumentState[row.state].messageType}>{DocumentState[row.state].message}</span>}\n          </div>\n        )\n      },\n      {\n        Header: \"İşlemler\",\n        sortable: false,\n        accessor: \"\",\n        Cell: row => (\n          <div style={{textAlign: 'left'}}>\n            <button title=\"Ücret Bordrosu Görüntüle\" className=\"btn-icon btn btn-info btn-sm\"\n                    style={{margin: '0px 3px'}}\n                    onClick={e => this.previewBordro(row)}>\n              <i className=\"now-ui-icons ui-1_zoom-bold\"/>\n            </button>\n          </div>\n        )\n      }\n    ];\n    let columns = renewListForKepOwnership(columnList, \"accessor\", this.props.isKepOwner);\n    return <div>\n      {this.state.mediaModal &&\n      <ApproveDocumentViewer modal={this.state.mediaModal}\n                             url={this.state.url}\n                             title=\"Ücret Bordrosu\"\n                             listener={this.setMediaViewer}\n                             closeModal={this.setMediaViewer}/>\n      }\n      <Table columns={columns}\n             content={this.state.content}\n             loading={this.props.loading ? this.props.loading : this.state.loading}\n             total={this.state.total}\n             page={this.state.page}\n             manual={this.state.manual}\n             size={this.state.size}\n             options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n             fetchData={this.fetchData}\n      />\n      {this.state.alert}\n    </div>;\n  }\n}\n\nexport default BordroTableIdSelected;\n","import React, {Component} from 'react';\nimport {Card, CardBody, CardHeader, CardTitle, Col, Input, Nav, Progress, Row} from 'reactstrap';\nimport 'react-table/react-table.css'\nimport Notify from 'react-notification-alert';\nimport 'react-datetime/css/react-datetime.css'\nimport 'moment/locale/tr'\nimport HsmErrorAlert from '../../../common/hsm/HsmErrorAlert'\nimport BordroTableIdSelected from \"../bordro/component/BordroTableIdSelected\";\nimport ReactLoading from 'react-loading';\nimport StickButton from \"../../../components/StickButton\";\nimport ProcessCode from \"./helper/ProcessCode\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport moment from \"moment\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Alert from 'react-s-alert';\n\nclass SignBordroHsmPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      completed: false,\n      signedDocumentCount: 0,\n      progressLength: 1,\n      pageStatus: 0,\n      selectedBordroIdList: [],\n      timer: 1,\n      timerStarted: false,\n      certError: true,\n      disableButton: false\n    };\n\n    this.sign = this.sign.bind(this);\n    this.signDocuments = this.signDocuments.bind(this);\n    this.updateMailInfo = this.updateMailInfo.bind(this);\n\n    this.stateMap = {\n      0: {\n        label: \"Pdf dosyaları imzalama için hazır. İmzalayınız\",\n      },\n      10: {\n        label: \"İletiler oluşturuluyor. Lütfen bekleyiniz.\",\n        wait: true\n      },\n      30: {\n        label: \"Pdf dosyaları imzalanıyor. Lütfen bekleyiniz\",\n      },\n      // İmzalanamadı ise;\n      40: {\n        label: \"Pdf dosyaları imzalanamadı. Lütfen bilgileri kontrol ediniz.\",\n        danger: true\n      },\n      50: {\n        label: \"Pdf dosyaları imzalandı.\"\n      },\n      60: {\n        label: \"\"\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.setState({selectedBordroIdList: this.props.location.selectedBordroIdList});\n    if (this.props.location.bordroSession) {\n      let monthNames = [\"Ocak\", \"Şubat\", \"Mart\", \"Nisan\", \"Mayıs\", \"Haziran\", \"Temmuz\", \"Ağustos\", \"Eylül\", \"Ekim\", \"Kasım\", \"Aralık\"];\n      let yearInput = moment(this.props.location.bordroSession.term, 'YYYY/MM/DD').format('YYYY');\n      let monthInput = moment(this.props.location.bordroSession.term, 'YYYY/MM/DD').format('M');\n      this.setState({mailTitle: `${monthNames[monthInput - 1]} ${yearInput} Ücret Bordrosu Bildirimi`});\n      this.setState({\n        mailBody: \"4857 Sayılı İş Kanunu 37. ve 109. maddeleri hükmünce işveren tarafından hazırlanan \" +\n          monthNames[monthInput - 1] + \" \" + yearInput +\n          \" dönemine ilişkin ücret bordrosu tarafınıza tebliğ edilmiştir.\"\n      });\n      this.readSmsTemplate();\n      this.readMailTemplate();\n    }\n  }\n\n  readSmsTemplate = () => {\n    let self = this;\n    let params = {\n      url: `/signer/readBordroSmsTemplateInfo`,\n      method: \"get\"\n    };\n    requestK(params)\n      .then(function (response) {\n        self.setState({smsBody: response.data})\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n  };\n\n  readMailTemplate = () => {\n    let self = this;\n    let params = {\n      url: `/signer/readBordroMailTemplateInfo`,\n      method: \"get\"\n    };\n    requestK(params)\n      .then(function (response) {\n        if (response.data) {\n          self.setState({mailBody: response.data})\n        }\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n  };\n\n  componentDidUpdate() {\n    if (this.state.timer === 1 && !this.state.timerStarted &&\n        this.state.completed && this.state.signedDocumentCount === this.state.progressLength) {\n      setInterval(() => {\n        this.setState(prevState => ({timer: prevState.timer - 1}))\n      }, 4000);\n      this.setState({timerStarted: true});\n    } else if (this.state.timer === 0) {\n      this.setState({backToTheFuture: true});\n    }\n    if (this.state.backToTheFuture) {\n      this.props.history.push({\n        pathname: `/${this.props.peykName}/bordroimport/` + this.props.location.bordroSession.id,\n        from: \"sign\"\n      });\n    }\n  }\n\n  isNoTemplateValid = () => {\n    if (this.state.mailTitle.trim() === \"\") {\n      Alert.error(\"E-Posta İleti Konusu alanı boş bırakılamaz.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 5000\n      });\n      this.setState({alert: null});\n      return false;\n    } else if (this.state.mailBody.trim() === \"\") {\n      Alert.error(\"E-Posta İleti İçeriği alanı boş bırakılamaz.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 5000\n      });\n      this.setState({alert: null});\n      return false;\n    } else if (this.state.smsBody.trim() === \"\") {\n      Alert.error(\"SMS İleti İçeriği alanı boş bırakılamaz.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 5000\n      });\n      this.setState({alert: null});\n      return false;\n    }else{\n      return true;\n    }\n  }\n  sign() {\n    if(this.isNoTemplateValid()){\n      this.updateMailInfo();\n    }\n  }\n\n  updateMailInfo() {\n    let self = this;\n    let selectedBordroIdList = self.state.selectedBordroIdList ? self.state.selectedBordroIdList : self.props.location.selectedBordroIdList;\n    let params = {\n      url: `/signer/writeMailInfo`,\n      method: \"post\",\n      data: {\n        bordroSessionId: self.props.location.bordroSession.id,\n        title: self.state.mailTitle,\n        body: self.state.mailBody,\n        smsBody: self.state.smsBody,\n        selectedBordros: selectedBordroIdList\n      }\n    };\n    self.setState({selectedBordroIdList, pageStatus: 10, alert: null});\n    requestK(params)\n      .then(function (response) {\n        self.signDocuments();\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({pageStatus: 40, disableButton: false});\n    });\n  }\n\n  timerStatus(status){\n    this.props.onTimerStatus(status);\n  };\n\n  signDocuments() {\n    let self = this;\n    self.setState({\n      progressLength: self.state.selectedBordroIdList.length,\n      loading: true,\n      pageStatus: 30\n    });\n    this.timerStatus(true);\n    requestK({\n      url: `/signer/hsm-sign-bordro-list`,\n      method: \"post\",\n      data: self.state.selectedBordroIdList\n    }).then((response) => {\n      Alert.success(response.data);\n      self.stateMap[60].label = response.data;\n      self.setState({\n        loading: false,\n        completed: true,\n        pageStatus: 60\n      });\n      setInterval(() => {\n        self.setState({backToTheFuture: true})\n      }, 2000);\n    }).catch(error => {\n      self.setState({\n        loading: false,\n        completed: true,\n        pageStatus: 40,\n        disableButton: false,\n        alert: <HsmErrorAlert error={error} onConfirm={() => self.setState({alert: null})}/>\n      });\n      this.timerStatus(false);\n    });\n  }\n\n  renderNavButtons() {\n    return (\n      <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n        <StickButton position=\"leftSide\" className=\"zocial GeriDon\" style={{fontSize: 'x-small'}}\n                     label=\"Geri\" title=\"Önceki Sayfaya Git\"\n                     onClick={() => this.props.history.push({\n                       pathname: `/${this.props.peykName}/bordroimport/` + this.props.location.bordroSession.id,\n                       selectedBordroIdList: this.props.location.selectedBordroIdList\n                     })}/>\n        <StickButton position=\"leftSide\" className=\"zocial Imza\" style={{fontSize: 'x-small'}}\n                     label=\"İmzala\" title=\"Ücret Bordrolarını İmzala\"\n                     disabled={this.state.disableButton}\n                     onClick={() => {\n                       this.setState({\n                         alert: (\n                           <SweetAlert showCancel warning\n                                       confirmBtnText=\"Evet\"\n                                       cancelBtnText=\"Hayır\"\n                                       confirmBtnBsStyle=\"success\"\n                                       cancelBtnBsStyle=\"default\"\n                                       title=\"Emin Misiniz?\"\n                                       onConfirm={() => this.sign()}\n                                       onCancel={() => this.setState({alert: null})}\n                           >\n                             Dokümanlar imzalanıp Tübitak zaman damgası ile mühürlenerek gönderilecektir.\n                           </SweetAlert>\n                         )\n                       });\n                     }}/>\n      </Nav>\n    );\n  }\n\n  renderState() {\n    let stateMap = this.stateMap[this.state.pageStatus];\n\n    return <div className=\"row\" style={{marginBottom: \"15px\"}}>\n      <Col sm={12}>\n        <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n          {stateMap.wait && <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={24} width={24}/>}\n        </div>\n        <div style={{\n          display: \"inline-block\", marginRight: \"8px\", position: \"relative\", top: \"-6px\",\n          color: stateMap.danger === true ? \"trueColor\" : \"falseColor\"\n        }}>\n          {stateMap.label}\n        </div>\n      </Col>\n    </div>\n  }\n\n  renderMailInputs() {\n\n    return <div className=\"FormRenk\">\n      <Row sm={6}>\n        <Col sm={2} style={{top: '5px'}}>\n          E-Posta Konu\n        </Col>\n        <Col sm={6}>\n          <Input type=\"text\" style={{marginTop: '2px'}}\n                 value={this.state.mailTitle}\n                 onChange={(e) => this.setState({mailTitle: e.target.value})}/>\n        </Col>\n      </Row>\n      <Row sm={6}>\n        <Col sm={2} style={{top: '25px'}}>\n          E-Posta İçerik\n        </Col>\n        <Col sm={6}>\n          <Input type=\"textarea\" rows={5}\n                 style={{\n                   height: '200px',\n                   border: '1px solid #E3E3E3',\n                   marginTop: '2px',\n                   padding: '3px 3px'\n                 }}\n                 value={this.state.mailBody}\n                 onChange={(e) => this.setState({mailBody: e.target.value})}/>\n        </Col>\n      </Row>\n      <Row sm={6}>\n        <Col sm={2} style={{top: '25px'}}>\n          SMS İçerik\n        </Col>\n        <Col sm={6}>\n          <Input type=\"textarea\" rows={5}\n                 style={{\n                   height: '200px',\n                   border: '1px solid #E3E3E3',\n                   marginTop: '2px',\n                   padding: '3px 3px'\n                 }}\n                 value={this.state.smsBody}\n                 onChange={(e) => this.setState({smsBody: e.target.value})}/>\n        </Col>\n      </Row>\n    </div>\n  }\n\n  renderSignProgress() {\n    let percentage = this.state.signedDocumentCount * 100 / this.state.progressLength;\n    let textList = this.state.bordroName && this.state.bordroName.split(\"#\");\n\n    return <div className=\"FormRenk\" style={{paddingRight: '35px'}}>\n      <div className=\"component-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            İmzalanan dosya:\n          </div>\n          <div className=\"col-sm-12\">\n            {this.state.bordroName &&\n            <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n              <span>{textList[0]}</span>\n              <span style={{fontWeight: 'bold'}}>{textList[1]}</span>\n              <span>{textList[2]}</span>\n              <span style={{fontWeight: 'bold'}}>{textList[3]}</span>\n              <div style={{\n                display: \"inline-block\",\n                marginRight: \"8px\",\n                position: 'absolute',\n                top: '5px',\n                paddingLeft: '2px'\n              }}>\n                <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={12} width={12}/>\n              </div>\n            </div>}\n          </div>\n          <div className=\"col-sm-12\">\n            <Progress value={percentage}>{\"%\" + Math.round(percentage)}</Progress>\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n\n  renderBordroList() {\n    return <BordroTableIdSelected bordroSession={this.props.bordroSession}\n                                  selectedBordroIdList={this.props.location.selectedBordroIdList}\n                                  onComplete={e => this.setState({selectedBordroIdList: e})}\n                                  pageSize={10} history={this.props.history} peykName={this.props.peykName}\n                                  processCode={ProcessCode.SIGNBORDRO.code}\n                                  toggleModal={(flag) => this.setState({disableButton: flag})}/>\n  }\n\n  render() {\n    return (\n      <Row className=\"baseBackground\">\n        <Notify ref=\"notify\"/>\n        {this.state.alert}\n        {this.renderNavButtons()}\n        <div className=\"row satirBasi\">\n          <Col md=\"12\">\n            <Card className=\"card\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">\n                  Ücret Bordrosu İmzala\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                {this.props.location.bordroSession && this.renderState()}\n              </CardBody>\n              <CardBody>\n                {this.props.location.bordroSession && this.renderMailInputs()}\n              </CardBody>\n              <CardBody>\n                {this.state.loading && this.renderSignProgress()}\n              </CardBody>\n              <CardBody>\n                {this.props.location.bordroSession && this.renderBordroList()}\n              </CardBody>\n            </Card>\n          </Col>\n        </div>\n      </Row>\n\n    );\n  }\n}\n\nexport default SignBordroHsmPage;\n"],"sourceRoot":""}