{"version":3,"sources":["accounting/kepik/form/FormReportPage.js"],"names":["dropdownCheckRef","React","createRef","detailedSearchRef","FormReportPage","Component","constructor","props","super","videos","title","id","switchVideo","video","this","setState","showEczaciHelpModal","readDepartmentAll","self","requestK","url","method","then","response","departmentList","data","catch","error","showAxiosError","filterForCurrentTerm","searchQuery","monthly","state","flagForHomePage","location","selectedTerm","Alert","success","position","effect","timeout","arrangeDataSet","type","dataSet","uuid","create_UUID","list","selection","downloadBulkContent","length","params","alert","createElement","SweetAlert","info","confirmBtnText","confirmBtnBsStyle","onConfirm","callback","action","shouldRun","flag","joyrideActive","activateJoyride","resendMimeRow","row","push","resend","resendMimeList","warning","loading","manual","selectedAll","content","totalIdList","pageNumber","pageSize","total","searching","page","size","searchKey","isKepOwner","showOnlySents","disabledDeleteBtn","steps","target","placement","locale","back","close","last","next","skip","stop","fetchData","bind","searchWithKey","handleSearch","isSelected","previewContent","downloadContent","downloadMedia","setMediaViewer","openFormSession","toggleCheckboxChange","deleteForm","deleteList","deleteSession","previewSignedContent","componentWillMount","jobTitlesData","getJobTitles","componentDidMount","formTypeList","accessor","direction","sessionId","showCancel","cancelBtnText","cancelBtnBsStyle","disabled","onCancel","reload","e","value","sortStr","undefined","includes","_dropdownCheckRef$cur","_dropdownCheckRef$cur2","match","current","selectionTag","_dropdownCheckRef$cur3","_dropdownCheckRef$cur4","totalElements","selectedIdList","_self$state","history","pathname","peykName","formSessionId","previousPage","mediaModal","responseType","html","blob","Blob","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","result","selectedRow","URL","createObjectURL","index","disabledDownloadBtn","loadingType","link","document","href","window","createdAt","toString","substring","indexOf","fileName","employee","name","surname","Math","floor","random","download","body","appendChild","timeStamp","formTimeStamp","base64_arraybuffer","decode","linkTs","click","source","_dropdownCheckRef$cur5","_dropdownCheckRef$cur6","checked","items","forEach","item","slice","width","render","pageIdList","Array","map","columnList","Header","DropdownCheck","selectionIdList","ref","onChange","_dropdownCheckRef$cur7","_dropdownCheckRef$cur8","_dropdownCheckRef$cur9","_dropdownCheckRef$cur10","selectType","sortable","Cell","formType","category","style","margin","whiteSpace","TextOverFlowTooltip","text","formName","maxLength","department","jobTitle","tckn","kepAddress","moment","isValid","format","className","conditionalApproveAllowed","isAnswerable","declineAllowed","color","submissionType","warningCount","DocumentState","messageType","message","padding","WebkitTextFillColor","data-toggle","aria-labelledby","checkGrantToDisplay","FORM_SEND","onClick","pointerEvents","cursor","downloadApproveDocument","FORM_OPERATIONS","stateDetail","columns","renewListForPrivileges","newList","fieldList","label","operator","selectData","stateData","departmentData","statusTypeFilterData","formTypeData","formSendTypeData","fields","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","options","zIndex","primaryColor","Nav","paddingLeft","height","StickButton","fontSize","FORMS_ARCHIVE","disabledDeleteSelectedBtn","aria-haspopup","aria-expanded","i","key","marginTop","marginBottom","DetailedSearch","onSearch","marginLeft","Table","Notify","ApproveDocumentViewer","modal","closeModal","canvas","StateDetail","detail","currentUser","documentType","toggle","VideoModal","isOpen"],"mappings":"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","file":"static/js/41.9978a0ba.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Table from \"../../../components/Table/Table\";\nimport 'react-table/react-table.css'\nimport Notify from 'react-notification-alert';\nimport 'moment/locale/tr';\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport {checkGrantToDisplay, create_UUID, showAxiosError} from \"../../../helper/helper\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {\n    departmentData,\n    downloadApproveDocument,\n    formSendTypeData,\n    formTypeData,\n    getJobTitles,\n    renewListForPrivileges,\n    stateData,\n    statusTypeFilterData\n} from \"../common/PeykHelper\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport \"../../../helper/explorer_support\";\nimport Alert from \"react-s-alert\";\nimport ApproveDocumentViewer from \"../approval/helper/ApproveDocumentViewer\";\nimport DocumentState from \"../common/DocumentState\";\nimport StateDetail from \"../common/StateDetail\";\nimport moment from \"moment\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport {Nav} from \"reactstrap\";\nimport StickButton from \"../../../components/StickButton\";\nimport DropdownCheck from \"../../../components/Table/DropdownCheck\";\nimport VideoModal from \"../../../components/VideoModal\";\nimport Joyride from \"react-joyride\";\nimport {FORM_OPERATIONS, FORM_SEND, FORMS_ARCHIVE} from \"../../../common/authorities/GrantDef\";\nimport base64_arraybuffer from \"base64-arraybuffer\";\n\nconst dropdownCheckRef = React.createRef();\nconst detailedSearchRef = React.createRef();\nclass FormReportPage extends Component {\n    videos = [\n        {title: \"formlar\", id: \"lTjRaQZI4_Y\"},\n    ];\n    switchVideo = (video) => {\n        this.setState({video: video, showEczaciHelpModal: true})\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selection: [],\n            selectedAll: false,\n            content: [],\n            totalIdList: [],\n            pageNumber: 0,\n            pageSize: 10,\n            loading: false,\n            manual: false,\n            total: 0,\n            searching: false,\n            page: 0,\n            size: 10,\n            searchKey: \"\",\n            isKepOwner: false,\n            showOnlySents: false,\n            flagForHomePage: true,\n            disabledDeleteBtn: false,\n            steps: [\n                {\n                    target: '.form-control',\n                    content: \"Tüm formlar burada görüntülenir. Her biri için 'Seçiniz' menüleri altından 'Durum Detayı' butonuna tıklanarak onaylanma durumu görüntülenir.  \",\n                    placement: \"center\",\n                },\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            showEczaciHelpModal: false,\n            video: null,\n            stop: null,\n        };\n\n        this.fetchData = this.fetchData.bind(this);\n        this.searchWithKey = this.searchWithKey.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.isSelected = this.isSelected.bind(this);\n        this.previewContent = this.previewContent.bind(this);\n        this.downloadContent = this.downloadContent.bind(this);\n        this.downloadMedia = this.downloadMedia.bind(this);\n        this.setMediaViewer = this.setMediaViewer.bind(this);\n        this.openFormSession = this.openFormSession.bind(this);\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n        this.deleteForm = this.deleteForm.bind(this);\n        this.deleteList = this.deleteList.bind(this);\n        this.deleteSession = this.deleteSession.bind(this);\n        this.previewSignedContent = this.previewSignedContent.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({isKepOwner: this.props.isKepOwner, jobTitlesData: getJobTitles()});\n        this.readDepartmentAll();\n    }\n\n    componentDidMount() {\n        let self = this;\n        let params = {\n            url: `/formtype/readFormTypeAllWithSablonsuz`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let formTypeList = response.data;\n                self.setState({formTypeList});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({searchQuery, searching: true, page: 0},\n            () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    readDepartmentAll = () => {\n        let self = this;\n        let params = {\n            url: '/department/readDepartment',\n            method: \"get\",\n        };\n        requestK(params)\n            .then(function (response) {\n                let departmentList = response.data;\n                self.setState({departmentList});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    deleteForm(id) {\n        let self = this;\n        let params = {\n            url: `/form/deleteForm`,\n            method: \"post\",\n            data: id\n        };\n        self.setState({disabledDeleteBtn: true});\n        requestK(params)\n            .then(function (response) {\n                let sessionId = response.data;\n                self.setState({alert: null, disabledDeleteBtn: false});\n                Alert.success(\"Form başarıyla silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                if (sessionId > 0) {\n                    self.setState({\n                        alert: (\n                            <SweetAlert showCancel warning\n                                        confirmBtnText=\"Evet\"\n                                        cancelBtnText=\"Hayır\"\n                                        confirmBtnBsStyle=\"danger\"\n                                        cancelBtnBsStyle=\"default\"\n                                        title=\"Emin misiniz?\"\n                                        disabled={self.state.disabledDeleteBtn}\n                                        onConfirm={() => self.deleteSession(sessionId)}\n                                        onCancel={() => self.setState({alert: null})}>\n                                Form İşlem kaydında başka form kalmamıştır, Form İşlemleri altındaki bu form işlem kaydı\n                                silinsin mi?\n                            </SweetAlert>\n                        )\n                    });\n                } else {\n                    self.setState({\n                        manual: true,\n                        selection: [],\n                        selectedAll: false,\n                    });\n                    self.props.reload(true, \"sidebar\");\n                }\n            }).catch(function (error) {\n            showAxiosError({error});\n            self.setState({disabledDeleteBtn: false, alert: null});\n        });\n    }\n\n    deleteSession(sessionId) {\n        let self = this;\n        let params = {\n            url: `/formsession/deleteFormSession`,\n            method: \"post\",\n            data: sessionId\n        };\n        self.setState({disabledDeleteBtn: true});\n        requestK(params)\n            .then(() => {\n                Alert.success(\"Form İşlem kaydı başarıyla silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                self.setState({\n                    disabledDeleteBtn: false,\n                    manual: true,\n                    alert: null,\n                    selection: [],\n                    selectedAll: false,\n                });\n                self.props.reload(true, \"sidebar\");\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDeleteBtn: false, alert: null});\n        });\n\n    }\n\n    deleteList() {\n        let self = this;\n        let params = {\n            url: `/form/deleteFormList`,\n            method: \"post\",\n            data: self.state.selection\n        };\n        self.setState({disabledDeleteBtn: true, alert: null});\n        requestK(params)\n            .then(() => {\n                self.setState({\n                    selection: [],\n                    selectedAll: false,\n                    manual: true,\n                    disabledDeleteBtn: false,\n                    alert: null\n                });\n                Alert.success(\"Seçilen kayıtlar silindi. Gönderilmiş olanlar silinemez.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDeleteBtn: false});\n        });\n    }\n\n    searchWithKey(e) {\n        this.setState({searchKey: e.target.value, manual: true});\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=id,desc';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        if (searchQuery.includes(\"formContent\") && !searchQuery.includes(\"formTemplate_formContent\") && !searchQuery.includes(\"formTemplate_formType\"))\n            Alert.error(\"Form türü seçmeden form parametre içeriği aratamazsınız. Lütfen form türü seçiniz!\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        else {\n            searchQuery = this.filterForCurrentTerm(self, searchQuery);\n            let url = '/form/readAllForm?';\n            if (this.props.match && this.props.match.params.id) {\n                url += 'currentEmployeeId=' + this.props.match.params.id\n            } else {\n                url += 'currentEmployeeId=' + \"\";\n            }\n\n            if (dropdownCheckRef.current?.state?.selectionTag === 'selectAll') {\n                url += '&bringAllFormIds=true'\n            } else {\n                url += '&bringAllFormIds=false'\n            }\n\n            let params = {\n                url: url + '&showOnlySents=' + self.state.showOnlySents +\n                    ((searchQuery !== '' && searchQuery.includes(\"formSendType\")) ? '' : '&formSendType=')\n                    + '&page=' + page + '&size=' + size + searchQuery + sortStr,\n                method: \"get\",\n            };\n            self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n            self.props.reload(true);\n            requestK(params)\n                .then(function (response) {\n                    let total = (response.data && response.data.page) ? response.data.page.totalElements : 0;\n                    let content = (response.data && response.data.page) ? response.data.page.content : [];\n                    let totalIdList = response.data ? response.data.selectedIdList : [];\n                    self.setState({\n                        page: page,\n                        size: size,\n                        total,\n                        content,\n                        totalIdList,\n                        loading: false,\n                        searching: false,\n                        flagForHomePage: true,\n                    });\n                    if (dropdownCheckRef.current?.state?.selectionTag === 'selectAll') {\n                        self.setState({selection: totalIdList});\n                        if (self.state?.selectedAll === false) {\n                            self.setState({selectedAll: true});\n                            dropdownCheckRef.current.setState({\n                                alert: (\n                                    <SweetAlert info\n                                                confirmBtnText=\"Tamam\"\n                                                confirmBtnBsStyle=\"success\"\n                                                title=\"Tümü Seçildi\"\n                                                onConfirm={() => dropdownCheckRef.current.setState({alert: null})}\n                                    >\n                                        {totalIdList.length + \" adet seçim yapıldı.\"}\n                                    </SweetAlert>\n                                )\n                            });\n                        }\n                    } else {\n                        self.setState({selectedAll: false})\n                    }\n                    self.props.reload(false);\n                }).catch(function (error) {\n                self.setState({loading: false, searching: false});\n                self.props.reload(false);\n                showAxiosError(error);\n            });\n        }\n    }\n\n    filterForCurrentTerm = (self, searchQuery) => {\n        if (this.props.monthly && this.state.flagForHomePage) {\n            if (this.props.location) {\n                if (this.props.location.selectedTerm) {\n                    let selectedTerm = this.props.location.selectedTerm;\n                    self.setState({flagForHomePage: false});\n                    let start = selectedTerm + '-01';\n                    let end = selectedTerm + '-31';\n                    searchQuery = `&createdAt=${start} 00:00:00&createdAt=${end} 23:59:59`;\n                    Alert.success(\"Seçilen dönemde oluşturulan formlar listelenmektedir.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                }\n            }\n        }\n        return searchQuery;\n    };\n\n    openFormSession(row) {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/formsession/${row.formSessionId}`,\n            previousPage: \"formreports\"\n        });\n    }\n\n    setMediaViewer() {\n        this.setState({url: null, mediaModal: false});\n    }\n\n    previewContent(row) {\n        let self = this;\n        let params = {\n            url: `/form/previewFormContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({mediaModal: true, html: false});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                let base64Data = \"\";\n                if (blob !== undefined) {\n                    let reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = function () {\n                        base64Data = reader.result;\n                        self.setState({url: base64Data});\n                    }\n                }\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({mediaModal: false, title: null});\n        });\n    }\n\n    previewSignedContent(row) {\n        let self = this;\n        let params = {\n            url: `/form/previewFormReportContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({ mediaModal: true, selectedRow: row, html: true, type: \"form\"}, () => {\n            requestK(params)\n                .then(function (response) {\n                    let blob = new Blob([response.data], { type: 'text/html' });\n                    let url = URL.createObjectURL(blob);\n                    self.setState({ url: url , html: true});\n                })\n                .catch(function (error) {\n                    showAxiosError(error);\n                    self.setState({ mediaModal: false, title: null });\n                });\n        });\n    }\n\n    downloadContent(row, index) {\n        let self = this;\n            let params = {\n            url: `/form/previewFormContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({disabledDownloadBtn: true, loadingType: \"download\", index: index});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                let link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                let createdAt = !!row.createdAt && row.createdAt.toString().substring(0, row.createdAt.indexOf(\"T\"));\n                let employeeName = (row.employee !== undefined && row.employee !== null) ? row.employee.name + \"_\" + row.employee.surname : \"\";\n                let randomNum = Math.floor(Math.random() * 100000);\n                let fileName = \"Form_\" +employeeName+ \"_\" +\n                    createdAt + \"_\" + randomNum +\".pdf\";\n                link.download = fileName\n                document.body.appendChild(link);\n                if (row.timeStamp !== null && row.timeStamp !== \"\") {\n                    let formTimeStamp = new Blob([base64_arraybuffer.decode(row.timeStamp)], {type: 'application/octet-stream'});\n                    let linkTs = document.createElement('a');\n                    linkTs.href = window.URL.createObjectURL(formTimeStamp);\n                    linkTs.download = fileName + \".zd\";\n                    document.body.appendChild(linkTs);\n                    linkTs.click();\n                }\n                link.click();\n                self.setState({disabledDownloadBtn: false, loadingType: null});\n                self.setState({loading: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDownloadBtn: false, title: null, loadingType: null});\n        });\n    }\n\n    arrangeDataSet = (type) => {\n        let self = this;\n        let dataSet = {};\n        dataSet.sheetName = \"Form_Arşiv_Raporu\"\n        dataSet.uuid = create_UUID();\n        dataSet.list = self.state.selection\n        dataSet.type = type;\n        return dataSet;\n    }\n\n    downloadMedia(type) {\n        let self = this;\n        let data = self.arrangeDataSet(type);\n        data.source = \"formreports\";\n        let params = {\n            url: `/form/downloadReport`,\n            method: \"post\",\n            data: data\n        };\n        requestK(params)\n            .then(() => {\n                Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 8000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    downloadBulkContent = (type) => {\n        let self = this;\n        let data = self.arrangeDataSet(type);\n        if (self.state.selection.length <= 100) {\n            let params = {\n                url: `/form/downloadBulkContent`,\n                method: \"post\",\n                data: data\n            };\n            requestK(params)\n                .then(() => {\n                    Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 8000\n                    });\n                }).catch(function (error) {\n                showAxiosError(error);\n            });\n        } else {\n            this.setState({\n                alert: (\n                    <SweetAlert info\n                                confirmBtnText=\"Tamam\"\n                                confirmBtnBsStyle=\"warning\"\n                                title=\"UYARI\"\n                                onConfirm={() => {\n                                    this.setState({alert: null});\n                                }}\n                    >\n                        Tek seferde en fazla 100 form indirme işlemi\n                        yapabilirsiniz!\n                    </SweetAlert>\n                )\n            });\n        }\n    }\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        if (checked === false && dropdownCheckRef.current?.state?.selectionTag === \"selectAll\") {\n            dropdownCheckRef.current.setState({selectionTag: \"await\",})\n        }\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true});\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback = (data) => {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    };\n\n    resendMimeRow = (row) => {\n        let self = this;\n        let list = [];\n        list.push(row.id);\n        self.resend(list);\n    }\n\n    resendMimeList = () => {\n        let self = this;\n        let list = self.state.selection;\n        this.resend(list);\n    }\n    resend = (list) => {\n        let self = this;\n        let params = {\n            url: `/form/resendMimeArchive`,\n            method: \"post\",\n            data: list\n        };\n        Alert.warning(\"Uyarı gönderme işlemi başlatılıyor...\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 4000\n        });\n        self.setState({loading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({manual: true, loading: false});\n                Alert.success(response.data, {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 4000\n                });\n            })\n            .catch(function (error) {\n                self.setState({loading: false});\n                showAxiosError(error);\n            });\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let locale = this.state.locale;\n\n        let pageIdList = [];\n        if (this.state.content && this.state.content instanceof Array) {\n            this.state.content.map(e => {\n                pageIdList.push(e.id);\n            });\n        }\n        let columnList = [\n            {\n                Header: (this.state.content &&\n                    <DropdownCheck selectionIdList={this.state.selection}\n                                   ref={dropdownCheckRef}\n                                   totalIdList={this.state.totalIdList}\n                                   pageIdList={pageIdList}\n                                   onChange={e => {\n                                       if (dropdownCheckRef.current?.state?.selectionTag === 'unselectAll') {\n                                           this.setState({selection: [], selectedAll: false});\n                                       } else if (dropdownCheckRef.current?.state?.selectionTag === 'selectAll') {\n                                           dropdownCheckRef.current.setState({alert: null});\n                                           detailedSearchRef.current.handleSearch();\n                                       } else {\n                                           this.setState({selection: e})\n                                       }\n                                   }\n                                   }/>),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => {\n                    return (\n                        this.state.content &&\n                        <input\n                            type=\"checkbox\"\n                            checked={this.isSelected(row.id)}\n                            onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}\n                        />\n                    );\n                }\n            },\n            {\n                Header: \"Form Türü\",\n                accessor: \"formTemplate_formType_category\",\n                Cell: row => (<div>{row.formType && row.formType.category}</div>)\n            },\n            {\n                Header: \"Form Adı\",\n                accessor: \"formTemplate_formName\",\n                Cell: row => (<div style={{margin: 0,whiteSpace: 'pre'}}><TextOverFlowTooltip text={row.formName} maxLength={60}/></div>)\n            },\n            {\n                Header: \"Ad\",\n                accessor: \"employee_name\",\n                Cell: row => (<div>{row.employee &&\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.employee.name} maxLength={20}/>\n                    </div>}</div>)\n\n            },\n            {\n                Header: \"Soyad\",\n                accessor: \"employee_surname\",\n                Cell: row => (<div>{row.employee &&\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.employee.surname} maxLength={20}/>\n                    </div>}</div>)\n\n            },\n            {\n                Header: \"Departman\",\n                accessor: \"employee_department\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.employee && row.employee.department &&\n                        <TextOverFlowTooltip text={row.employee.department.name} maxLength={15}/>}</div>\n                )\n            },\n            {\n                Header: \"Görev\",\n                accessor: \"employee_jobTitle\",\n                Cell: row => (<div style={{margin: 0}}>{row.employee &&\n                        <TextOverFlowTooltip text={row.employee.jobTitle} maxLength={15}/>}</div>\n                )\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"employee_tckn\",\n                Cell: row => (<div>{row.employee && <span>{row.employee.tckn}</span>}</div>)\n            },\n            {\n                Header: \"KEP Adresi\",\n                accessor: \"employee_kepAddress\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.employee &&\n                        <TextOverFlowTooltip text={row.employee.kepAddress} maxLength={20}/>}</div>\n                )\n            },\n            {\n                Header: \"Oluşturulma Tarihi\",\n                accessor: \"createdAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{moment(row.createdAt).isValid() &&\n                        <TextOverFlowTooltip text={moment(row.createdAt).format(\"DD-MM-YYYY HH:mm:ss\")}\n                                             maxLength={20}/>}</div>\n                )\n            },\n            {\n                Header: \"Onay Tipi\",\n                accessor: \"formTemplate_isAnswerable\",\n                Cell: row => (\n                    <div style={{ margin: 0 }}>\n            <span className=\"isAnswerable\">\n                {(\n                    (row.conditionalApproveAllowed && row.isAnswerable && !row.declineAllowed) ? <span style={{ color: '#08c21d' }}>Cevap Zorunlu</span> :\n                        (row.conditionalApproveAllowed && row.isAnswerable && row.declineAllowed) ? <span style={{ color: '#08c21d' }}>Cevap Zorunlu - Reddedilebilir</span> :\n                            (!row.conditionalApproveAllowed && row.isAnswerable && !row.declineAllowed) ? <span style={{ color: '#08c21d' }}>Cevap Zorunlu</span> :\n                                (!row.conditionalApproveAllowed && row.isAnswerable && row.declineAllowed) ? <span style={{ color: '#08c21d' }}>Cevap Zorunlu - Reddedilebilir </span> :\n                                    (row.conditionalApproveAllowed && !row.isAnswerable && !row.declineAllowed) ? <span style={{ color: '#007acc' }}>Şartlı Onaylanabilir</span> :\n                                        (row.conditionalApproveAllowed && !row.isAnswerable && row.declineAllowed) ? <span style={{ color: '#007acc' }}>Şartlı Onaylanabilir - Reddedilebilir </span> :\n                                            (!row.conditionalApproveAllowed && !row.isAnswerable && row.declineAllowed) ? <span style={{ color: '#408f57' }}>Reddedilebilir</span> :\n                                                null\n                )}\n            </span>\n                    </div>\n                )\n            },\n            {\n                Header: \"Gönderim Türü\",\n                accessor: \"submissionType\",\n                Cell: row => (<div style={{margin: 0}}>\n                    <span className=\"formSendType\">\n                      {row.submissionType === \"AUTOMATIC\" ? \"Otomatik\" :\n                          (row.submissionType === \"PRIORITY\" ? \"Öncelikli\" :\n                              (row.submissionType === \"AUTOMATIC_AND_PRIORITY\" ? \"Otomatik ve Öncelikli\" : \"Normal\"))}\n                    </span>\n                </div>)\n            },\n            {\n                Header: \"Uyarı Sayısı\",\n                accessor: \"warningCount\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.warningCount}\n                    </div>\n                )\n            },\n            {\n                Header: \"Durumu\",\n                accessor: \"state\",\n                Cell: row => (\n                    <div>\n                        {row.state && <span\n                            className={\"text-\" + DocumentState[row.state].messageType}>{DocumentState[row.state].message}</span>}\n                    </div>\n                )\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                width: \"105px\",\n                Cell: (row, index) => (\n                    <div className=\"btn-group\" style={{padding: 0, margin: 0}}>\n                        <div className=\"dropdown\" style={{padding: 0, margin: 0}}>\n                            <button className=\"MenuBtn2 listt btn btn-default\"\n                                    style={{WebkitTextFillColor: 'white'}}\n                                    type=\"button\" data-toggle=\"dropdown\">Seçİnİz\n                            </button>\n                            <div className=\"dropdown-menu\" aria-labelledby={\"dropdownMenuButton_\" + row.id}>\n                                {!this.state.loading && checkGrantToDisplay(this, [FORM_SEND]) && (row.formSessionId !== null) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => {\n                                           this.openFormSession(row)\n                                       }}>\n                                        <i className=\"fa fa-eye\"/>Gönderim İşlemini Aç\n                                    </a>}\n                                {!this.state.loading &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.previewContent(row)}>\n                                        <i className=\"fa fa-search\"/>Form Görüntüle\n                                    </a>}\n                                {/*{!this.state.loading &&*/}\n                                {/*    <a className=\"dropdown-item\"*/}\n                                {/*       onClick={() => this.previewSignedContent(row)}>*/}\n                                {/*        <i className=\"fa fa-search\"/>İmzalı Form Görüntüle*/}\n                                {/*    </a>}*/}\n                                {row.formType && !!row.formType.category &&\n                                    (DocumentState[row.state].value === 600 || DocumentState[row.state].value === 611 || DocumentState[row.state].value === 620) &&\n                                    row.formSessionId !== null &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.resendMimeRow(row)}>\n                                        <i className=\"fa fa-bell\"/>Uyarı Gönder\n                                    </a>}\n                                {<a className=\"dropdown-item\"\n                                    style={(this.state.index === index && this.state.loadingType === \"download\") ? {\n                                        pointerEvents: 'none',\n                                        cursor: 'none'\n                                    } : {}}\n                                    onClick={() => this.downloadContent(row)}>\n                                    <i\n                                        className={(this.state.index === index && this.state.loadingType === \"downloadApproveDoc\" ? \"fas fa-spinner fa-spin\" : \"fa fa-download\")}/>Form\n                                    İndir\n                                </a>}\n                                {row.formType && !!row.formType.category &&\n                                    (DocumentState[row.state].value === 610 || (DocumentState[row.state].value >= 630 && DocumentState[row.state].value <= 660)) &&\n                                    <a className=\"dropdown-item\"\n                                       style={(this.state.index === index && this.state.loadingType === \"downloadApproveDoc\") ? {\n                                           pointerEvents: 'none',\n                                           cursor: 'none'\n                                       } : {}}\n                                       onClick={() => downloadApproveDocument(this, row, index, row.formType.category)}>\n                                        <i\n                                            className={(this.state.index === index && this.state.loadingType === \"downloadApproveDoc\" ? \"fas fa-spinner fa-spin\" : \"fa fa-download\")}/>Onay\n                                        Belgesini İndir\n                                    </a>}\n                                {DocumentState[row.state].value < 300 && checkGrantToDisplay(this, FORM_OPERATIONS) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => {\n                                           {\n                                               this.setState({\n                                                   alert: (\n                                                       <SweetAlert showCancel warning\n                                                                   confirmBtnText=\"Evet\"\n                                                                   cancelBtnText=\"Hayır\"\n                                                                   confirmBtnBsStyle=\"danger\"\n                                                                   cancelBtnBsStyle=\"default\"\n                                                                   title=\"Emin misiniz?\"\n                                                                   disabled={this.state.disabledDeleteBtn}\n                                                                   onConfirm={() => this.deleteForm(row.id)}\n                                                                   onCancel={() => this.setState({alert: null})}>\n                                                           Açılmış form işlem kaydı silinecek.\n                                                       </SweetAlert>\n                                                   )\n                                               });\n                                           }\n                                       }}>\n                                        <i className=\"fas fa-trash-alt\"/>Formu Sil\n                                    </a>}\n                                {row.employee && row.employee.name &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.setState({stateDetail: row})}>\n                                        <i className=\"fa fa-info-circle\"/>Durum Detayı\n                                    </a>}\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        ];\n        let columns = renewListForPrivileges(this, columnList, \"accessor\", this.state.isKepOwner);\n        if (this.props.match && this.props.match.params.id) {\n            let newList = [];\n            columns.forEach(item => {\n                if (!item[\"accessor\"].includes(\"department\") && !item[\"accessor\"].includes(\"jobTitle\")) {\n                    newList.push(item);\n                }\n            });\n            columns = newList;\n        }\n\n        const fieldList = [\n\n            {\n                label: \"Çalışan Adı\",\n                accessor: \"employee_name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Çalışan TCKN\",\n                accessor: \"employee_tckn\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n            {\n                label: \"Çalışan Soyadı\",\n                accessor: \"employee_surname\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Durum\",\n                accessor: \"state\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: stateData(this.state.isKepOwner)\n            },\n            {\n                label: \"Çalışan KEP Adresi\",\n                accessor: \"employee_kepAddress\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Çalışan Departmanı\",\n                accessor: \"employee_department_name\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: departmentData(this.state.departmentList),\n            },\n            {\n                label: \"Çalışan Durumu\",\n                accessor: \"employee_statusType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: statusTypeFilterData()\n            },\n            {\n                label: \"Çalışan Görevi\",\n                accessor: \"employee_jobTitle\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.jobTitlesData\n            },\n            {\n                label: \"Form Türü\",\n                accessor: \"formTemplate_formType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: formTypeData(this.state.formTypeList)\n            },\n            {\n                label: \"Form Gönderim Türü\",\n                accessor: \"submissionType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: formSendTypeData()\n            },\n            {\n                label: \"Form Adı\",\n                accessor: \"formTemplate_formName\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Şablon İçeriği\",\n                accessor: \"formTemplate_formContent\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Form Parametre İçeriği\",\n                accessor: \"formContent\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Oluşturulma Tarihi (Başlangıç)\",\n                accessor: \"min_createdAt\",\n                type: \"datetime\",\n                operator: \">=\",\n            },\n            {\n                label: \"Oluşturulma Tarihi (Bitiş)\",\n                accessor: \"max_createdAt\",\n                type: \"datetime\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Sayfa Sayısı\",\n                accessor: \"pageCount\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n            {\n                label: \"Uyarı Sayısı\",\n                accessor: \"warningCount\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n            {\n                label: \"İmzasız Gönderilmiş Form\",\n                accessor: \"formTemplate_withoutSign\",\n                type: \"boolean\",\n                operator: \"=\",\n            }\n        ];\n        let fields = renewListForPrivileges(this, fieldList, \"accessor\", this.state.isKepOwner);\n        if (this.props.match && this.props.match.params.id) {\n            let newList = [];\n            fields.forEach(item => {\n                if (!item[\"accessor\"].includes(\"employee_\")) {\n                    newList.push(item);\n                }\n            });\n\n            fields = newList;\n        }\n\n        return (\n            <div className=\"row baseBackground\">\n                {this.state.joyrideActive &&\n                    <Joyride\n                        disableBeacon={false}\n                        autoStart\n                        locale={locale}\n                        steps={steps}\n                        continuous={true}\n                        run={this.state.shouldRun}\n                        scrollToFirstStep={true}\n                        showProgress={true}\n                        showSkipButton={true}\n                        scrollToSteps={true}\n                        disableCloseOnEsc={true}\n                        disableOverlay={false}\n                        disableOverlayClicks={false}\n                        keyboardNavigation={true}\n                        hideBackButton={false}\n                        disableOverlayClose={true}\n                        callback={this.callback}\n                        holePadding={0}\n                        shouldRun={this.state.shouldRun}\n                        styles={{\n                            options: {\n                                zIndex: 100000,\n                                primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                            }\n                        }}/>\n                }\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    {//checkGrantToDisplay(this, FORMS_ARCHIVE) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Excel\" style={{fontSize: 'x-small'}}\n                                     label=\"Rapor Excel İndir\" title=\"Seçilen Formları Excel Olarak İndir\"\n                                     disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                     onClick={() => this.state.selection && this.state.selection.length > 0 && this.downloadMedia(\"excel\")}/>}\n                    {//checkGrantToDisplay(this, FORMS_ARCHIVE) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Pdf\" style={{fontSize: 'x-small'}}\n                                     label=\"Rapor PDF İndir\" title=\"Seçilen Formları PDF Olarak İndir\"\n                                     disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                     onClick={() => this.state.selection && this.state.selection.length > 0 && this.downloadMedia(\"pdf\")}/>}\n                    {checkGrantToDisplay(this, FORMS_ARCHIVE) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Folder\" style={{fontSize: 'x-small'}}\n                                     label=\"Formları İndir\" title=\"Seçilen Formları ZIP Olarak İndir\"\n                                     disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                     onClick={() => this.state.selection && this.state.selection.length > 0 && this.downloadBulkContent(\"zip\")}/>}\n                    {//checkGrantToDisplay(this, FORMS_ARCHIVE) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Gonder\" style={{fontSize: 'x-small'}}\n                                     disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                     label=\"Uyarı Gönder\" title=\"Seçilen Dokümanlar İçin Uyarı Gönder\"\n                                     onClick={() => {\n                                         {\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert showCancel warning\n                                                                 confirmBtnText=\"Evet\"\n                                                                 cancelBtnText=\"Hayır\"\n                                                                 confirmBtnBsStyle=\"success\"\n                                                                 cancelBtnBsStyle=\"default\"\n                                                                 title=\"Emin misiniz?\"\n                                                                 onConfirm={() => {\n                                                                     this.setState({alert: null});\n                                                                     this.resendMimeList()\n                                                                 }}\n                                                                 onCancel={() => this.setState({alert: null})}\n                                                     >\n                                                         Seçilen Dokümanlar İçin Uyarı Gönderilecektir.\n                                                     </SweetAlert>\n                                                 )\n                                             });\n                                         }\n                                     }}/>}\n                    {checkGrantToDisplay(this, FORMS_ARCHIVE) &&\n                        <StickButton position=\"leftSide\" className=\"zocial Sil\" label=\"Seçilenleri Sil\"\n                                     title=\"Seçilen Formları Sil\"\n                                     disabled={this.state.disabledDeleteSelectedBtn || !(this.state.selection && this.state.selection.length > 0)}\n                                     style={{fontSize: 'x-small'}}\n                                     onClick={() => {\n                                         this.setState({\n                                             alert: (\n                                                 <SweetAlert showCancel warning\n                                                             confirmBtnText=\"Evet\"\n                                                             cancelBtnText=\"Hayır\"\n                                                             confirmBtnBsStyle=\"danger\"\n                                                             cancelBtnBsStyle=\"default\"\n                                                             title=\"Emin misiniz?\"\n                                                             onConfirm={this.deleteList}\n                                                             onCancel={() => this.setState({alert: null})}\n                                                 >\n                                                     Sadece seçilen form kayıtları silinecek.\n                                                 </SweetAlert>\n                                             )\n                                         });\n                                     }}/>}\n                    <ul className=\"helpfulList\">\n                        <li className=\"helpButtonContainer\">\n                            <button className=\"helpButton\" onClick={() => {\n                                this.activateJoyride()\n                            }}>\n                                <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                                <i className=\"far fa-question-circle helpButtonIcon\"/>\n                            </button>\n                        </li>\n                        {this.state.stop &&\n                            <li className=\"nav-item dropdown  videoIconContainer\">\n                                <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                        aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                    <span className=\"tooltipText\">Yardimci Videolar</span>\n                                    <i className=\"fab fa-youtube videoIcon\"/>\n                                </button>\n                                <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                     aria-labelledby=\"videosLink\">\n                                    {\n                                        this.videos.map((video, i) =>\n                                            <a key={i} className=\"dropdown-item\"\n                                               onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                    }\n                                </div>\n                            </li>\n                        }\n                    </ul>\n                </Nav>\n                <div className=\"row satirBasi\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"card-title\">Formlar Arşiv</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"\">\n                                    <div className=\"\" style={{marginTop: '10px', marginBottom: '0px'}}>\n                                        <DetailedSearch ref={detailedSearchRef}\n                                                        fields={fields}\n                                                        loading={this.state.searching}\n                                                        onSearch={this.handleSearch}/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"row\" style={{marginLeft: '10px', color: 'red'}}>\n                                    <span>\n                                       {(this.state.selection.length !== 0 ? \"Seçilen satır sayısı \" + this.state.selection.length : \"\")}\n                                    </span>\n                                </div>\n                                <Table columns={columns}\n                                       content={this.state.content}\n                                       loading={this.state.loading}\n                                       total={this.state.total}\n                                       page={this.state.page}\n                                       manual={this.state.manual}\n                                       size={this.state.size}\n                                       options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                                       fetchData={this.fetchData}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.alert &&\n                    <div className=\"row satirBasi\">\n                        <Notify ref=\"notify\"/>\n                        {this.state.alert}\n                    </div>}\n                {this.state.mediaModal &&\n                    <ApproveDocumentViewer url={this.state.url}\n                                           modal={this.state.mediaModal}\n                                           closeModal={this.setMediaViewer}\n                                           canvas={true}\n                                           html={this.state.html}\n                                           row={this.state.selectedRow}\n                                           type={this.state.type}\n                    />}\n                {this.state.stateDetail &&\n                    <StateDetail detail={this.state.stateDetail}\n                                 currentUser={this.props.currentUser}\n                                 documentType={this.state.stateDetail.formType ? this.state.stateDetail.formType.category : \"\"}\n                                 toggle={() => this.setState({stateDetail: undefined})}\n                    />}\n                {this.state.showEczaciHelpModal &&\n                    <VideoModal video={this.state.video} isOpen={this.state.showEczaciHelpModal}\n                                close={() => this.setState({showEczaciHelpModal: false})}/>\n                }\n            </div>\n\n        );\n    }\n}\n\nexport default FormReportPage;\n"],"sourceRoot":""}