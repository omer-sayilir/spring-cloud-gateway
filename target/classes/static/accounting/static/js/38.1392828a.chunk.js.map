{"version":3,"sources":["accounting/kepik/activitystream/EmployeeActivityDocument.js","accounting/kepik/activitystream/TimeStampCheck.js","accounting/kepik/activitystream/ActivityStreamPage.js"],"names":["EmployeeActivityDocument","Component","constructor","props","super","downloadDocuments","row","this","downloadActivityReport","arrangeDataSet","dataSet","employeeIdList","push","id","sheetName","tckn","uuid","create_UUID","type","startDate","state","endDate","self","data","moment","isValid","startOf","isBefore","params","url","method","setState","openModal","requestK","then","Alert","success","position","effect","timeout","catch","error","showAxiosError","warning","showModal","React","createElement","SweetAlert","showCancel","style","width","height","title","confirmBtnBsStyle","cancelBtnBsStyle","confirmBtnText","disabled","cancelBtnText","onCancel","onConfirm","className","fontSize","margin","fontWeight","Datetime","locale","input","inputProps","closeOnSelect","value","dateFormat","timeFormat","isValidDate","current","onChange","e","format","selection","selectedAll","content","total","page","size","loading","manual","searching","searchQuery","undefined","fetchData","bind","handleSearch","componentDidMount","jobTitlesData","getJobTitles","accessor","direction","sortStr","response","totalElements","totalIdList","selectedIdList","toggleCheckboxChange","checked","target","items","forEach","item","index","indexOf","slice","length","isSelected","renderMainTable","pageIdList","Array","map","columns","Header","Cell","TextOverFlowTooltip","text","name","maxLength","surname","department","jobTitle","statusTypeFilterData","statusType","label","sortable","textAlign","display","MiniButton","faIcon","onClick","color","Table","loadingText","options","getTrStyles","render","fieldList","operator","selectData","genderData","departmentData","departmentList","statusReasonData","titleFilterList","accessorTitle","toString","split","join","toLowerCase","fields","renewListForPrivileges","isKepOwner","DetailedSearch","onSearch","alert","TimeStampCheck","sendCode","timeStamp","hashCode","checkResult","errorMessage","renderResult","res","message","validation","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","StickButton","setAlert","responseType","link","document","href","window","URL","createObjectURL","Blob","download","body","appendChild","click","timestamp","stampTime","paddingBottom","Input","placeholder","autoComplete","autoFocus","border","marginTop","padding","data-toggle","data-placement","background","marginRight","rel","ActivityStreamPage","previewContent","documentType","toUpperCase","documentId","mediaModal","disabledPreviewBtn","blob","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","result","isForm","downloadContent","disabledDownloadBtn","employeeFullName","documentName","readStateDetail","disabledBtn","stateDetail","readDocumentId","defineTabName","activeTab","vknTckn","customerId","recordId","downloadClicked","customers","customerTotal","customerPage","customerSize","customerLoading","customerManual","customerSearching","isConditionAllowed","stop","fetchCustomerData","handleCustomerSearch","match","checkGrantForFetchResponse","includes","columnListPart2","columnListPart3","action","checkGrantToDisplay","ACTIVITYSTREAM","WebkitTextFillColor","aria-labelledby","ReactLoading","paddingLeft","downloadApproveDocument","columnList","updatedTime","replace","concat","renewListForDepartment","defineServiceStateIcon","customerContractList","signatureState","serviceTerminationDate","cursor","renderCustomerTable","columnsCustomers","formattedName","givenName","familyName","createdAt","Date","activityTypeData","Row","Nav","CardHeader","CardTitle","tag","pills","NavItem","NavLink","classnames","active","isSuperAdmin","marginBottom","CardBody","TabContent","TabPane","tabId","ApproveDocumentViewer","modal","closeModal","canvas","StateDetail","detail","toggle"],"mappings":"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","file":"static/js/38.1392828a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport 'react-table/react-table.css'\nimport 'moment/locale/tr';\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {create_UUID, showAxiosError} from \"../../../helper/helper\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport {\n    departmentData,\n    genderData,\n    getJobTitles,\n    renewListForPrivileges,\n    statusReasonData,\n    statusTypeFilterData\n} from \"../common/PeykHelper\";\nimport MiniButton from \"../../../components/MiniButton\";\nimport Table from \"../../../components/Table/Table\";\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Alert from \"react-s-alert\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nclass EmployeeActivityDocument extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selection: [],\n            selectedAll: false,\n            content: [],\n            total: 0,\n            page: 0,\n            size: 10,\n            loading: false,\n            manual: false,\n            searching: false,\n            searchQuery: undefined,\n            startDate: '',\n            endDate: '',\n            openModal: false,\n            row: ''\n        };\n        this.fetchData = this.fetchData.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({jobTitlesData: getJobTitles()});\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=id,desc';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/employee/readEmployeeAll?page=' + page + '&size=' + size + searchQuery + sortStr + '&customFields=',\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: (response.data && response.data.page) ? response.data.page.totalElements : 0,\n                    content: (response.data && response.data.page) ? response.data.page.content : [],\n                    totalIdList: response.data ? response.data.selectedIdList : [],\n                    loading: false,\n                    searching: false\n                });\n            })\n            .catch(function (error) {\n                self.setState({loading: false, searching: false});\n                showAxiosError(error);\n            });\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            searching: true,\n            selection: [],\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    downloadDocuments = (row) => {\n        this.downloadActivityReport(row);\n    };\n\n    arrangeDataSet = (row) => {\n        let dataSet = {};\n        let employeeIdList = [];\n        employeeIdList.push(row.id);\n        dataSet.sheetName = \"Çalışan_İşlem_Kaydı_\" + row.tckn;\n        dataSet.uuid = create_UUID();\n        dataSet.type = 'zip';\n        dataSet.startDate = this.state.startDate;\n        dataSet.endDate = this.state.endDate;\n        dataSet.employeeIdList = employeeIdList;\n        return dataSet;\n    };\n\n    downloadActivityReport = (row) => {\n        let self = this;\n        let data = self.arrangeDataSet(row);\n        if (moment(self.state.startDate).isValid() &&\n            moment(self.state.endDate).isValid() &&\n            moment(self.state.startDate).startOf('day').isBefore(moment(self.state.endDate).startOf('day'))) {\n            let params = {\n                url: `/approval/downloadEmployeeActivityDocument`,\n                method: \"post\",\n                data: data,\n            };\n            self.setState({openModal: false});\n            requestK(params)\n                .then(function () {\n                    Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 8000\n                    });\n                }).catch(function (error) {\n                showAxiosError(error);\n            });\n        } else {\n            Alert.warning(\"Başlangıç ve bitiş tarihleri doldurulmalıdır. Seçilen başlangıç tarihi bitiş tarihinden en az 1 (bir) gün önce olmalıdır.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 15000\n            });\n        }\n    };\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    renderMainTable() {\n        let pageIdList = [];\n        if (this.state.content && this.state.content instanceof Array) {\n            this.state.content.map(e => {\n                pageIdList.push(e.id);\n            });\n        }\n\n        let columns = [\n            {\n                Header: \"Ad\",\n                accessor: \"name\",\n                Cell: row => (<div style={{margin: 0}}><TextOverFlowTooltip text={row.name} maxLength={12}/></div>)\n            },\n            {\n                Header: \"Soyad\",\n                accessor: \"surname\",\n                Cell: row => (\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.surname} maxLength={12}/></div>)\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"tckn\"\n            },\n            {\n                Header: \"Departman\",\n                accessor: \"department\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.department &&\n                        <TextOverFlowTooltip text={row.department.name} maxLength={12}/>}</div>)\n            },\n            {\n                Header: \"Görev\",\n                accessor: \"jobTitle\",\n                Cell: row => (\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.jobTitle} maxLength={12}/></div>)\n            },\n            {\n                Header: \"Durum\",\n                accessor: \"statusType\",\n                Cell: row => (\n                    <div>\n            <span>{statusTypeFilterData().map(function (e) {\n                if (e.value === row.statusType) return e.label\n            })}</span>\n                    </div>)\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: row => {\n                    return (\n                        <div style={{textAlign: 'left', display: 'flex'}}>\n                            <MiniButton title=\"Kayıt Belgesi İndir\" faIcon=\"fa-download\"\n                                        onClick={() => this.setState({openModal: true, row})}\n                                        color=\"info\"/>\n                        </div>\n                    )\n                },\n                width: 'auto'\n            }\n        ];\n\n        return <Table columns={columns}\n                      content={this.state.content}\n                      loading={this.state.loading}\n                      loadingText=\"Kayıtlar getiriliyor...\"\n                      total={this.state.total}\n                      page={this.state.page}\n                      size={this.state.size}\n                      manual={this.state.manual}\n                      options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                      getTrStyles={this.getTrStyles}\n                      fetchData={this.fetchData}/>\n    }\n\n    showModal = () => {\n        return (\n            <SweetAlert\n                showCancel\n                style={{width: '578px', height: '500px'}}\n                title=\"Çalışan İşlem Kaydı\"\n                confirmBtnBsStyle=\"success\"\n                cancelBtnBsStyle=\"default\"\n                confirmBtnText='Kayıt Belgesi İndir'\n                disabled={this.state.startDate === '' || this.state.endDate === ''}\n                cancelBtnText='Kapat'\n                onCancel={() => this.setState({openModal: false, startDate: '', endDate: '', row: ''})}\n                onConfirm={() => this.downloadDocuments(this.state.row)}\n\n            >\n                <div className=\"row\">\n                    <div className='col-sm-12'>\n                        <div className='row'>\n                            <span style={{fontSize: 'small', margin: '-10px 10px 0 10px'}}>Seçili çalışanın seçilecek zaman aralığındaki Tübitak Zaman Damgası ile mühürlenmiş tüm işlem geçmişinin kayıt belgesini indirebilirsiniz.</span>\n                        </div>\n                        <div className='col-sm-12' style={{margin: '1em 0 1em 0'}}>\n                            <div className='row'>\n                                <div className=\"col-sm-6\">\n                                    <span style={{fontWeight: 'bold'}}>Başlangıç Tarihi *</span>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <Datetime locale=\"tr\"\n                                              className=\"datepicker\"\n                                              style={{fontSize: '12px'}}\n                                              input={true}\n                                              inputProps={{id: 'startDate'}}\n                                              closeOnSelect={true}\n                                              value={moment(this.state.startDate)}\n                                              dateFormat=\"DD-MM-YYYY\"\n                                              timeFormat={false}\n                                              isValidDate={function (current) {\n                                                  return current.startOf('day').isBefore(Datetime.moment().startOf('day'));\n                                              }}\n                                              onChange={(e) => {\n                                                  this.setState({startDate: moment(e).format('YYYY-MM-DD')});\n                                              }}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='col-sm-12'>\n                            <div className='row'>\n                                <div className=\"col-sm-6\">\n                                    <span style={{fontWeight: 'bold'}}>Bitiş Tarihi *</span>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <Datetime locale=\"tr\"\n                                              className=\"datepicker\"\n                                              input={true}\n                                              inputProps={{id: 'startDate'}}\n                                              closeOnSelect={true}\n                                              value={moment(this.state.endDate)}\n                                              dateFormat=\"DD-MM-YYYY\"\n                                              timeFormat={false}\n                                              isValidDate={function (current) {\n                                                  return current.startOf('day').isBefore(Datetime.moment().startOf('day'));\n                                              }}\n                                              onChange={(e) => {\n                                                  this.setState({endDate: moment(e).format('YYYY-MM-DD')});\n                                              }}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </SweetAlert>\n\n        )\n    }\n\n    render() {\n\n        const fieldList = [\n            {\n                label: \"İsim\",\n                accessor: \"name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Soyisim\",\n                accessor: \"surname\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"TCKN\",\n                accessor: \"tckn\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n            {\n                label: \"Durum\",\n                accessor: \"statusType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: statusTypeFilterData()\n            },\n            {\n                label: \"Cinsiyet\",\n                accessor: \"gender\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: genderData()\n            },\n            {\n                label: \"Departman\",\n                accessor: \"department_name\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: departmentData(this.state.departmentList),\n            },\n            {\n                label: \"Görev\",\n                accessor: \"jobTitle\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.jobTitlesData\n            },\n            {\n                label: \"Pasif Durum Gerekçe\",\n                accessor: \"reason\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: statusReasonData()\n            },\n            {\n                label: \"Pasif Durum Bitiş Tarihi (Başlangıç)\",\n                accessor: \"min_passiveEndDate\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"datetime\",\n                operator: \">=\",\n            },\n            {\n                label: \"Pasif Durum Bitiş Tarihi (Bitiş)\",\n                accessor: \"max_passiveEndDate\",\n                type: \"datetime\",\n                operator: \"<=\",\n            },\n            {\n                label: \"İşe Başlama Tarihi (Başlangıç)\",\n                accessor: \"min_employmentStartDate\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"date\",\n                operator: \">=\",\n            },\n            {\n                label: \"İşe Başlama Tarihi (Bitiş)\",\n                accessor: \"max_employmentStartDate\",\n                type: \"date\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Çalışma Şekli\",\n                accessor: \"employmentStatus\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Doğum Yeri\",\n                accessor: \"cityOfBirth\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Doğum Tarihi (Başlangıç)\",\n                accessor: \"min_dateOfBirth\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"date\",\n                operator: \">=\",\n            },\n            {\n                label: \"Doğum Tarihi (Bitiş)\",\n                accessor: \"max_dateOfBirth\",\n                type: \"date\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Yıllık İzin (En Düşük)\",\n                accessor: \"min_remainingAnnualVacation\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"numericText\",\n                operator: \">=\",\n            },\n            {\n                label: \"Yıllık İzin (En Yüksek)\",\n                accessor: \"max_remainingAnnualVacation\",\n                type: \"numericText\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Mazeret İzni (En Düşük)\",\n                accessor: \"min_remainingExcuseVacation\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"numericText\",\n                operator: \">=\",\n            },\n            {\n                label: \"Mazeret İzni (En Yüksek)\",\n                accessor: \"max_remainingExcuseVacation\",\n                type: \"numericText\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Eğitim Durumu\",\n                accessor: \"educationLevel\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Askerlik Durumu\",\n                accessor: \"militaryStatus\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Adres\",\n                accessor: \"address\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"KEP Adresi\",\n                accessor: \"kepAddress\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"e-Posta Adresi\",\n                accessor: \"email\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Telefon Numarası\",\n                accessor: \"telephone\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Entegrasyon Kodu\",\n                accessor: \"integrationCode\",\n                type: \"text\",\n                operator: \"=\",\n            }\n        ];\n        this.state.titleFilterList && this.state.titleFilterList.map(title => {\n            let accessorTitle = \"cstmfld\" + title;\n            accessorTitle = accessorTitle.toString().split(\" \").join(\"\");\n            accessorTitle = accessorTitle.toString().toLowerCase();\n            fieldList.push({\n                label: title,\n                accessor: accessorTitle,\n                type: \"text\",\n                operator: \"=\",\n            });\n        });\n        let fields = renewListForPrivileges(this, fieldList, \"accessor\", this.state.isKepOwner);\n        return <div className=\"\">\n            <div className=\"card-body\">\n            </div>\n            <div className=\"card-body\">\n                <DetailedSearch fields={fields}\n                                loading={this.state.searching}\n                                onSearch={this.handleSearch}/>\n            </div>\n            <div className=\"card-body\">\n                {this.renderMainTable()}\n            </div>\n            {this.state.openModal &&\n                this.showModal()\n            }\n            {this.state.alert}\n        </div>\n    }\n\n}\n\nexport default EmployeeActivityDocument;\n","import React, {Component} from 'react';\nimport 'react-table/react-table.css'\nimport 'moment/locale/tr';\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport {\n  Input, Modal, ModalBody, ModalFooter, ModalHeader\n} from \"reactstrap\";\nimport StickButton from \"../../../components/StickButton\";\nimport Alert from \"react-s-alert\";\n\nclass TimeStampCheck extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      timestamp : null,\n      hashCode : null,\n      checkResult : null,\n      stampTime : null,\n      errorMessage : \"\"\n    }\n  }\n\n  sendCode = () => {\n    let self = this;\n    if (!!self.state.timeStamp && !!self.state.hashCode){\n      let data = [self.state.timeStamp,self.state.hashCode];\n      let params = {\n        url: `/signer/verifyTimeStamp`,\n        method: \"post\",\n        data: data,\n      };\n      requestK(params)\n          .then(function (response) {\n            let data = response.data;\n            if (typeof data === 'object'){\n              // let time = data.shift();\n              self.setState({checkResult:data});//,stampTime:time});\n            }else if(typeof data === 'string') {\n              self.setState({errorMessage:data});\n            }\n          }).catch(function (error) {\n        showAxiosError(error);\n      });\n    } else {\n      Alert.error(\"Zaman Damgası ve Hash Kodu alanlarının doldurulması zorunludur.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 1500\n      });\n    }\n  }\n\n  renderResult = (res) => {\n    return (\n        <div className=\"row\">\n          <label className=\"col\">{res.message}</label>\n          <label className=\"col\" style={{color:res.validation?\"green\":\"orangered\"}}>{res.validation?\"DOĞRULANDI\":\"DOĞRULANAMADI\"}</label>\n        </div>\n    );\n  }\n\n  showModal = () => {\n    return (\n        <Modal isOpen={!!this.state.checkResult} size=\"lg\">\n          <ModalHeader>Zaman Damgası Doğrulama Sonucu</ModalHeader>\n          <ModalBody>\n            <div className=\"container\">\n              {/*<div className=\"row\">*/}\n              {/*  <label className=\"col\">İmzalama Zamanı</label>*/}\n              {/*  <label className=\"col\">{this.state.stampTime.message}</label>*/}\n              {/*</div>*/}\n              {this.state.checkResult.map(res=>{\n                return this.renderResult(res);\n              })}\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <div className=\"col-sm-3\">\n              <StickButton position=\"leftSide\" className=\"zocial Onay\" label=\"Kapat\"\n                           title=\"Kapat\"\n                           style={{fontSize: 'x-small'}} onClick={()=>{this.setState({checkResult:null})}}/>\n            </div>\n            <div className=\"col-sm-4\">\n              <StickButton position=\"rightSide\" className=\"zocial Pdf\" label=\"Doğrulama Sonucunu İndir\"\n                           title=\"Doğrulama Sonucunu İndir\"\n                           style={{fontSize: 'x-small'}} onClick={this.downloadDocuments}/>\n            </div>\n          </ModalFooter>\n        </Modal>\n    )\n  }\n\n  setAlert = () => {\n    Alert.error(this.state.errorMessage, {\n      position: 'top-right',\n      effect: 'stackslide',\n      timeout: 1500\n    });\n    this.setState({errorMessage:\"\"});\n  }\n\n  downloadDocuments = () => {\n    let self = this;\n    let data = [self.state.timeStamp,self.state.hashCode];\n    let params = {\n      url: '/signer/downloadVerifyStatus',\n      responseType: 'arraybuffer',\n      method: \"post\",\n      data: data\n    };\n    requestK(params)\n        .then(function (response) {\n          let link = document.createElement('a');\n          link.href = window.URL.createObjectURL(new Blob([response.data], {type: \"application/pdf\"}));\n          link.download = \"Dogrulama_Sonucu.pdf\";\n          document.body.appendChild(link);\n          link.click();\n        })\n        .catch(function (error) {\n          showAxiosError(error);\n        });\n  }\n\n  render() {\n    return (\n        <div className=\"container\">\n          <div className=\"card-header\" style={{paddingBottom:'40px'}}>\n            <p>Çalışan işlem kaydı sekmesinden indirilen pdf dosyasının içerisinde bulunan zaman damgası ve hash kodu değerleri bu sekmedeki ilgili alanlara girilerek doğruluğu kontrol edilebilir.</p>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <div className=\"col-sm-12 d-flex\">\n                <div className=\"col-sm-6\">\n                  <p>Zaman Damgası (Base64) :</p>\n                  <Input placeholder=\"Zaman Damgası (Base64)\"\n                         autoComplete=\"off\"\n                         autoFocus\n                         id=\"timestamp\"\n                         name=\"timestamp\"\n                         type=\"textarea\"\n                         style={{\n                           height: '200px',\n                           border: '1px solid #E3E3E3',\n                           marginTop: '2px',\n                           padding: '3px 3px',\n                         }}\n                         value={this.state.timeStamp}\n                         onChange={(e) => this.setState({timeStamp: e.target.value})}/>\n                </div>\n                <div className=\"col-sm-6\">\n                  <p>Hash Değeri (Base64) :</p>\n                  <Input placeholder=\"Hash Değeri (Base64)\"\n                         autoComplete=\"off\"\n                         id=\"hashCode\"\n                         name=\"hashCode\"\n                         type=\"textarea\"\n                         style={{\n                           height: '200px',\n                           border: '1px solid #E3E3E3',\n                           marginTop: '2px',\n                           padding: '3px 3px',\n                         }}\n                         value={this.state.hashCode}\n                         onChange={(e) => this.setState({hashCode: e.target.value})}/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\" row\" style={{marginTop: '10px'}}>\n            <div className=\"col-sm-12\">\n              <button type=\"button\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                      style={{\n                        background: 'linear-gradient(rgba(159, 208, 55, 0.6), #9fd037)',\n                        marginRight: '30px'\n                      }}\n                      rel=\"tooltip\" className=\"TekBtn search btn-icon sag-1 pull-right\"\n                      onClick={this.sendCode}>Zaman Damgası Sorgula\n              </button>\n            </div>\n          </div>\n          {this.state.checkResult !== null &&\n              this.showModal()\n          }\n          {this.state.errorMessage !== \"\" &&\n              this.setAlert()\n          }\n        </div>\n    );\n  }\n\n}\n\nexport default TimeStampCheck;\n","import React, {Component} from 'react';\nimport Table from \"../../../components/Table/Table\";\nimport 'react-table/react-table.css'\nimport {CardBody, CardHeader, CardTitle, Nav, NavItem, NavLink, Row, TabContent, TabPane} from 'reactstrap';\nimport 'moment/locale/tr';\nimport {checkGrantForFetchResponse, checkGrantToDisplay, create_UUID, showAxiosError} from \"../../../helper/helper\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {activityTypeData, downloadApproveDocument, renewListForDepartment} from \"../common/PeykHelper\";\nimport StateDetail from \"../common/StateDetail\";\nimport ApproveDocumentViewer from \"../approval/helper/ApproveDocumentViewer\";\nimport ReactLoading from \"react-loading\";\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport classnames from \"classnames\";\nimport EmployeeActivityDocument from \"./EmployeeActivityDocument\";\nimport moment from \"moment\";\nimport {ACTIVITYSTREAM} from \"../../../common/authorities/GrantDef\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport MiniButton from \"../../../components/MiniButton\";\nimport Alert from \"react-s-alert\";\nimport TimeStampCheck from \"./TimeStampCheck\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Datetime from \"react-datetime\";\n\nclass ActivityStreamPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selection: [],\n            selectedAll: false,\n            content: [],\n            customers: [],\n            total: 0,\n            page: 0,\n            size: 10,\n            loading: false,\n            manual: false,\n            searching: false,\n            customerTotal: 0,\n            customerPage: 0,\n            customerSize: 10,\n            customerLoading: false,\n            customerManual: false,\n            customerSearching: false,\n            searchQuery: undefined,\n            isConditionAllowed: false,\n            stop: null,\n            disabledPreviewBtn: false,\n            activeTab: '0',\n            openModal: false,\n            startDate: '',\n            endDate: ''\n        };\n        this.fetchData = this.fetchData.bind(this);\n        this.fetchCustomerData = this.fetchCustomerData.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleCustomerSearch = this.handleCustomerSearch.bind(this);\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/approval/readActivityStream?' +\n                \"employeeId=\" + ((self.props.match && self.props.match.params.id) ? self.props.match.params.id : '') +\n                '&page=' + page + '&size=' + size + searchQuery + sortStr,\n            method: \"get\",\n        };\n        self.setState({loading: true, manual: self.manual === true ? false : self.manual});\n        requestK(params)\n            .then(function (response) {\n                checkGrantForFetchResponse(self, response.data);\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: response.data.totalElements,\n                    content: response.data.content,\n                    loading: false,\n                    selectedAll: false,\n                    selection: []\n                });\n            })\n            .catch(function (error) {\n                self.setState({loading: false});\n                showAxiosError(error);\n            });\n    }\n\n    fetchCustomerData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = !!accessor ? ('&sort=' + accessor + ',' + direction) : '&sort=recordId,desc';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/customer/fetch?page=' + page + '&size=' + size + sortStr + searchQuery +\n                ((searchQuery !== '' && searchQuery.includes(\"showPassive\")) ? '' : '&showPassive=FALSE'),\n            method: \"get\"\n        };\n        self.setState({\n            customerLoading: true,\n            customerSearching: true,\n            customerManual: self.customerManual === true ? false : self.customerManual\n        });\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    customerPage: page,\n                    customerSize: size,\n                    customerTotal: response.data.totalElements,\n                    customers: response.data.content,\n                    customerLoading: false,\n                    customerSearching: false\n                });\n            }).catch(function (error) {\n            self.setState({customerLoading: false, customerSearching: false});\n            showAxiosError(error);\n        });\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            searching: true,\n            selection: [],\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    handleCustomerSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            customerSearching: true\n        }, () => this.fetchCustomerData(this.state.accessor, this.state.direction, 0, this.state.customerSize))\n    }\n\n    previewContent = (row) => {\n        let self = this;\n        let url = row.documentType.toString().toUpperCase() === \"BORDRO\" ? `/bordro/previewBordroContent` : `/form/previewFormContent`;\n        let params = {\n            url: url,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.documentId\n        };\n        self.setState({\n            mediaModal: false,\n            disabledPreviewBtn: true,\n            title: \"Doküman Önizleme\"\n        });\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                let base64Data=\"\";\n                if (blob != undefined) {\n                    let reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = function() {\n                        base64Data = reader.result;\n                        self.setState({url: base64Data});\n                    }\n                }\n                let isForm = row.documentType.toString().toUpperCase() !== 'BORDRO';\n                self.setState({mediaModal: true, isForm,  disabledPreviewBtn: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({mediaModal: false, title: null, disabledPreviewBtn: false});\n        });\n    };\n\n    downloadContent = (row) => {\n        let self = this;\n        let url = row.documentType.toString().toUpperCase() === \"BORDRO\" ? `/bordro/previewBordroContent` : `/form/previewFormContent`;\n        let params = {\n            url: url,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.documentId\n        };\n        self.setState({disabledDownloadBtn: true});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                var link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                link.download = \"Dokuman_\" +\n                    (!!row.employeeFullName ? (row.employeeFullName + \"_\") : \"\") +\n                    (!!row.documentName ? (row.documentName + \"_\") : \"\") +\n                    \".pdf\";\n                document.body.appendChild(link);\n                link.click();\n                self.setState({disabledDownloadBtn: false});\n                self.setState({loading: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDownloadBtn: false, title: null});\n        });\n    };\n\n    readStateDetail = (row) => {\n        let self = this;\n        self.setState({disabledBtn: true});\n        let url = row.documentType.toString().toUpperCase() === \"BORDRO\" ? `/bordro/readBordroById` : `/form/readFormById`;\n        let params = {\n            url: url,\n            method: \"post\",\n            data: row.documentId\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    disabledBtn: false,\n                    documentType: row.documentType,\n                    stateDetail: response.data\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledBtn: false});\n        });\n    };\n\n    readDocumentId = (row) => {\n        return {id: row.documentId};\n    };\n\n    defineTabName = () => {\n        if (this.state.activeTab === '0') {\n            return 'Tüm İşlem Geçmişi'\n        } else if (this.state.activeTab === '1') {\n            return 'Çalışan İşlem Kaydı'\n        } else if (this.state.activeTab === '2') {\n            return 'Müşteri İşlem Kaydı'\n        } else if (this.state.activeTab === '3') {\n          return 'Zaman Damgası Doğrulama'\n        }\n    };\n\n    renderMainTable() {\n        let columnListPart1 = [\n            {\n                Header: \"İşlem Tarihi\",\n                accessor: \"updatedTime\",\n                Cell: row => (\n                    <div>\n                        {row.updatedTime && moment(row.updatedTime.toString().replace(\"T\", \" \")).format(\"DD-MM-YYYY HH:mm:ss\")}\n                    </div>\n                )\n            }];\n        let columnListPart2 = [\n            {\n                Header: \"İşlem Yapan\",\n                accessor: \"userFullName\"\n            },\n            {\n                Header: \"İşlem Yapan  TCKN\",\n                accessor: \"userTckn\"\n            }];\n        let columnListPart3 = [\n            {\n                Header: \"Doküman Tipi\",\n                accessor: \"documentType\"\n            },\n            {\n                Header: \"Doküman Adı\",\n                accessor: \"documentName\"\n            },\n            {\n                Header: \"Dokümandaki Personel\",\n                accessor: \"employeeFullName\"\n            },\n            {\n                Header: \"İşlem\",\n                accessor: \"action\",\n                Cell: row => (\n                    <div>\n                        {row.action === \"WAITING\" &&\n                        <span className=\"text-warning\">Onayına Sunuldu</span>}\n                        {row.action === \"DISPLAYED\" &&\n                        <span className=\"text-info\">İlk defa görüntüledi</span>}\n                        {row.action === \"TIMEOUT\" &&\n                        <span className=\"text-danger\">Zaman Aşımına Uğradı</span>}\n                        {row.action === \"OBJECTION\" &&\n                        <span className=\"text-danger\">Red Etti</span>}\n                        {row.action === \"CONFIRMED\" &&\n                        <span className=\"text-success\">Onayladı</span>}\n                        {row.action === \"ANSWERED\" &&\n                        <span className=\"text-success\">Cevapladı</span>}\n                        {row.action === \"SIGNED\" &&\n                        <span className=\"text-success\">İmzaladı ve Onayladı</span>}\n                        {row.action === \"CONFIRMED_BY_COMPANY\" &&\n                        <span className=\"text-success\">Firma tarafından, onaylanmış kabul edilmiştir</span>}\n                        {row.action === \"CANCELED\" &&\n                            <span className=\"text-danger\">Gönderim İptal Edildi</span>}\n                    </div>\n                )\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: (row, index) => (\n                    <div className=\"btn-group\" style={{padding: 0, margin: 0}}>\n                        {checkGrantToDisplay(this, [ACTIVITYSTREAM]) &&\n                        <div className=\"dropdown\" style={{padding: 0, margin: 0}}>\n                            <button className=\"MenuBtn2 listt btn btn-default\"\n                                    style={{WebkitTextFillColor: 'white'}}\n                                    type=\"button\" data-toggle=\"dropdown\">Seçİnİz\n                            </button>\n                            <div className=\"dropdown-menu\" aria-labelledby={\"dropdownMenuButton_\" + row.id}>\n                                {!this.state.disabledPreviewBtn && checkGrantToDisplay(this, ACTIVITYSTREAM) &&\n                                <a className=\"dropdown-item\"\n                                   onClick={() => this.previewContent(row)}>\n                                    <i className=\"fa fa-search\"/>Görüntüle\n                                </a>}\n                                {!!this.state.disabledPreviewBtn && checkGrantToDisplay(this, ACTIVITYSTREAM) &&\n                                <a className=\"dropdown-item\">\n                                    <ReactLoading type=\"spinningBubbles\" style={{width: \"20px\", position: \"absolute\"}}/>\n                                    <span style={{paddingLeft: \"24px\", color: \"gray\"}}>Görüntüle</span>\n                                </a>}\n                                {!(this.state.disabledDownloadBtn) && checkGrantToDisplay(this, ACTIVITYSTREAM) &&\n                                <a className=\"dropdown-item\"\n                                   onClick={() => this.downloadContent(row)}>\n                                    <i className=\"fa fa-download\"/>Dokümanı İndir\n                                </a>}\n                                {!(this.state.disabledDownloadBtn) && checkGrantToDisplay(this, ACTIVITYSTREAM) &&\n                                <a className=\"dropdown-item\"\n                                   onClick={() => downloadApproveDocument(this, this.readDocumentId(row), index, row.documentType)}>\n                                    <i className=\"fa fa-download\"/>Onay Belgesini İndir\n                                </a>}\n                                {!!this.state.disabledDownloadBtn && checkGrantToDisplay(this, ACTIVITYSTREAM) &&\n                                <a className=\"dropdown-item\">\n                                    <ReactLoading type=\"spinningBubbles\" style={{width: \"20px\", position: \"absolute\"}}/>\n                                    <span style={{paddingLeft: \"24px\", color: \"gray\"}}>Dokümanı İndir</span>\n                                </a>}\n                                {!!this.state.disabledDownloadBtn && checkGrantToDisplay(this, ACTIVITYSTREAM) &&\n                                <a className=\"dropdown-item\">\n                                    <ReactLoading type=\"spinningBubbles\" style={{width: \"20px\", position: \"absolute\"}}/>\n                                    <span style={{paddingLeft: \"24px\", color: \"gray\"}}>Onay Belgesini İndir</span>\n                                </a>}\n                                <a className=\"dropdown-item\"\n                                   onClick={() => this.readStateDetail(row)}>\n                                    <i className=\"fa fa-info-circle\"/>Durum Detayı\n                                </a>\n                            </div>\n                        </div>}\n                    </div>\n                )\n            },\n        ];\n        let columnList = columnListPart1;\n        if (!(this.props.match && this.props.match.params.id)) {\n            columnList = columnList.concat(columnListPart2);\n        }\n        columnList = columnList.concat(columnListPart3);\n        let columns = renewListForDepartment(this, columnList, \"accessor\");\n\n        return <Table columns={columns}\n                      content={this.state.content}\n                      loading={this.state.loading}\n                      loadingText=\"Kayıtlar getiriliyor...\"\n                      total={this.state.total}\n                      page={this.state.page}\n                      size={this.state.size}\n                      manual={this.state.manual}\n                      options={[\"10\", \"20\", \"50\", \"100\", \"500\", \"1000\"]}\n                      fetchData={this.fetchData}/>\n    }\n\n    arrangeDataSet = (row) => {\n        let dataSet = {};\n        let employeeIdList = [];\n        dataSet.sheetName = \"Müşteri_İşlem_Kaydı_\" + row.vknTckn;\n        dataSet.uuid = create_UUID();\n        dataSet.customerId = row.recordId;\n        dataSet.type = 'zip';\n        dataSet.startDate = this.state.startDate;\n        dataSet.endDate = this.state.endDate;\n        dataSet.employeeIdList = employeeIdList;\n        return dataSet;\n    }\n\n    downloadClicked = (row) => {\n        let self = this;\n        let data = self.arrangeDataSet(row);\n        let params = {\n            url: `/approval/customer-report`,\n            method: \"post\",\n            data: data\n        };\n        self.setState({openModal: false});\n        requestK(params)\n            .then(function () {\n                Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 8000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    defineServiceStateIcon(row) {\n        if (row.customerContractList &&\n            row.customerContractList[0] &&\n            row.customerContractList[0].signatureState &&\n            !row.customerContractList[0].serviceTerminationDate) {\n            return <label className=\"fas fa-check\" style={{color: '#9fd037', fontSize: '1.2em', cursor: 'pointer'}}/>;\n        } else {\n            return <a><label className=\"fas fa-exclamation\"\n                             style={{color: '#F2421B', fontSize: '1.2em', cursor: 'pointer'}}/></a>;\n        }\n    }\n\n    showModal = () => {\n        return (\n            <SweetAlert\n                showCancel\n                style={{width: '578px', height: '500px'}}\n                title=\"Müşteri İşlem Kaydı\"\n                confirmBtnBsStyle=\"success\"\n                cancelBtnBsStyle=\"default\"\n                confirmBtnText='Kayıt Belgesi İndir'\n                disabled={this.state.startDate === '' || this.state.endDate === ''}\n                cancelBtnText='Kapat'\n                onCancel={() => this.setState({openModal: false, startDate: '', endDate: '', row: ''})}\n                onConfirm={() => this.downloadClicked(this.state.row)}\n\n            >\n                <div className=\"row\">\n                    <div className='col-sm-12'>\n                        <div className='row'>\n                            <span style={{fontSize: 'small', margin: '-10px 10px 0 10px'}}>Seçilen müşterinin seçilecek zaman aralığındaki tüm işlem geçmişinin kayıt belgesini indirebilirsiniz.</span>\n                        </div>\n                        <div className='col-sm-12' style={{margin: '1em 0 1em 0'}}>\n                            <div className='row'>\n                                <div className=\"col-sm-6\">\n                                    <span style={{fontWeight: 'bold'}}>Başlangıç Tarihi *</span>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <Datetime locale=\"tr\"\n                                              className=\"datepicker\"\n                                              style={{fontSize: '12px'}}\n                                              input={true}\n                                              inputProps={{id: 'startDate'}}\n                                              closeOnSelect={true}\n                                              value={moment(this.state.startDate)}\n                                              dateFormat=\"DD-MM-YYYY\"\n                                              timeFormat={false}\n                                              isValidDate={function (current) {\n                                                  return current.startOf('day').isBefore(Datetime.moment().startOf('day'));\n                                              }}\n                                              onChange={(e) => {\n                                                  this.setState({startDate: moment(e).format('YYYY-MM-DD')});\n                                              }}/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='col-sm-12'>\n                            <div className='row'>\n                                <div className=\"col-sm-6\">\n                                    <span style={{fontWeight: 'bold'}}>Bitiş Tarihi *</span>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <Datetime locale=\"tr\"\n                                              className=\"datepicker\"\n                                              input={true}\n                                              closeOnSelect={true}\n                                              value={moment(this.state.endDate)}\n                                              dateFormat=\"DD-MM-YYYY\"\n                                              timeFormat={false}\n                                              isValidDate={function (current) {\n                                                  return current.startOf('day').isBefore(Datetime.moment().startOf('day'));\n                                              }}\n                                              onChange={(e) => {\n                                                  this.setState({endDate: moment(e).format('YYYY-MM-DD')});\n                                              }}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </SweetAlert>\n\n        )\n    }\n\n    renderCustomerTable() {\n        const columnsCustomers = [\n            {\n                Header: \"Unvan\",\n                accessor: \"formattedName\",\n                Cell: row => (\n                    <div>\n                        {row.vknTckn.length === 10 ? <TextOverFlowTooltip text={row.formattedName} maxLength={20}/> :\n                            <TextOverFlowTooltip text={row.givenName + ' ' + row.familyName} maxLength={20}/>}\n                    </div>\n                )\n            },\n            {\n                Header: \"VKN/TCKN\",\n                accessor: \"vknTckn\"\n            },\n            {\n                Header: \"Kurumsal e-Posta\",\n                accessor: \"corporateMail\"\n            },\n            {\n                Header: \"Vergi Dairesi\",\n                accessor: \"taxOffice\"\n            },\n            {\n                Header: \"Bağlı Olduğu Kuruluş\",\n                accessor: \"parentCustomer\",\n                sortable: false,\n            },\n            {\n                Header: \"Hizmet Durumu\",\n                accessor: \"\",\n                sortable: false,\n                Cell: row => (\n                    <div>{this.defineServiceStateIcon(row)}</div>\n                )\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: row => {\n                    return (\n                        <div style={{textAlign: 'left', display: 'flex'}}>\n                            <MiniButton title=\"İndir\" faIcon=\"fa-download\"\n                                        color=\"warning\"\n                                        onClick={() => {\n                                            let startDate = row.createdAt && row.createdAt != null ? row.createdAt : new Date(2015, 1, 1, 0, 0, 0);\n                                            let endDate = moment();\n                                            this.setState({openModal: true, row,startDate,endDate});\n                                        }}\n                            />\n                        </div>\n                    )\n                },\n                width: 'auto'\n            }\n        ];\n\n\n        return <Table columns={columnsCustomers}\n                      content={this.state.customers}\n                      loading={this.state.customerLoading}\n                      loadingText=\"Kayıtlar getiriliyor...\"\n                      total={this.state.customerTotal}\n                      page={this.state.customerPage}\n                      size={this.state.customerSize}\n                      manual={this.state.customerManual}\n                      options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                      fetchData={this.fetchCustomerData}/>\n    }\n\n    render() {\n        const fieldsCustomers = [\n            {\n                label: \"Müşteri Adı\",\n                accessor: \"customerName\",\n                type: \"text\",\n                operator: \"=\"\n            },\n            {\n                label: \"Unvan\",\n                accessor: \"formattedName\",\n                type: \"text\",\n                operator: \"=\"\n            },\n            {\n                label: \"VKN/TCKN\",\n                accessor: \"vknTckn\",\n                type: \"numericText\",\n                operator: \"=\"\n            },\n            {\n                label: \"Ad\",\n                accessor: \"givenName\",\n                type: \"text\",\n                operator: \"=\"\n            },\n            {\n                label: \"Soyad\",\n                accessor: \"familyName\",\n                type: \"text\",\n                operator: \"=\"\n            },\n            {\n                label: \"Pasif Müşterileri Göster\",\n                accessor: \"showPassive\",\n                type: \"boolean\",\n                operator: \"=\",\n            }\n        ];\n        let fields = [];\n        if (!this.props.match || !this.props.match.params.id) {\n            fields = [\n                {\n                    label: \"İşlem Yapan\",\n                    accessor: \"userFullName\",\n                    type: \"text\",\n                    operator: \"=\",\n                },\n                {\n                    label: \"İşlem Yapan TCKN\",\n                    accessor: \"userTckn\",\n                    type: \"numericText\",\n                    operator: \"=\",\n                },\n            ]\n        }\n        fields.push({\n            label: \"Doküman Tipi\",\n            accessor: \"documentType\",\n            type: \"text\",\n            operator: \"=\",\n        });\n        fields.push({\n            label: \"Doküman Adı\",\n            accessor: \"documentName\",\n            type: \"text\",\n            operator: \"=\",\n        });\n        fields.push({\n            label: \"Dokümandaki Personel\",\n            accessor: \"employeeFullName\",\n            type: \"text\",\n            operator: \"=\",\n        });\n        fields.push({\n            label: \"İşlem Durumu\",\n            accessor: \"action\",\n            type: \"select\",\n            operator: \"=\",\n            selectData: activityTypeData()\n        });\n\n        return (\n            <Row className=\"baseBackground\">\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}/>\n                {this.state.alert}\n                <div className=\"row satirBasi\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">İşlem Geçmişi</CardTitle>\n                            </CardHeader>\n\n\n                            <div className=\"col-sm-12\">\n                                <Nav pills className=\"nav-pills-primary \">\n                                    <NavItem>\n                                        <NavLink\n                                            className={classnames({active: this.state.activeTab === '0'})}\n                                            onClick={() => {\n                                                this.setState({activeTab: '0'})\n                                            }}>\n                                            Tüm İşlem Geçmişi\n                                        </NavLink>\n                                    </NavItem>\n\n                                    {!(this.props.match && this.props.match.params.id) &&\n                                    <NavItem>\n                                        <NavLink\n                                            className={classnames({active: this.state.activeTab === '1'})}\n                                            onClick={() => {\n                                                this.setState({activeTab: '1'})\n                                            }}>\n                                            Çalışan İşlem Kaydı\n                                        </NavLink>\n                                    </NavItem>}\n                                  {/*{!(this.props.match && this.props.match.params.id) &&*/}\n                                  {/*    <NavItem>*/}\n                                  {/*      <NavLink*/}\n                                  {/*          className={classnames({active: this.state.activeTab === '3'})}*/}\n                                  {/*          onClick={() => {*/}\n                                  {/*            this.setState({activeTab: '3'})*/}\n                                  {/*          }}>*/}\n                                  {/*        Zaman Damgası Doğrulama*/}\n                                  {/*      </NavLink>*/}\n                                  {/*    </NavItem>}*/}\n                                    {this.props.isSuperAdmin &&\n                                    <NavItem>\n                                        <NavLink\n                                            className={classnames({active: this.state.activeTab === '2'})}\n                                            onClick={() => {\n                                                this.setState({activeTab: '2'})\n                                            }}>\n                                            Müşteri İşlem Kaydı\n                                        </NavLink>\n                                    </NavItem>}\n                                </Nav>\n                            </div>\n\n                            <hr style={{marginBottom: '20px'}}/>\n\n                            <div className=\"card-header card-header-danger\">\n                                <h4 className=\"card-title\">{this.defineTabName()}</h4>\n                            </div>\n\n                            <CardBody>\n                                <TabContent activeTab={this.state.activeTab}>\n                                    <TabPane tabId=\"0\">\n                                        <div className=\"\">\n                                            <div className=\"\">\n                                                <div className=\"card-body\">\n                                                    <DetailedSearch fields={fields}\n                                                                    loading={this.state.searching}\n                                                                    onSearch={this.handleSearch}/>\n                                                </div>\n                                                {this.renderMainTable()}\n                                            </div>\n                                        </ div>\n                                    </TabPane>\n\n                                    <TabPane tabId=\"1\">\n                                        <div className=\"\">\n                                            <div className=\"\">\n                                                {!(this.props.match && this.props.match.params.id) &&\n                                                <EmployeeActivityDocument/>}\n                                            </div>\n                                        </ div>\n                                    </TabPane>\n\n                                    <TabPane tabId=\"2\">\n                                        <div className=\"\">\n                                            <div className=\"\">\n                                                <div className=\"card-body\">\n                                                    <DetailedSearch fields={fieldsCustomers}\n                                                                    loading={this.state.searching}\n                                                                    onSearch={this.handleCustomerSearch}/>\n                                                </div>\n                                                {this.props.isSuperAdmin && !(this.props.match && this.props.match.params.id) &&\n                                                this.renderCustomerTable()}\n                                            </div>\n                                            {this.state.openModal &&\n                                                this.showModal()\n                                            }\n                                        </ div>\n                                    </TabPane>\n\n                                  <TabPane tabId=\"3\">\n                                    <div className=\"\">\n                                      <div className=\"\">\n                                        {!(this.props.match && this.props.match.params.id) &&\n                                            <TimeStampCheck/>}\n                                      </div>\n                                    </ div>\n                                  </TabPane>\n                                </TabContent>\n                            </CardBody>\n\n\n                            {this.state.mediaModal &&\n                            <ApproveDocumentViewer url={this.state.url}\n                                                   modal={this.state.mediaModal}\n                                                   closeModal={() => this.setState({url: null, mediaModal: false})}\n                                                   canvas={this.state.isForm}\n                            />}\n                            {this.state.stateDetail &&\n                            <StateDetail detail={this.state.stateDetail} documentType={this.state.documentType}\n                                         toggle={() => this.setState({stateDetail: undefined})}\n                            />}\n                        </div>\n                    </div>\n                </div>\n            </Row>\n        );\n    }\n}\n\nexport default ActivityStreamPage;\n"],"sourceRoot":""}