{"version":3,"sources":["accounting/kepik/common/validation/fieldValidation.js","components/FlexibleCardHeader.js","components/FlexibleCardBody.js","components/FlexibleCard.js","components/SaveEntityModal.js","components/Alert/SuccessAlert.js","accounting/kepik/approvalflow/ApprovalFlow.js"],"names":["validDepartment","data","isCodeMust","error","errorMessage","name","validateField","undefined","valid","message","typeId","parentId","integrationCode","isValidObject","validFormType","category","validDepartmentType","type","validFlowTemplate","flowTemplate","documentType","validKepAccount","account","tckn","parola","sifre","key","FlexibleCardHeader","Component","constructor","props","super","this","state","render","React","createElement","Row","style","headerStyle","id","Col","xs","sm","md","lg","xl","margin","padding","fontWeight","opacity","title","buttons","FlexibleCardBody","bodyStyle","content","FlexibleCard","className","children","SaveEntityModal","activateJoyride","setState","run","callback","action","mode","saving","item","steps","target","placement","disableBeacon","locale","back","close","last","next","skip","toggle","bind","onSave","onChange","validateClass","validateMessage","componentDidMount","fieldName","value","must","noError","Object","assign","createRequestParams","url","method","event","field","checked","onChangeSelect","e","Modal","isOpen","size","Joyride","continuous","showProgress","showSkipButton","disableScrollParentFix","disableScrolling","styles","options","zIndex","primaryColor","ModalHeader","onClick","position","right","alignSelf","marginTop","ModalBody","ReactLoading","width","height","fill","fields","renderFields","ModalFooter","disabled","background","self","Form","map","onlyEditMode","FormGroup","row","Label","label","Cell","Select","clearable","placeholder","selectAllData","selectData","Input","renderInput","UncontrolledTooltip","delay","note","SuccessAlert","SweetAlert","success","confirmBtnText","confirmBtnBsStyle","onConfirm","response","headers","alertHeader","defaultProps","ApprovalFlow","checkCompanyConfirmation","requestK","then","hasCompanyConfirmation","catch","showAxiosError","readAdminUsers","adminUsers","deleteClicked","df","showAlert","fetchData","handleSearch","searchQuery","translateChronoUnit","unit","chronoUnitFromMinutes","filter","option","getOptions","input","length","params","currentUser","customerId","employeeUserId","surname","Promise","resolve","getGrants","description","tr","confirmationByCompanyOnChange","step","confirmationByCompany","flow","handleCreate","saveModalStepLine","renderStep","renderDFUpdateButtons","loading","documentTypes","allDocumentTypes","allCreatedDocumentTypes","flows","joyrideActive","shouldRun","alert","temporaryId","selectedEmployee","selectedEmployeeInform","selectedGrants","selectedGrantsTimeout","selectedGrantsWaiting","selectedGrantsConfirm","selectedGrantsObjection","fixedPersonSelected","fixedPersonSelectedTimeout","fixedPersonSelectedApprove","fixedPersonSelectedObjectionInform","componentWillMount","defaultStep","approverType","operationType","onWaiting","waitFor","amount","maxRepeat","informList","timeoutPolicy","onObjection","split","obj","JSON","stringify","i","selectedPersons","Alert","info","includes","selectedPersonForNotifications","flag","fontFamily","createFields","val","accessor","operator","autoStart","scrollToFirstStep","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","SweetAlertExt","showCancel","warning","cancelBtnText","cancelBtnBsStyle","onCancel","deleteLoading","NavBarKS","offsetWidth","innerWidth","window","checkGrantToDisplay","APPROVAL_FLOW","StickButton","icon","fontSize","marginBottom","DetailedSearch","onSearch","index","textAlign","approverTypesLabelOf","informType","informedTypesLabelOf","join","saveModalStep","MiniButton","faIcon","color","splice","onChangeFixedPerson","fixedPersonId","fixedPersonLabel","push","onChangeFixedPersonInform","onChangeFixedPersonTimeout","onChangeFixedPersonApprove","onChangeFixedPersonObjectionInform","onChangeMultiFixedPerson","fixedPersonIdList","Array","isArray","onChangeMultiFixedPersonForNotification","effect","timeout","onChangeMultiFixedPersonForTimeout","onChangeMultiFixedPersonForConfirm","onChangeMultiFixedPersonForObjection","onChangeMultiGrants","grantIdList","onChangeMultiGrantsWaiting","informedType","onChangeMultiGrantsTimeout","informedTypes","onChangeMultiGrantsConfirm","onChangeMultiGrantsObjection","setFixedPerson","Async","multi","ignoreAccents","isLoading","autoload","cache","filterOptions","noResultsText","searchPromptText","loadingPlaceholder","loadOptions","getEmployees","fixedPersonInform","clearFixedPersonList","fixedPersonTimeout","clearFixedPersonTimeoutList","fixedPersonApprove","clearFixedPersonApproveList","fixedPersonObjectionInform","clearFixedPersonObjectionInformList","onChangeFixedHrAdmin","setFixedHrAdmin","user","onChangeWaitingFixedHrAdmin","setWaitingFixedHrAdmin","onChangeTimeoutFixedHrAdmin","setTimeoutFixedHrAdmin","onChangeConfirmFixedHrAdmin","setConfirmFixedHrAdmin","onChangeObjectionFixedHrAdmin","setObjectionFixedHrAdmin","clearGrantList","clearGrantListonWaiting","clearMultiPersonList","clearMultiPersonListonWaiting","clearFixedPerson","newInformList","object","newInformTimeoutList","newInformApproveList","newInformObjectionInformList","previousApproverType","selectedType","approverTypes","Switch","checkedChildren","unCheckedChildren","cacheOptions","currentValues","clearValueText","flex","operationTypes","pattern","repeatCount","fixedMultiPersonSelected","display","flexDirection","alignItems","onClear","fixedMultiPersonSelectedTimeout","paddingTop","fixedMultiPersonSelectedApprove","marginLeft","fixedMultiPersonSelectedObjectionInform"],"mappings":"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","file":"static/js/28.8ad5d0d1.chunk.js","sourcesContent":["import {validateField} from \"../../../../common/validation\";\n\n\nexport function validDepartment(data, isCodeMust) {\n    let error = {};\n    let errorMessage=\"\";\n    error.name = validateField(undefined, \"1,150\", data.name);\n    if(!error.name.valid){\n        errorMessage = errorMessage + \" <strong>Departman Adı \" + error.name.message + \"</strong><br/>\";\n    }\n    error.typeId = validateField(undefined, \"1,150\", data.typeId);\n    if(!error.typeId.valid){\n        errorMessage = errorMessage + \" <strong>Departman Tür \" + error.typeId.message + \"</strong><br/>\";\n    }\n    error.parentId = validateField(\"number\", \"1,11\", data.parentId);\n    if(!error.parentId.valid){\n        errorMessage = errorMessage + \" <strong>Bağlı Olduğu Departman \" + error.parentId.message + \"</strong><br/>\";\n    }\n    if (isCodeMust) {\n      error.integrationCode = validateField(undefined, \"1,150\", data.integrationCode);\n      if(!error.integrationCode.valid){\n        errorMessage = errorMessage + \" <strong>Departman Kodu \" + error.integrationCode.message + \"</strong><br/>\";\n      }\n    }\n\n    let valid = isValidObject(error);\n    return {error: error, valid: valid,errorMessage:errorMessage};\n}\n\nexport function validFormType(data) {\n    let error = {};\n    let errorMessage=\"\";\n    error.category = validateField(undefined, \"1,150\", data.category);\n    if(!error.category.valid){\n        errorMessage = errorMessage + \" <strong>Form Türü \" + error.category.message + \"</strong><br/>\";\n    }\n\n    let valid = isValidObject(error);\n    return {error: error, valid: valid,errorMessage:errorMessage};\n}\nexport function validDepartmentType(data) {\n    let error = {};\n    let errorMessage=\"\";\n    error.type = validateField(undefined, \"1,150\", data.type);\n    if(!error.type.valid){\n        errorMessage = errorMessage + \" <strong>Departman Türü \" + error.type.message + \"</strong><br/>\";\n    }\n\n    let valid = isValidObject(error);\n    return {error: error, valid: valid,errorMessage:errorMessage};\n}\nexport function validFlowTemplate(flowTemplate) {\n    let error = {};\n    let errorMessage=\"\";\n    error.documentType = validateField(\"documentType\", \"1,100\", flowTemplate.documentType);\n    if(!error.documentType.valid){\n        errorMessage = `${errorMessage} <strong>Belge Türü ${error.documentType.message}</strong><br/>`;\n    }\n    let valid = isValidObject(error);\n    return {error: error, valid: valid,errorMessage:errorMessage};\n}\n\nexport function validKepAccount(data) {\n\tlet error = {};\n\tlet errorMessage=\"\";\n    error.account = validateField(\"email\", \"1,100\", data.account);\n    if(!error.account.valid){\n        errorMessage = errorMessage + \" <strong>Kep Adresi \" + error.account.message + \"</strong><br/>\";\n    }\n    error.tckn = validateField(\"number\", \"11,11\", data.tckn);\n    if(!error.tckn.valid){\n        errorMessage = errorMessage + \" <strong>TC Kimlik No \" + error.tckn.message + \"</strong><br/>\";\n    }\n    error.parola = validateField(undefined, \"1,20\", data.parola);\n    if(!error.parola.valid){\n        errorMessage = errorMessage + \" <strong>Parola \" + error.parola.message + \"</strong><br/>\";\n    }\n    error.sifre = validateField(undefined, \"1,20\", data.sifre);\n    if(!error.sifre.valid){\n        errorMessage = errorMessage + \" <strong>Şifre \" + error.sifre.message + \"</strong><br/>\";\n    }\n\n    let valid = isValidObject(error);\n\treturn {error: error, valid: valid,errorMessage:errorMessage};\n}\n\nexport function isValidObject(error) {\n\tlet valid = true;\n\tfor (let key in error) {\n\t\tlet tError = error[key];\n\t\tif (!tError.valid) {\n\t\t\tvalid = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn valid;\n}\n\n\n","import React, {Component} from 'react';\nimport {Col, Row} from \"reactstrap\";\n\nclass FlexibleCardHeader extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Row style={this.props.headerStyle} id='headerContainer'>\n        <Col xs={8} sm={8} md={8} lg={8} xl={8}>\n          <label style={{margin: '0 0 0 0', padding: '3px 0 3px 0', fontWeight: '600', opacity: '0.8'}}>{this.props.title ? this.props.title : ''}</label>\n        </Col>\n        <Col xs={4} sm={4} md={4} lg={4} xl={4} id='cardButtons'>{this.props.buttons}</Col>\n      </Row>\n\n    )\n  }\n}\n\nexport default FlexibleCardHeader;","import React, {Component} from 'react';\n\nclass FlexibleCardBody extends Component {\n\n\tconstructor (props) {\n\t\tsuper (props);\n\n\t\tthis.state = {};\n\t}\n\n\trender () {\n\n\t\treturn (\n\t\t\t<div style={this.props.bodyStyle}>\n\t\t\t\t{this.props.content}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default FlexibleCardBody;","import React, {Component} from 'react';\nimport FlexibleCardHeader from \"./FlexibleCardHeader\";\nimport FlexibleCardBody from \"./FlexibleCardBody\";\n\nclass FlexibleCard extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='fl-card'>\n\t\t\t\t{this.props.title &&\n\t\t\t\t<FlexibleCardHeader title={this.props.title} headerStyle={this.props.headerStyle} buttons={this.props.buttons}/>\n\t\t\t\t}\n\n\t\t\t\t<FlexibleCardBody content={this.props.children} bodyStyle={this.props.bodyStyle}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default FlexibleCard;","import React, {Component} from 'react';\nimport {Col, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, UncontrolledTooltip} from 'reactstrap';\nimport ReactLoading from \"react-loading\";\nimport Select from \"../local_node_modules/react-select\";\nimport Joyride from \"react-joyride\";\n\n\n/**\n * Creates or Updates a given Modal.\n */\nclass SaveEntityModal extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: {},\n      mode: undefined,\n      saving: false,\n      item: undefined,\n      steps: [\n        {\n          target: 'form div:nth-child(1) div',\n          content: 'Yeni oluşturacağınız onay akışı için belge türü seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer div .row:nth-child(1)',\n          content: 'Belgeyi onaylayacak kişiyi seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer div .row:nth-child(2)',\n          content: 'Belgenin onaylanma şeklini seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer div .row:nth-child(3) .row:nth-child(1) ',\n          content: 'Gönderim sıklığını seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer .maxrepeat',\n          content: 'Gönderim işleminin kaç defa tekrar edileceğini seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer div .row:nth-child(3) .row:nth-child(3) ',\n          content: 'Her gönderim yapıldığında bilgilendirilecek olan kişileri seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer div .row:nth-child(3) .row:nth-child(4) ',\n          content: 'Zaman aşımı durumunda bilgilendirilecek olan kişileri seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer div:nth-child(3) > div:nth-child(3)',\n          content: 'Belge onaylandığında bilgilendirilecek olan kişileri seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer div:nth-child(3) > div:nth-child(4)',\n          content: 'Belge reddedildiğinde bilgilendirilecek olan kişileri seçiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n        {\n          target: '#approvalContainer button',\n          content: '\"+\" butonuna tıklayarak onay akışa basamak ekleyebilirsiniz.',\n          placement: \"auto\",\n          disableBeacon: 'true'\n        },\n      ],\n      locale: {\n        back: 'Geri',\n        close: 'Kapat',\n        last: 'Son',\n        next: 'İleri',\n        skip: 'Atla',\n      },\n      run:false\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.validateClass = this.validateClass.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.validateMessage = this.validateMessage.bind(this);\n  }\n\n  componentDidMount() {\n    let mode = '';\n    let item = this.props.item;\n    if (item) {\n      mode = item.id ? 'edit' : 'create';\n    }\n\n    this.setState({mode: mode, item: item})\n  }\n\n  toggle() {\n    this.props.toggle();\n  }\n\n  onSave() {\n    this.setState({saving: true});\n    this.props.onSave(this.state.item, this.state.mode);\n    this.setState({saving: false});\n  }\n\n  validateField(fieldName, value, must) {\n\n    let error = this.state.error;\n    let item = this.state.item;\n\n    const noError = {valid: true, message: ''};\n\n    if (value === undefined || item === '' || (must && (value === null || value === ''))) {\n      error[fieldName] = {valid: false, message: \"Bu alan zorunludur.\"}\n    }\n    else {\n      error[fieldName] = Object.assign({}, noError);\n      item[fieldName] = value;\n      this.setState({item: item});\n    }\n\n    this.setState({error});\n    return error[fieldName];\n  }\n\n  validateClass(id) {\n\n    let error = this.state.error;\n    return (error[id] === undefined ? \"\" : (error[id].valid ? \" has-success\" : \" has-danger\"));\n  }\n\n  validateMessage(id) {\n    let error = this.state.error;\n    return (error[id] === undefined ? '' : (error[id].message));\n  }\n\n  createRequestParams() {\n    let url = this.props.url;\n    let params = {\n      url: url,\n      method: 'post'\n    };\n\n    return params;\n  }\n\n  onChange(event, field) {\n    if (!event) return;\n\n    const target = event.target;\n    const value = field.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.id;\n    this.setState(() => this.validateField(name, value, field.must));\n  }\n\n  onChangeSelect(e, name) {\n\n    if (!e) return;\n\n    const value = e.value;\n\n    let item = this.state.item;\n    item[name] = value;\n    this.setState({item: item}, () => this.validateField(name));\n\n  }\n\n  activateJoyride = () => {\n    this.setState({run : !this.state.run});\n  }\n\n  callback = (data) => {\n    if (data.action === 'close' || data.action === 'skip' || data.type === 'tour:end') {\n      this.setState({run:false})\n    }\n  }\n\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen} size=\"lg\">\n        <Joyride\n            run={this.state.run}\n            steps={this.state.steps}\n            locale={this.state.locale}\n            callback={this.callback}\n            continuous={true}\n            showProgress={true}\n            showSkipButton={true}\n            disableScrollParentFix={true}\n            disableScrolling={true}\n            styles={{\n              options: {\n                zIndex: 999999999999999,\n                primaryColor: \"#50a8e2\",   // \"#fc9636\"\n              }\n            }}\n        />\n        <ModalHeader toggle={this.toggle}>{this.state.mode === 'create' ? 'Yeni Oluştur' : 'Düzenle'}\n          <button className=\"helpButton\" onClick={() => {\n            this.activateJoyride()\n          }} style={{position: \"absolute\", right: \"70px\", alignSelf: \"center\", marginTop: \"-8px\"}}>\n            <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n            <i className=\"far fa-question-circle helpButtonIcon\" style={{opacity: \".5\"}}/></button>\n        </ModalHeader>\n        <ModalBody>\n          {this.state.saving &&\n          <ReactLoading type=\"spinningBubbles\" style={{width: \"70px\", height: \"70px\", margin: \"20px auto 0 auto\", fill: \"#888\"}}/>\n          }\n          {this.props.fields && this.state.item && this.renderFields()}\n        </ModalBody>\n\n        <ModalFooter>\n          <button type=\"button\" onClick={this.toggle}\n                  disabled={this.state.saving}\n                  style={{\n                    background: ' linear-gradient(rgba(125, 125, 125, 0.57), rgb(111, 111, 111))',\n                    padding: '8px 45px 8px 12px'\n                  }}\n                  className=\"TekBtn vazgec\">Kapat\n          </button>\n          <button type=\"button\" style={{padding: '8px 45px 8px 12px'}} onClick={this.onSave}\n                  disabled={this.state.saving} className=\" TekBtn kaydet pull-right\">Kaydet\n          </button>\n        </ModalFooter>\n\n      </Modal>\n    )\n  }\n\n  renderFields() {\n    let fields = this.props.fields;\n    let self = this;\n\n    function renderField(field) {\n      if (field.onlyEditMode && self.state.mode !== 'edit') {\n        return \"\";\n      }\n\n      function renderInput(field) {\n        if (field.Cell && field.Cell !== null) {\n          return field.Cell();\n        }\n\n        if (field.type === 'select') {\n          return <Select name={field.key}\n                         disabled={self.state.mode === 'edit'}\n                         value={self.props.item[field.key]}\n                         clearable={false}\n                         placeholder=\"Seçiniz\"\n                         onChange={e => self.onChangeSelect(e, field.key)}\n                         options={self.state.mode === 'edit' ? field.selectAllData : field.selectData}/>\n        } else if (field.type === 'textarea') {\n          return <textarea id={field.key} style={field.style !== undefined ? field.style : {\"width\": \"100%\"}} value={self.state.item[field.key]}\n                           onChange={e => self.onChange(e, field)}/>\n        } else if (field.type === 'checkbox') {\n          return <Input type={field.type} id={field.key} style={field.style && field.style} checked={self.state.item[field.key]}\n                        onChange={e => self.onChange(e, field)}/>\n        }\n        return <Input type={field.type} id={field.key} style={field.style !== undefined ? field.style : {\"width\": \"100%\"}}\n                      value={self.state.item[field.key]} onChange={e => self.onChange(e, field)}/>\n      }\n\n      return <div key={field.key} className=\"col-sm-6\">\n        <FormGroup row className={self.validateClass(field.key)}>\n          <Label sm='6'>{field.label}{field.must ? \"*\" : \"\"}</Label>\n          <Col sm={6}>\n            {renderInput(field)}\n            {field.type && field.type !== 'select' && self.validateMessage(field.key) !== \"\" &&\n            <UncontrolledTooltip placement=\"right\" target={field.key} delay={0}>\n              {self.validateMessage(field.key)}\n            </UncontrolledTooltip>\n            }\n          </Col>\n        </FormGroup>\n      </div>;\n    }\n\n    return (\n      <Form>\n        <div className=\"col-sm-12 row\">\n          {\n            fields.map(renderField)\n          }\n        </div>\n        {this.props.note && !(this.props.note.onlyEditMode && this.state.mode !== 'edit') && this.props.note.Cell && this.props.note.Cell()}\n      </Form>\n    );\n  }\n\n}\n\nexport default SaveEntityModal;\n\n\n\n","import React, {Component} from 'react';\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nclass SuccessAlert extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (<SweetAlert success\n                        confirmBtnText=\"Tamam\"\n                        confirmBtnBsStyle=\"success\"\n                        title=\"Başarılı\"\n                        onConfirm={this.props.onConfirm}>\n        {this.props.response.headers[this.props.alertHeader]}\n      </SweetAlert>);\n  }\n}\n\nSuccessAlert.defaultProps = {\n  alertHeader: \"x-deftercontrolapp-alert\"\n};\n\n\nexport default SuccessAlert;\n","import React, {Component} from 'react';\nimport {Col, Input, Label, Row} from \"reactstrap\";\nimport NavBarKS from \"../../../components/NavBarKS\";\nimport StickButton from \"../../../components/StickButton\";\nimport FlexibleCard from \"../../../components/FlexibleCard\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport Joyride from \"react-joyride\";\nimport {\n    approverTypes,\n    approverTypesLabelOf,\n    checkGrantToDisplay,\n    chronoUnitFromMinutes, informedType,\n    informedTypes,\n    informedTypesLabelOf,\n    operationTypes, repeatCount,\n    showAxiosError\n} from \"../../../helper/helper\";\nimport ReactLoading from \"react-loading\";\nimport SaveEntityModal from \"../../../components/SaveEntityModal\";\nimport SuccessAlert from \"../../../components/Alert/SuccessAlert\";\nimport MiniButton from \"../../../components/MiniButton\";\nimport Select from \"../../../local_node_modules/react-select\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Alert from \"react-s-alert\";\nimport {getEmployees} from \"../common/PeykHelper\";\nimport {validFlowTemplate} from \"../common/validation/fieldValidation\";\nimport SweetAlertExt from \"../../../components/SweetAlertExt\";\nimport {APPROVAL_FLOW} from \"../../../common/authorities/GrantDef\";\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport Switch from \"react-switch\";\n\n\nclass ApprovalFlow extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleCreate = this.handleCreate.bind(this);\n        this.toggle = this.toggle.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n        this.saveModalStepLine = this.saveModalStepLine.bind(this);\n        this.renderStep = this.renderStep.bind(this);\n        this.renderDFUpdateButtons = this.renderDFUpdateButtons.bind(this);\n        this.callback = this.callback.bind(this);\n\n        this.state = {\n            loading: false,\n            isOpen: false,\n            flow: null,\n            documentTypes: [],\n            allDocumentTypes: [],\n            allCreatedDocumentTypes: [],\n            flows: [],\n            steps: [\n                {\n                    target: '.main-panel',\n                    content: \"Formlarınız için onay akışı ayarlayacağınız ekran burasıdır.\",\n                    placement: \"center\",\n                },\n                {\n                    target: '.main-panel',\n                    content: 'Daha önceden bir onay akışı ayarladıysanız,bu ekrandan düzenleyip kaldırabilirsiniz.',\n                    placement: \"center\",\n                },\n                {\n                    target: '.topBarLeftButtonDropdownDiv button',\n                    content: 'Yeni bir onay akışı ayarlayacaksanız \"Yeni Oluştur\" butonuna tıklayınız.',\n                    placement: \"auto\",\n                },\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            alert: null,\n            showAlert: false,\n            temporaryId: '',\n            searchQuery: undefined,\n            selectedEmployee: [],\n            selectedEmployeeInform: [],\n            selectedGrants: [],\n            selectedGrantsTimeout: [],\n            selectedGrantsWaiting: [],\n            selectedGrantsConfirm: [],\n            selectedGrantsObjection: [],\n            fixedPersonSelected: false,\n            fixedPersonSelectedTimeout: false,\n            fixedPersonSelectedApprove: false,\n            fixedPersonSelectedObjectionInform: false,\n            confirmationByCompany: false,\n            hasCompanyConfirmation: false\n        };\n    }\n\n    componentWillMount() {\n        this.checkCompanyConfirmation();\n        this.fetchData();\n        this.readAdminUsers();\n    }\n\n    checkCompanyConfirmation = () => {\n        let self = this;\n        requestK({\n            url: `/subservice/hasCompanyConfirmation`,\n            method: \"get\",\n        }).then(function (response) {\n            self.setState({hasCompanyConfirmation: response.data});\n        }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    handleCreate() {\n        let flow = {\n            id: null,\n            documentType: \"\",\n            steps: [\n                this.defaultStep()\n            ],\n        };\n        this.setState({flow: flow}, () => this.toggle());\n    }\n\n    defaultStep() {\n        return {\n            label: \"Step\",\n            approverType: \"RECEIVER\",\n            operationType: \"APPROVE\",\n            onWaiting: {\n                waitFor: {amount: 1, unit: \"DAYS\"},\n                maxRepeat: 3,\n                informList: [\"RECEIVER\"],\n                timeoutPolicy: {informList: []}\n            },\n            onConfirm: {informList: []},\n            onObjection: {informList: []}\n        };\n    }\n\n    toggle() {\n        this.setState({isOpen: !this.state.isOpen}, this.fetchData);\n    }\n\n    fetchData() {\n        this.setState({loading: true});\n        let self = this;\n        let searchQuery = !self.state.searchQuery ? '' : self.state.searchQuery.split('formType=')[1];\n        requestK({\n            url: `/approval-flow/document-types`,\n            method: \"get\",\n        }).then(function (response) {\n            self.setState({documentTypes: response.data});\n        }).catch(function (error) {\n            showAxiosError(error);\n        });\n\n        requestK({\n            url: `/approval-flow/all-document-types`,\n            method: \"get\",\n        }).then(function (response) {\n            self.setState({allDocumentTypes: response.data});\n        }).catch(function (error) {\n            showAxiosError(error);\n        });\n\n        requestK({\n            url: `/approval-flow/all-created-document-types`,\n            method: \"get\",\n        }).then(function (response) {\n            self.setState({allCreatedDocumentTypes: response.data});\n        }).catch(function (error) {\n            showAxiosError(error);\n        });\n\n        let params = {\n            url: '/approval-flow/all?formType=' + searchQuery,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({flows: response.data, loading: false});\n            }).catch(function (error) {\n            self.setState({loading: false});\n            showAxiosError(error);\n        });\n    }\n\n    readAdminUsers = () => {\n        let self = this;\n        requestK({\n            url: `/user/fetchCustomerUsers`,\n            method: \"get\",\n        }).then(function (response) {\n            self.setState({adminUsers: response.data});\n        }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    onSave(flow, mode) {\n        let obj = JSON.stringify(flow);\n        let valid = validFlowTemplate(flow);\n        if (valid.valid) {\n            for (let i = 0; i < flow.steps.length; i++) {\n                const step = flow.steps[i];\n                if ((!step.selectedPersons || step.selectedPersons.length === 0) && step.approverType === \"FIXED_MULTI_PERSON\") {\n                    Alert.info(\"Çoklu sabit çalışan alanını boş bırakamazsınız.\");\n                    return;\n                }else  if ((!step.selectedGrants || step.selectedGrants.length === 0) && step.approverType === \"ORGANIZATION_MANAGER\" ||\n                    (!step.onWaiting.selectedGrants || step.onWaiting.selectedGrants.length === 0) && step.onWaiting.informList.includes(\"ORGANIZATION_MANAGER\")  ||\n                    (!step.onWaiting.timeoutPolicy.selectedGrants || step.onWaiting.timeoutPolicy.selectedGrants.length === 0) && step.onWaiting.timeoutPolicy.informList.includes(\"ORGANIZATION_MANAGER\") ||\n                    (!step.onConfirm.selectedGrants || step.onConfirm.selectedGrants.length === 0) && step.onConfirm.informList.includes(\"ORGANIZATION_MANAGER\") ||\n                    (!step.onObjection.selectedGrants || step.onObjection.selectedGrants.length === 0) && step.onObjection.informList.includes(\"ORGANIZATION_MANAGER\")) {\n                    Alert.info(\"Rol Yetkileri alanını boş bırakamazsınız.\");\n                    return;\n                }else if ((!step.onWaiting.selectedPersonForNotifications || step.onWaiting.selectedPersonForNotifications.length === 0) &&  step.onWaiting.informList.includes(\"FIXED_MULTI_PERSON\") ||\n                    (!step.onWaiting.timeoutPolicy.selectedPersonForNotifications || step.onWaiting.timeoutPolicy.selectedPersonForNotifications.length === 0) && step.onWaiting.timeoutPolicy.informList.includes(\"FIXED_MULTI_PERSON\") ||\n                    (!step.onConfirm.selectedPersonForNotifications || step.onConfirm.selectedPersonForNotifications.length === 0) && step.onConfirm.informList.includes(\"FIXED_MULTI_PERSON\") ||\n                    (!step.onObjection.selectedPersonForNotifications || step.onObjection.selectedPersonForNotifications.length === 0) && step.onObjection.informList.includes(\"FIXED_MULTI_PERSON\")) {\n                    Alert.info(\"Bildirim için çoklu sabit çalışan alanını boş bırakamazsınız.\");\n                    return;\n                }\n            }\n            requestK({\n                url: mode === 'create' ? '/approval-flow/create' : '/approval-flow/update',\n                method: \"post\",\n                data: obj\n            }).then(response => {\n                this.setState({\n                    alert: (<SuccessAlert response={response} onConfirm={() => {\n                        this.setState({alert: null});\n                        this.toggle();\n                        this.setState({flow: null});\n                        this.fetchData();\n                    }}/>)\n                });\n            }).catch(error => {\n                this.toggle();\n                this.setState({flow: null});\n                showAxiosError(error);\n            });\n        } else {\n            Alert.info(valid.errorMessage);\n        }\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true});\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback(data) {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    }\n\n    deleteClicked = (df) => {\n        this.setState({showAlert: false});\n        let self = this;\n        requestK({\n            url: `/approval-flow/` + df,\n            method: \"post\",\n        }).then(function () {\n            self.fetchData();\n        }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    handleSearch = (searchQuery) => {\n        this.setState({searchQuery},\n            () => this.fetchData());\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let locale = this.state.locale;\n\n        const headerStyle = {\n            fontFamily: 'Montserrat',\n            height: '30%',\n            fontWeight: '500',\n            background: 'white',\n            padding: '0 0 0 15px',\n            margin: '0'\n        };\n\n        const bodyStyle = {\n            padding: '3% 2% 2% 2%',\n            background: 'white',\n            margin: '0 0 0 0'\n        };\n\n        const createFields = [\n            {\n                label: \"Belge Türü\",\n                key: \"documentType\",\n                type: \"select\",\n                selectData: this.state.documentTypes && this.state.documentTypes.map(val => new Object({\n                    value: val,\n                    label: val\n                })),\n                selectAllData: this.state.allDocumentTypes && this.state.allDocumentTypes.map(val => new Object({\n                    value: val,\n                    label: val\n                })),\n            }\n        ];\n\n        const fields = [\n            {\n                label: \"Form Türü\",\n                accessor: \"formType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.allCreatedDocumentTypes && this.state.allCreatedDocumentTypes.map(val => new Object({\n                    value: val,\n                    label: val\n                })),\n            }\n        ];\n\n        return (\n            <Row className='customizedBackground'>\n                {this.state.joyrideActive &&\n                    <Joyride\n                        disableBeacon={false}\n                        autoStart\n                        locale={locale}\n                        steps={steps}\n                        continuous={true}\n                        run={this.state.shouldRun}\n                        scrollToFirstStep={true}\n                        showProgress={true}\n                        showSkipButton={true}\n                        scrollToSteps={true}\n                        disableCloseOnEsc={true}\n                        disableOverlay={false}\n                        disableOverlayClicks={false}\n                        keyboardNavigation={true}\n                        hideBackButton={false}\n                        disableOverlayClose={true}\n                        callback={this.callback}\n                        holePadding={0}\n                        shouldRun={this.state.shouldRun}\n                        styles={{\n                            options: {\n                                zIndex: 100000,\n                                primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                            }\n                        }}/>}\n\n                {this.state.showAlert &&\n                    <SweetAlertExt showCancel warning\n                                   confirmBtnText=\"Evet\"\n                                   cancelBtnText=\"Hayır\"\n                                   confirmBtnBsStyle=\"danger\"\n                                   cancelBtnBsStyle=\"default\"\n                                   title=\"Silmek istediğinize emin misiniz?\"\n                                   onConfirm={() => this.deleteClicked(this.state.temporaryId)}\n                                   onCancel={() => this.setState({showAlert: false})}\n                                   loading={this.state.deleteLoading}>\n                    </SweetAlertExt>\n                }\n\n                <NavBarKS offsetWidth={this.props.offsetWidth} innerWidth={window.innerWidth} name={this.props.name}>\n                    {checkGrantToDisplay(this, APPROVAL_FLOW) &&\n                        <StickButton position=\"leftSide\"\n                                     onClick={() => this.handleCreate()}\n                                     title=\"Yeni\"\n                                     label=\"Yeni Oluştur\"\n                                     className=\"stickButton plus-circle\"\n                                     icon=\"plus-circle\"\n                                     style={{fontSize: \"x-small\"}}/>}\n\n                    <div className=\"helpButtonContainer\" position='rightSide'\n                         style={{marginTop: \"1.4em\"}}>\n                        <button className=\"helpButton\" onClick={() => {\n                            this.activateJoyride()\n                        }}>\n                            <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                            <i className=\"far fa-question-circle helpButtonIcon\"/>\n                        </button>\n                    </div>\n                </NavBarKS>\n\n                {\n                    this.state.loading &&\n                    <ReactLoading type=\"spinningBubbles\"\n                                  style={{width: \"70px\", height: \"70px\", margin: \"20px auto 0 auto\", fill: \"#888\"}}/>\n                }\n                <div className=\"card-body\">\n                    <div className=\"\">\n                        <div className=\"\" style={{marginTop: '10px', marginBottom: '0px'}}>\n                            <DetailedSearch fields={fields}\n                                            loading={this.state.loading}\n                                            onSearch={this.handleSearch}/>\n                        </div>\n                    </div>\n                </div>\n                {\n                    !this.state.loading &&\n                    <Row className='stepsOfFlexCards' style={{padding: '3% 2% 3% 2%'}}>\n                        {this.state.flows.map(df =>\n                            <Col key={df.id} sm='12' md='12' lg='12' style={{marginBottom: '8px'}}>\n                                <FlexibleCard title={df.documentType} headerStyle={headerStyle} bodyStyle={bodyStyle}\n                                              buttons={this.renderDFUpdateButtons(df)}>\n                                    <Row>\n                                        <div className=\"col-sm-12\">\n                                            <div className=\"col-sm-3\"/>\n                                            {df.steps.map((step) => this.renderStep(step))}\n                                        </div>\n                                    </Row>\n                                </FlexibleCard>\n                            </Col>\n                        )}\n                    </Row>\n                }\n                {this.state.isOpen &&\n                    <SaveEntityModal isOpen={this.state.isOpen} toggle={this.toggle} item={this.state.flow}\n                                     fields={createFields}\n                                     onSave={(item, mode) => this.onSave(item, mode)}\n                                     note={{\n                                         onlyEditMode: false, Cell: () => {\n                                             return (\n                                                 <div className=\"col-sm-12 row\">\n                                                     <div className=\"col-sm-12 row\">\n                                                         <Label sm={4} className='headerContainer'>Adımlar</Label>\n                                                     </div>\n                                                     {\n                                                         this.state.flow.steps.map((step, index) => this.saveModalStepLine(step, index))\n                                                     }\n                                                 </div>)\n                                         }\n                                     }}\n                    />}\n            </Row>\n        )\n    }\n\n    renderDFUpdateButtons(df) {\n        return (df.id === null ? '' :\n            <Row style={{margin: \"0\", padding: \"3px 0 0 0\", textAlign: \"right\"}}>\n                <button style={{margin: \"0 2px 0 0\"}} className={\"simpleButton sEdit\"}\n                        onClick={() => this.setState({flow: df, isOpen: true})}/>\n                {checkGrantToDisplay(this, APPROVAL_FLOW) &&\n                    <button className=\"simpleButton trash\"\n                            onClick={() => {\n                                this.setState({showAlert: true, temporaryId: df.id})\n                                // this.setState({\n                                //   alert: (\n                                //     <SweetAlertExt showCancel warning\n                                //                    confirmBtnText=\"Evet\"\n                                //                    cancelBtnText=\"Hayır\"\n                                //                    confirmBtnBsStyle=\"danger\"\n                                //                    cancelBtnBsStyle=\"default\"\n                                //                    title=\"Emin misiniz?\"\n                                //                    onConfirm={() => this.deleteClicked(df.id)}\n                                //                    onCancel={() => this.setState({alert: null})}\n                                //                    loading={this.state.deleteLoading}\n                                //     >\n                                //       {/*{row.formattedName + \" \" + row.name + \" silinecek.\"}*/}\n                                //     </SweetAlertExt>\n                                //   )\n                                // });\n                            }}\n                        // onClick={event => {\n                        //   let self = this;\n                        //   requestK({\n                        //     url: `/approval-flow/` + df.id,\n                        //     method: \"delete\",\n                        //   }).then(function (response) {\n                        //     self.fetchData();\n                        //   }).catch(function (error) {\n                        //     showAxiosError(error);\n                        //   });\n                        // }}\n                    />}\n            </Row>);\n    }\n\n    renderStep(step) {\n        return <div className=\"col-sm-12 row\">\n            <div className=\"col-sm-12 row\">\n                <Label sm={4} className='titleOfSteps'>Onaylayacak: </Label>\n                <Label sm={8} className='contentOfSteps'>{approverTypesLabelOf(step.approverType)}</Label>\n                {/*<Label sm={4}/>*/}\n            </div>\n            {\n                step.onWaiting &&\n                <div className=\"col-sm-12 row\">\n                    <div className=\"col-sm-12 row\">\n                        <Label sm={4} className='titleOfSteps' style={{fontWeight: '600', opacity: '0.8'}}>Bekleme\n                            Politikasi</Label>\n                        <Label sm={8} className='contentOfSteps stepOnWaiting'>\n                            {step.onWaiting.waitFor.amount} {this.translateChronoUnit(step.onWaiting.waitFor.unit)} arayla, {step.onWaiting.maxRepeat} tekrar\n                            <br/>\n                            {approverTypesLabelOf(step.onWaiting.informType)}\n                        </Label>\n                    </div>\n                    <div className=\"col-sm-12 row\">\n                        <Label sm={7}/>\n                    </div>\n                    <div className=\"col-sm-12 row\">\n                        <Label sm={4} className='titleOfSteps'>Beklemede Bilgilendirecekler</Label>\n                        <Label sm={8}\n                               className='contentOfSteps stepOnWaiting'>{step.onWaiting.informList && !!step.onWaiting.informList.length && step.onWaiting.informList.map(value => informedTypesLabelOf(value)).join(\", \")}</Label>\n                        {/*<Label sm={4}/>*/}\n                    </div>\n                    <div className=\"col-sm-12 row\">\n                        <Label sm={4} className='titleOfSteps'>Zaman Aşımı Bilgilendirilecekler</Label>\n                        <Label\n                            sm={8}\n                            className='contentOfSteps stepOnWaiting'>{step.onWaiting.timeoutPolicy && step.onWaiting.timeoutPolicy.informList && !!step.onWaiting.timeoutPolicy.informList.length && step.onWaiting.timeoutPolicy.informList.map(value => informedTypesLabelOf(value)).join(\", \")}</Label>\n                        {/*<Label sm={4}/>*/}\n                    </div>\n                </div>\n            }\n            {\n                step.onConfirm &&\n                <div className=\"col-sm-12 row\">\n                    <Label sm={4} className='titleOfSteps'>Onay Bilgilendirilecekler</Label>\n                    <Label sm={8}\n                           className='contentOfSteps'>{step.onConfirm.informList.map(value => informedTypesLabelOf(value)).join(\", \")}</Label>\n                    {/*<Label sm={4}/>*/}\n                </div>\n            }\n            {\n                step.onObjection &&\n                <div className=\"col-sm-12 row\">\n                    <Label sm={4} className='titleOfSteps'>Red Durumu Bilgilendirilecekler</Label>\n                    <Label sm={8}\n                           className='contentOfSteps'>{step.onObjection.informList.map(value => informedTypesLabelOf(value)).join(\", \")}</Label>\n                    {/*<Label sm={4}/>*/}\n                </div>\n            }\n        </div>;\n    }\n\n    translateChronoUnit = (unit) => {\n        return chronoUnitFromMinutes().filter(option => option.value === unit).map(option => option.label);\n    }\n\n    saveModalStepLine(step, index) {\n        return (\n            <div key={index} className=\"col-sm-12 row \" id='approvalContainer'>\n                {this.saveModalStep(step)}\n                {index !== 0 && <MiniButton title=\"Cikart\" faIcon=\"fa-minus\" color=\"danger\" onClick={() => {\n                    this.state.flow.steps.splice(index, 1);\n                    this.setState({flow: this.state.flow});\n                }}/>}\n                <MiniButton title=\"Ekle\" faIcon=\"fa-plus\" color=\"success\" onClick={() => {\n                    this.state.flow.steps.splice(index + 1, 0, this.defaultStep());\n                    this.setState({flow: this.state.flow, selectedEmployee: [], selectedEmployeeInform: []});\n                }}/>\n            </div>\n        )\n    }\n\n    onChangeFixedPerson(step, e) {\n        this.setState({alert: null});\n        step.fixedPersonId = e.value;\n        step.fixedPersonLabel = e.label;\n        step.approverType = \"FIXED_PERSON\";\n        if (!step.onWaiting.informList.includes(\"FIXED_PERSON\")) {\n            step.onWaiting.informList.push(\"FIXED_PERSON\");\n        }\n        step.onWaiting.fixedPersonId = e.value;\n        step.onWaiting.fixedPersonLabel = e.label;\n    }\n\n    onChangeFixedPersonInform(e, step) {\n        this.setState({alert: null, fixedPersonSelected: true});\n        step.onWaiting.fixedPersonId = e.value;\n        step.onWaiting.fixedPersonLabel = e.label;\n    }\n\n    onChangeFixedPersonTimeout(e, step) {\n        this.setState({alert: null, fixedPersonSelectedTimeout: true});\n        step.onWaiting.timeoutPolicy.fixedPersonId = e.value;\n        step.onWaiting.timeoutPolicy.fixedPersonLabel = e.label;\n    }\n\n    onChangeFixedPersonApprove(e, step) {\n        this.setState({alert: null, fixedPersonSelectedApprove: true});\n        step.onConfirm.fixedPersonId = e.value;\n        step.onConfirm.fixedPersonLabel = e.label;\n    }\n\n    onChangeFixedPersonObjectionInform(e, step) {\n        this.setState({alert: null, fixedPersonSelectedObjectionInform: true});\n        step.onObjection.fixedPersonId = e.value;\n        step.onObjection.fixedPersonLabel = e.label;\n    }\n\n    onChangeMultiFixedPerson(e, step) {\n        let {selectedEmployee} = this.state;\n        step.selectedPersons = selectedEmployee;\n        step.fixedPersonId = e.value;\n        step.fixedPersonLabel = e.label;\n        step.approverType = \"FIXED_MULTI_PERSON\";\n        if (!step.onWaiting.informList.includes(\"FIXED_MULTI_PERSON\")) {\n            step.onWaiting.informList.push(\"FIXED_MULTI_PERSON\");\n        }\n\n        if (e === null) {\n            step.fixedPersonIdList = [];\n        } else {\n            step.fixedPersonIdList = e.map(option => (option.value));\n        }\n\n        if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n            // selectedEmployee = [];\n            step.selectedPersons = [];\n        } else {\n            // selectedEmployee = e.map(item => ({value: item.value, label: item.label}))\n            step.selectedPersons = e.map(item => ({value: item.value, label: item.label}))\n        }\n        this.setState({selectedEmployee: step.selectedPersons});\n    }\n\n    onChangeMultiFixedPersonForNotification(e, step) {\n        let selectedEmployeeInform = e;\n        if (selectedEmployeeInform.length > 3) {\n            Alert.error(\"En fazla 3 çalışan seçilebilir!\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        } else {\n            step.onWaiting.selectedPersonForNotifications = selectedEmployeeInform;\n            if (e === null) {\n                step.onWaiting.fixedPersonIdList = [];\n            } else {\n                step.onWaiting.fixedPersonIdList = e.map(option => (option.value));\n            }\n\n            if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n                // selectedEmployeeInform = [];\n                step.onWaiting.selectedPersonForNotifications = [];\n            } else {\n                // selectedEmployeeInform = e.map(item => ({value: item.value, label: item.label}))\n                step.onWaiting.selectedPersonForNotifications = e.map(item => ({value: item.value, label: item.label}))\n            }\n            this.setState({selectedEmployeeInform: step.onWaiting.selectedPersonForNotifications});\n        }\n    }\n\n    onChangeMultiFixedPersonForTimeout(e, step) {\n        let selectedEmployeeInform = e;\n        if (selectedEmployeeInform.length > 3) {\n            Alert.error(\"En fazla 3 çalışan seçilebilir!\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        } else {\n            step.onWaiting.timeoutPolicy.selectedPersonForNotifications = selectedEmployeeInform;\n            if (e === null) {\n                step.onWaiting.timeoutPolicy.fixedPersonIdList = [];\n            } else {\n                step.onWaiting.timeoutPolicy.fixedPersonIdList = e.map(option => (option.value));\n            }\n\n            if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n                step.onWaiting.timeoutPolicy.selectedPersonForNotifications = [];\n            } else {\n                step.onWaiting.timeoutPolicy.selectedPersonForNotifications = e.map(item => ({value: item.value, label: item.label}))\n            }\n            this.setState({selectedEmployeeInform: step.onWaiting.timeoutPolicy.selectedPersonForNotifications});\n        }\n    }\n    onChangeMultiFixedPersonForConfirm(e, step) {\n        let selectedEmployeeInform = e;\n        if (selectedEmployeeInform.length > 3) {\n            Alert.error(\"En fazla 3 çalışan seçilebilir!\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        } else {\n            step.onConfirm.selectedPersonForNotifications = selectedEmployeeInform;\n            if (e === null) {\n                step.onConfirm.fixedPersonIdList = [];\n            } else {\n                step.onConfirm.fixedPersonIdList = e.map(option => (option.value));\n            }\n\n            if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n                step.onConfirm.selectedPersonForNotifications = [];\n            } else {\n                step.onConfirm.selectedPersonForNotifications = e.map(item => ({value: item.value, label: item.label}))\n            }\n            this.setState({selectedEmployeeInform: step.onConfirm.selectedPersonForNotifications});\n        }\n    }\n    onChangeMultiFixedPersonForObjection(e, step) {\n        let selectedEmployeeInform = e;\n        if (selectedEmployeeInform.length > 3) {\n            Alert.error(\"En fazla 3 çalışan seçilebilir!\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        } else {\n            step.onObjection.selectedPersonForNotifications = selectedEmployeeInform;\n            if (e === null) {\n                step.onObjection.fixedPersonIdList = [];\n            } else {\n                step.onObjection.fixedPersonIdList = e.map(option => (option.value));\n            }\n\n            if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n                step.onObjection.selectedPersonForNotifications = [];\n            } else {\n                step.onObjection.selectedPersonForNotifications = e.map(item => ({value: item.value, label: item.label}))\n            }\n            this.setState({selectedEmployeeInform: step.onObjection.selectedPersonForNotifications});\n        }\n    }\n    onChangeMultiGrants(e, step) {\n        let {selectedGrants} = this.state;\n        step.selectedGrants = selectedGrants;\n        step.approverType = \"ORGANIZATION_MANAGER\";\n        if (!step.onWaiting.informList.includes(\"ORGANIZATION_MANAGER\")) {\n            step.onWaiting.informList.push(\"ORGANIZATION_MANAGER\");\n        }\n        if (e === null) {\n            step.grantIdList = [];\n        } else {\n            step.grantIdList = e.map(option => (option.value));\n        }\n\n        if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n            step.selectedGrants = [];\n        } else {\n            step.selectedGrants = e.map(item => ({value: item.value, label: item.label}))\n        }\n        this.setState({selectedGrants: step.selectedGrants});\n    }\n\n    onChangeMultiGrantsWaiting(e, step) {\n        let {selectedGrantsWaiting} = this.state;\n        step.onWaiting.selectedGrants = selectedGrantsWaiting;\n        step.informedType = \"ORGANIZATION_MANAGER\";\n\n        if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n            step.onWaiting.selectedGrants = [];\n        } else {\n            step.onWaiting.selectedGrants = e.map(item => ({value: item.value, label: item.label}))\n        }\n        this.setState({selectedGrantsWaiting: step.onWaiting.selectedGrants});\n    }\n\n    onChangeMultiGrantsTimeout(e, step) {\n        let {selectedGrantsTimeout} = this.state;\n        step.onWaiting.timeoutPolicy.selectedGrants = selectedGrantsTimeout;\n        step.informedTypes = \"ORGANIZATION_MANAGER\";\n\n        if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n            step.onWaiting.timeoutPolicy.selectedGrants = [];\n        } else {\n            step.onWaiting.timeoutPolicy.selectedGrants = e.map(item => ({value: item.value, label: item.label}))\n        }\n        this.setState({selectedGrantsTimeout: step.onWaiting.timeoutPolicy.selectedGrants});\n    }\n\n    onChangeMultiGrantsConfirm(e, step) {\n        let {selectedGrantsConfirm} = this.state;\n        step.onConfirm.selectedGrants = selectedGrantsConfirm;\n        step.informedTypes = \"ORGANIZATION_MANAGER\";\n\n        if (e === null) {\n            step.onConfirm.grantIdList = [];\n        } else {\n            step.onConfirm.grantIdList = e.map(option => (option.value));\n        }\n\n        if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n            step.onConfirm.selectedGrants = [];\n        } else {\n            step.onConfirm.selectedGrants = e.map(item => ({value: item.value, label: item.label}))\n        }\n        this.setState({selectedGrantsConfirm: step.onConfirm.selectedGrants});\n    }\n\n    onChangeMultiGrantsObjection(e, step) {\n        let {selectedGrantsObjection} = this.state;\n        step.onObjection.selectedGrants = selectedGrantsObjection;\n        step.informedTypes = \"ORGANIZATION_MANAGER\";\n\n        if (e === null) {\n            step.onObjection.grantIdList = [];\n        } else {\n            step.onObjection.grantIdList = e.map(option => (option.value));\n        }\n\n        if (!Array.isArray(e) || (Array.isArray(e) && e.length === 0)) {\n            step.onObjection.selectedGrants = [];\n        } else {\n            step.onObjection.selectedGrants = e.map(item => ({value: item.value, label: item.label}))\n        }\n        this.setState({selectedGrantsObjection: step.onObjection.selectedGrants});\n    }\n    setFixedPerson(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit Çalışan Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null});\n                            }}>\n                    <Select.Async multi={false}\n                                  ignoreAccents={false}\n                                  value={step.fixedPersonId}\n                                  onChange={(e) => this.onChangeFixedPerson(step, e)}\n                                  isLoading={true}\n                                  autoload={false}\n                                  cache={false}\n                                  clearable={false}\n                                  filterOptions={(options) => options}\n                                  noResultsText=\"Kayıt bulunamadı.\"\n                                  searchPromptText=\"Arama için en az 2 karakter giriniz.\"\n                                  placeholder=\"İsim veya soyisim ile ara...\"\n                                  loadingPlaceholder=\"Yükleniyor...\"\n                                  loadOptions={getEmployees}/>\n                </SweetAlert>\n            )\n        });\n    }\n\n    fixedPersonInform(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit Çalışan Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null}, () => this.clearFixedPersonList(step));\n                            }}\n                >\n                    <Select.Async multi={false}\n                                  ignoreAccents={false}\n                                  value={step.onWaiting.fixedPersonId}\n                                  onChange={(e) => this.onChangeFixedPersonInform(e, step)}\n                                  isLoading={true}\n                                  autoload={false}\n                                  cache={false}\n                                  clearable={false}\n                                  filterOptions={(options) => options}\n                                  noResultsText=\"Kayıt bulunamadı.\"\n                                  searchPromptText=\"Arama için en az 2 karakter giriniz.\"\n                                  placeholder=\"İsim veya soyisim ile ara...\"\n                                  loadingPlaceholder=\"Yükleniyor...\"\n                                  loadOptions={getEmployees}/>\n                </SweetAlert>\n            )\n        });\n    }\n\n    fixedPersonTimeout(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit Çalışan Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null}, () => {\n                                    this.clearFixedPersonTimeoutList(step)\n                                });\n                            }}>\n                    <Select.Async multi={false}\n                                  ignoreAccents={false}\n                                  value={step.onWaiting.fixedPersonId}\n                                  onChange={(e) => this.onChangeFixedPersonTimeout(e, step)}\n                                  isLoading={true}\n                                  autoload={false}\n                                  cache={false}\n                                  clearable={false}\n                                  filterOptions={(options) => options}\n                                  noResultsText=\"Kayıt bulunamadı.\"\n                                  searchPromptText=\"Arama için en az 2 karakter giriniz.\"\n                                  placeholder=\"İsim veya soyisim ile ara...\"\n                                  loadingPlaceholder=\"Yükleniyor...\"\n                                  loadOptions={getEmployees}/>\n                </SweetAlert>\n            )\n        });\n    }\n\n    fixedPersonApprove(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit Çalışan Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null}, () => {\n                                    this.clearFixedPersonApproveList(step)\n                                });\n                            }}>\n                    <Select.Async multi={false}\n                                  ignoreAccents={false}\n                                  value={step.onConfirm.fixedPersonId}\n                                  onChange={(e) => this.onChangeFixedPersonApprove(e, step)}\n                                  isLoading={true}\n                                  autoload={false}\n                                  cache={false}\n                                  clearable={false}\n                                  filterOptions={(options) => options}\n                                  noResultsText=\"Kayıt bulunamadı.\"\n                                  searchPromptText=\"Arama için en az 2 karakter giriniz.\"\n                                  placeholder=\"İsim veya soyisim ile ara...\"\n                                  loadingPlaceholder=\"Yükleniyor...\"\n                                  loadOptions={getEmployees}/>\n                </SweetAlert>\n            )\n        });\n    }\n\n    fixedPersonObjectionInform(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit Çalışan Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null}, () => {\n                                    this.clearFixedPersonObjectionInformList(step)\n                                });\n                            }}>\n                    <Select.Async multi={false}\n                                  ignoreAccents={false}\n                                  value={step.onObjection.fixedPersonId}\n                                  onChange={(e) => this.onChangeFixedPersonObjectionInform(e, step)}\n                                  isLoading={true}\n                                  autoload={false}\n                                  cache={false}\n                                  clearable={false}\n                                  filterOptions={(options) => options}\n                                  noResultsText=\"Kayıt bulunamadı.\"\n                                  searchPromptText=\"Arama için en az 2 karakter giriniz.\"\n                                  placeholder=\"İsim veya soyisim ile ara...\"\n                                  loadingPlaceholder=\"Yükleniyor...\"\n                                  loadOptions={getEmployees}/>\n                </SweetAlert>\n            )\n        });\n    }\n\n\n    getOptions = (input) => {\n        let self = this;\n        if (input && input.length > 2) {\n            let params = {\n                url: `/employee/searchEmployee?search=${input}&customerId=${self.props.currentUser.customerId}`,\n                method: \"get\",\n            };\n            return requestK(params)\n                .then((response) => {\n                    return response.data;\n                }).then((data) => {\n                    return {\n                        options: data.map(item => ({\n                            value: item.employeeUserId,\n                            label: item.name + \" \" + item.surname + \" [Tckn: \" + item.tckn + \"]\",\n                            data: item\n                        }))\n                    };\n                });\n        } else {\n            return Promise.resolve({options: []});\n        }\n    }\n    getGrants = (input) => {\n        let self = this;\n        if (input && input.length > 2) {\n            let params = {\n                url: `/role/searchGrant?search=${input}`,\n                method: \"get\",\n            };\n            return requestK(params)\n                .then((response) => {\n                    return response.data;\n                }).then((data) => {\n                    return {\n                        options: data.map(item => ({\n                            value: item.id,\n                            label: item.description.tr,\n                            data: item\n                        }))\n                    };\n                });\n        } else {\n            return Promise.resolve({options: []});\n        }\n    }\n\n    onChangeFixedHrAdmin(step, e) {\n        step.fixedPersonId = e.value;\n        step.fixedPersonLabel = e.label;\n        step.approverType = \"FIXED_ADMIN\";\n        if (!step.onWaiting.informList.includes(\"FIXED_ADMIN\")) {\n            step.onWaiting.informList.push(\"FIXED_ADMIN\");\n        }\n        step.onWaiting.fixedPersonId = e.value;\n        step.onWaiting.fixedPersonLabel = e.label;\n        this.setState({alert: null});\n    }\n\n    setFixedHrAdmin(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit IK Admin Hesabı Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null});\n                            }}>\n                    <Select value={step.fixedPersonId}\n                            onChange={(e) => this.onChangeFixedHrAdmin(step, e)}\n                            clearable={false}\n                            placeholder=\"IK Admin Hesabı Seçiniz...\"\n                            options={this.state.adminUsers.map(user => ({\n                                ...user,\n                                disabled: user.value === -1\n                            }))}/>\n                </SweetAlert>\n            )\n        });\n    }\n\n    onChangeWaitingFixedHrAdmin(step, e) {\n        step.onWaiting.fixedPersonId = e.value;\n        step.onWaiting.fixedPersonLabel = e.label;\n        this.setState({alert: null});\n    }\n    setWaitingFixedHrAdmin(step) {\n        if (!step.onWaiting.fixedPersonLabel) {\n            this.setState({\n                alert: (\n                    <SweetAlert info\n                                confirmBtnText=\"İptal\"\n                                confirmBtnBsStyle=\"warning\"\n                                title=\"Sabit IK Admin Hesabı Seçiniz\"\n                                style={{height: '450px'}}\n                                onConfirm={() => {\n                                    this.setState({alert: null});\n                                }}>\n                        <Select value={step.fixedPersonId}\n                                onChange={(e) => this.onChangeWaitingFixedHrAdmin(step, e)}\n                                clearable={false}\n                                placeholder=\"IK Admin Hesabı Seçiniz...\"\n                                options={this.state.adminUsers.map(user => ({\n                                    ...user,\n                                    disabled: user.value === -1\n                                }))}/>\n                    </SweetAlert>\n                )\n            });\n        }\n    }\n    onChangeTimeoutFixedHrAdmin(step, e) {\n        step.onWaiting.timeoutPolicy.fixedPersonId = e.value;\n        step.onWaiting.timeoutPolicy.fixedPersonLabel = e.label;\n        step.onWaiting.timeoutPolicy.approverType = \"FIXED_ADMIN\";\n        this.setState({alert: null});\n    }\n    setTimeoutFixedHrAdmin(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit IK Admin Hesabı Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null});\n                            }}>\n                    <Select value={step.fixedPersonId}\n                            onChange={(e) => this.onChangeTimeoutFixedHrAdmin(step, e)}\n                            clearable={false}\n                            placeholder=\"IK Admin Hesabı Seçiniz...\"\n                            options={this.state.adminUsers.map(user => ({\n                                ...user,\n                                disabled: user.value === -1\n                            }))}/>\n                </SweetAlert>\n            )\n        });\n    }\n    onChangeConfirmFixedHrAdmin(step, e) {\n        step.onConfirm.fixedPersonId = e.value;\n        step.onConfirm.fixedPersonLabel = e.label;\n        step.onConfirm.approverType = \"FIXED_ADMIN\";\n        this.setState({alert: null});\n    }\n    setConfirmFixedHrAdmin(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit IK Admin Hesabı Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null});\n                            }}>\n                    <Select value={step.fixedPersonId}\n                            onChange={(e) => this.onChangeConfirmFixedHrAdmin(step, e)}\n                            clearable={false}\n                            placeholder=\"IK Admin Hesabı Seçiniz...\"\n                            options={this.state.adminUsers.map(user => ({\n                                ...user,\n                                disabled: user.value === -1\n                            }))}/>\n                </SweetAlert>\n            )\n        });\n    }\n    onChangeObjectionFixedHrAdmin(step, e) {\n        step.onObjection.fixedPersonId = e.value;\n        step.onObjection.fixedPersonLabel = e.label;\n        step.onObjection.approverType = \"FIXED_ADMIN\";\n        this.setState({alert: null});\n    }\n    setObjectionFixedHrAdmin(step) {\n        this.setState({\n            alert: (\n                <SweetAlert info\n                            confirmBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"warning\"\n                            title=\"Sabit IK Admin Hesabı Seçiniz\"\n                            style={{height: '450px'}}\n                            onConfirm={() => {\n                                this.setState({alert: null});\n                            }}>\n                    <Select value={step.fixedPersonId}\n                            onChange={(e) => this.onChangeObjectionFixedHrAdmin(step, e)}\n                            clearable={false}\n                            placeholder=\"IK Admin Hesabı Seçiniz...\"\n                            options={this.state.adminUsers.map(user => ({\n                                ...user,\n                                disabled: user.value === -1\n                            }))}/>\n                </SweetAlert>\n            )\n        });\n    }\n    clearGrantList(step) {\n        step.grantIdList = [];\n        step.selectedGrants = [];\n    };\n\n    clearGrantListonWaiting(step) {\n        step.onWaiting.grantIdList = [];\n        step.onWaiting.selectedGrants = [];\n    };\n\n    clearMultiPersonList(step) {\n        step.selectedPersons = [];\n        step.fixedPersonIdList = [];\n    }\n\n    clearMultiPersonListonWaiting(step) {\n        step.onWaiting.selectedPersonForNotifications = [];\n        step.onWaiting.fixedPersonIdList = [];\n    }\n\n    clearFixedPerson(step) {\n        step.fixedPersonId = null;\n        step.fixedPersonLabel = \"\";\n        step.onWaiting.fixedPersonId = null;\n        step.onWaiting.fixedPersonLabel = \"\";\n    }\n\n    clearFixedPersonList(step) {\n        let newInformList;\n        step.onWaiting.fixedPersonId = null;\n        step.onWaiting.fixedPersonLabel = \"\";\n        newInformList = step.onWaiting.informList.filter(object => object !== \"FIXED_PERSON\");\n        step.onWaiting.informList = newInformList;\n        this.setState({flow: this.state.flow, fixedPersonSelected: false});\n    }\n\n    clearFixedPersonTimeoutList(step) {\n        let newInformTimeoutList;\n        step.onWaiting.timeoutPolicy.fixedPersonId = null;\n        step.onWaiting.timeoutPolicy.fixedPersonLabel = \"\";\n        newInformTimeoutList = step.onWaiting.timeoutPolicy.informList.filter(object => object !== \"FIXED_PERSON\");\n        step.onWaiting.timeoutPolicy.informList = newInformTimeoutList;\n        this.setState({flow: this.state.flow, fixedPersonSelectedTimeout: false});\n    }\n\n    clearFixedPersonApproveList(step) {\n        let newInformApproveList;\n        step.onConfirm.fixedPersonId = null;\n        step.onConfirm.fixedPersonLabel = \"\";\n        newInformApproveList = step.onConfirm.informList.filter(object => object !== \"FIXED_PERSON\");\n        step.onConfirm.informList = newInformApproveList;\n        this.setState({flow: this.state.flow, fixedPersonSelectedApprove: false});\n    }\n\n    clearFixedPersonObjectionInformList(step) {\n        let newInformObjectionInformList;\n        step.onObjection.fixedPersonId = null;\n        step.onObjection.fixedPersonLabel = \"\";\n        newInformObjectionInformList = step.onObjection.informList.filter(object => object !== \"FIXED_PERSON\");\n        step.onObjection.informList = newInformObjectionInformList;\n        this.setState({flow: this.state.flow, fixedPersonSelectedObjectionInform: false});\n    }\n\n    confirmationByCompanyOnChange = (e, step) => {\n        step.confirmationByCompany = (e === true || e === false) ? e : e.target.value;\n        this.setState({flow: this.state.flow});\n    };\n\n    saveModalStep(step) {\n        return <div className=\"col-sm-10\">\n            {this.state.alert}\n            <div className=\"col-sm-12 row\">\n                <Label sm={3}>Onaylayacak:</Label>\n                <Select className={\"col-sm-5\"}\n                        name={\"approverType\"}\n                        value={step.approverType}\n                        clearable={false}\n                        placeholder=\"\"\n                        noResultsText={\"Veri yok\"}\n                        onChange={e => {\n                            const previousApproverType = step.approverType;\n                            step.approverType = e ? e.value : null;\n                            if (e === null) {\n                                step.approverType = null;\n                                step.confirmationByCompany = false;\n                                if (previousApproverType) {\n                                    step.onWaiting.informList = step.onWaiting.informList.filter(\n                                        informType => informType !== previousApproverType\n                                    );\n                                }\n                            } else {\n                                if (!step.onWaiting.informList.includes(e.value)) {\n                                    step.onWaiting.informList.push(e.value);\n                                }\n                                if (previousApproverType && previousApproverType !== e.value) {\n                                    step.onWaiting.informList = step.onWaiting.informList.filter(\n                                        informType => informType !== previousApproverType\n                                    );\n                                }\n                                if (e.value === \"FIXED_PERSON\") {\n                                    this.setFixedPerson(step);\n                                    step.selectedType = \"\";\n                                } else if (e.value === \"FIXED_ADMIN\") {\n                                    this.setFixedHrAdmin(step)\n                                    step.selectedType = \"\";\n                                } else if (e.value === \"FIXED_MULTI_PERSON\") {\n                                    step.approverType = e.value;\n                                    step.selectedType = \"FIXED_MULTI_PERSON\";\n                                    this.clearFixedPerson(step);\n                                    this.clearGrantList(step);\n                                } else if (e.value === \"ORGANIZATION_MANAGER\") {\n                                    step.approverType = e.value;\n                                    step.selectedType = \"ORGANIZATION_MANAGER\";\n                                    this.clearFixedPerson(step);\n                                    this.clearMultiPersonList(step);\n                                } else {\n                                    step.approverType = e.value;\n                                    step.selectedType = \"\";\n                                    this.clearFixedPerson(step);\n                                    this.clearGrantList(step);\n                                    this.clearMultiPersonList(step);\n                                }\n                            }\n                            if (step.approverType !== 'RECEIVER'){\n                                step.confirmationByCompany = false;\n                            }\n                            this.setState({flow: this.state.flow});\n                        }}\n                        options={approverTypes()}/>\n            </div>\n            <br/>\n            {this.state.hasCompanyConfirmation && step.approverType === 'RECEIVER' &&\n                <div className=\"col-sm-12 row\">\n                    <Label className={\"col-sm-5\"} style={{fontSize: 11}}>\n                        Reddedilmediğinde firma tarafından onaylanmış kabul edilecektir:</Label>\n                    <div className={\"col-sm-5\"}>\n                        <Switch\n                            checked={(!(step.confirmationByCompany === null || step.confirmationByCompany === false || step.confirmationByCompany === undefined))}\n                            checkedChildren=\"Evet\"\n                            unCheckedChildren=\"Hayır\"\n                            onChange={(e) => this.confirmationByCompanyOnChange(e, step)}\n                            height={21}\n                            width={42}\n                        />\n                    </div>\n                </div>\n            }\n            {step.fixedPersonId &&\n                <div className=\"col-sm-12 row\">\n                    <Label sm={3}>Seçilen Kişi:</Label>\n                    <Label sm={5}>{step.fixedPersonLabel}</Label>\n                </div>}\n            {step.selectedType && step.selectedType === \"FIXED_MULTI_PERSON\" &&\n                <div className=\"col-sm-12 row\">\n                    <Label sm={3}>Çoklu Sabit Çalışan:</Label>\n                    <Select.Async\n                        multi={true}\n                        isLoading={true}\n                        autoload={false}\n                        cacheOptions\n                        clearable={true}\n                        filterOptions={(options, filter, currentValues) => options}\n                        ignoreAccents={false}\n                        className={\"col-sm-5\"}\n                        clearValueText=\"Temizle\"\n                        placeholder={\"İsim veya soyisim ile ara...\"}\n                        noResultsText={\"Kayıt bulunamadı.\"}\n                        searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                        style={{flex: 1}}\n                        onChange={(e) => this.onChangeMultiFixedPerson(e, step)}\n                        value={step.selectedPersons && step.selectedPersons\n                            .map(item => ({\n                                value: item.value,\n                                label: item.label,\n                                data: item\n                            }))}\n                        loadOptions={this.getOptions}\n                    />\n                </div>}\n            {step.selectedType && step.selectedType === \"ORGANIZATION_MANAGER\" &&\n                <div className=\"col-sm-12 row\">\n                    <Label sm={3}>Rol Yetkileri :</Label>\n                    <Select.Async\n                        multi={true}\n                        isLoading={true}\n                        autoload={false}\n                        cacheOptions\n                        clearable={true}\n                        filterOptions={(options, filter, currentValues) => options}\n                        ignoreAccents={false}\n                        className={\"col-sm-5\"}\n                        clearValueText=\"Temizle\"\n                        placeholder={\"Yetki ismi ile ara...\"}\n                        noResultsText={\"Kayıt bulunamadı.\"}\n                        searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                        style={{flex: 1}}\n                        onChange={(e) => this.onChangeMultiGrants(e, step)}\n                        value={step.selectedGrants && step.selectedGrants\n                            .map(item => ({\n                                value: item.value,\n                                label: item.label,\n                                data: item\n                            }))}\n                        loadOptions={this.getGrants}\n                    />\n                </div>}\n\n            <div className=\"col-sm-12 row\">\n                <Label sm={3}>Yetki:</Label>\n                <Select className={\"col-sm-5\"}\n                        name={\"operationType\"}\n                        value={step.operationType}\n                        clearable={false}\n                        placeholder=\"\"\n                        noResultsText={\"Veri yok\"}\n                        onChange={e => {\n                            step.operationType = e.value;\n                            this.setState({flow: this.state.flow});\n                        }}\n                        options={operationTypes()}/>\n            </div>\n            <div className=\"col-sm-12 row\">\n                <Label className='headerContainer'>Bilgilendirmeler</Label>\n                <div className=\"col-sm-12 row\">\n                    <Label className='col-sm-12' style={{fontWeight: '600', opacity: '0.8'}}>Bekleme Politikasi</Label>\n                    <div className=\"col-sm-12 row\">\n                        <div className=\"col-sm-12 row\">\n                            <Label sm={12} md={4}>Tekrar Aralığı:</Label>\n                            <div className=\"col-sm-6 col-md-4\">\n                                <Input type=\"text\" pattern=\"[0-9]*\" placeholder={\"Deger\"}\n                                       value={step.onWaiting.waitFor.amount}\n                                       onChange={e => {\n                                           step.onWaiting.waitFor.amount = e.target.value;\n                                           this.setState({flow: this.state.flow});\n                                       }}/>\n                            </div>\n                            <div className=\"col-sm-6 col-md-4\">\n                                <Select name={\"waitForUnit\"} value={step.onWaiting.waitFor.unit} clearable={false}\n                                        noResultsText={\"Veri yok\"}\n                                        onChange={e => {\n                                            step.onWaiting.waitFor.unit = e.value;\n                                            this.setState({flow: this.state.flow});\n                                        }}\n                                        options={chronoUnitFromMinutes()}/>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-12 row maxrepeat\">\n                            <Label sm={4}>Maks. Tekrar:</Label>\n                            <div className=\"col-sm-4\">\n                                <Select name={\"waitForUnit\"}\n                                        value={step.onWaiting.maxRepeat ? step.onWaiting.maxRepeat : {value: 0, label: '0'}}\n                                        clearable={false}\n                                        noResultsText={\"Veri yok\"}\n                                        onChange={e => {\n                                            step.onWaiting.maxRepeat = e.value;\n                                            this.setState({flow: this.state.flow});\n                                        }}\n                                        options={repeatCount()}/>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-12 row\">\n                            <Label sm={4}>Bilgilendirilecekler:</Label>\n                            <div className=\"col-sm-8\">\n                                <Select name={\"waitingInformList\"} value={step.onWaiting.informList}\n                                        clearable={false} multi={true}\n                                        options={informedType()}\n                                        placeholder={\"Seçiniz..\"}\n                                        noResultsText={\"Veri yok\"}\n                                        onChange={e => {\n                                            let fixedPersonSelected = false;\n                                            let fixedMultiPersonSelected = false;\n                                            if (e === null) {\n                                                step.onWaiting.informList = [];\n                                            } else {\n                                                for (var i = 0; i < e.length; i++) {\n                                                    if (e[i].value === \"FIXED_PERSON\") {\n                                                        fixedPersonSelected = true;\n                                                        if (step.onWaiting.fixedPersonId === null) {\n                                                            this.fixedPersonInform(step);\n                                                            step.informType = \"FIXED_PERSON\";\n                                                        }\n                                                    } else if (e[i].value === \"FIXED_MULTI_PERSON\") {\n                                                        fixedMultiPersonSelected = true;\n                                                        step.onWaiting.informType = \"FIXED_MULTI_PERSON\";\n                                                    } else if (e[i].value === \"ORGANIZATION_MANAGER\") {\n                                                        step.onWaiting.informType = e[i].value;\n                                                    } else if (e[i].value === \"FIXED_ADMIN\") {\n                                                        this.setWaitingFixedHrAdmin(step);\n                                                        step.onWaiting.informType = \"FIXED_ADMIN\";\n                                                    }}\n                                                step.onWaiting.informList = e.map(option => (option.value));\n                                            }\n                                            if (!fixedPersonSelected) {\n                                                step.onWaiting.fixedPersonId = null;\n                                                step.onWaiting.fixedPersonLabel = \"\";\n                                            }\n                                            if(!fixedMultiPersonSelected){\n                                                step.onWaiting.informType = \"\";\n                                                step.onWaiting.fixedPersonIdList = [];\n                                            }\n                                            if (!step.onWaiting.informList.includes(\"ORGANIZATION_MANAGER\")) {\n                                                this.clearGrantListonWaiting(step);\n                                            }\n                                            if (!step.onWaiting.informList.includes(\"FIXED_MULTI_PERSON\")) {\n                                                this.clearMultiPersonListonWaiting(step);\n                                            }\n                                            this.setState({flow: this.state.flow, fixedPersonSelected});\n                                        }}\n                                />\n                            </div>\n                        </div>\n                        <br/>\n                        {step.onWaiting.informList && step.onWaiting.informList.includes(\"FIXED_MULTI_PERSON\") &&\n                            <div className=\"col-sm-12 row\" style={{ marginTop: '10px'}}>\n                                <Label sm={4}>Çoklu Sabit Çalışan:</Label>\n                                <div className=\"col-sm-8\">\n                                    <Select.Async\n                                        multi={true}\n                                        isLoading={true}\n                                        autoload={false}\n                                        cacheOptions\n                                        clearable={true}\n                                        filterOptions={(options, filter, currentValues) => options}\n                                        ignoreAccents={false}\n                                        className={\"col-sm-14\"}\n                                        clearValueText=\"Temizle\"\n                                        placeholder={\"İsim veya soyisim ile ara...\"}\n                                        noResultsText={\"Kayıt bulunamadı.\"}\n                                        searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                                        style={{flex: 1}}\n                                        onChange={(e) => this.onChangeMultiFixedPersonForNotification(e, step)}\n                                        value={step.onWaiting.selectedPersonForNotifications && step.onWaiting.selectedPersonForNotifications\n                                            .map(item => ({\n                                                value: item.value,\n                                                label: item.label\n                                            }))}\n                                        loadOptions={this.getOptions}\n                                    />\n                                </div>\n                            </div>\n                        }\n                        {step.onWaiting.informList && step.onWaiting.informList.includes(\"ORGANIZATION_MANAGER\") &&\n                            <div className=\"col-sm-12 row\" style={{ marginTop: '10px'}}>\n                                <Label sm={4}>Rol Yetkileri :</Label>\n                                <Select.Async\n                                    multi={true}\n                                    isLoading={true}\n                                    autoload={false}\n                                    cacheOptions\n                                    clearable={true}\n                                    filterOptions={(options, filter, currentValues) => options}\n                                    ignoreAccents={false}\n                                    className={\"col-sm-5\"}\n                                    clearValueText=\"Temizle\"\n                                    placeholder={\"Yetki ismi ile ara...\"}\n                                    noResultsText={\"Kayıt bulunamadı.\"}\n                                    searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                                    style={{flex: 1, width:200}}\n                                    onChange={(e) => this.onChangeMultiGrantsWaiting(e, step)}\n                                    value={step.onWaiting.selectedGrants && step.onWaiting.selectedGrants\n                                        .map(item => ({\n                                            value: item.value,\n                                            label: item.label,\n                                            data: item\n                                        }))}\n                                    loadOptions={this.getGrants}\n                                />\n                            </div>\n                        }\n                        {step.onWaiting.fixedPersonId !== null &&\n                            <div className=\"col-sm-12 row\">\n                                <Label sm={4}>Seçilen Kişi:</Label>\n                                <Label sm={8}>{step.onWaiting.fixedPersonLabel}</Label>\n                            </div>}\n                        <div className=\"col-sm-12 row\"\n                             style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n                            <Label sm={4}>Zaman Aşımı Bilgilendirilecekler:</Label>\n                            <div className=\"col-sm-8\">\n                                <Select name={\"timeoutInformList\"} value={step.onWaiting.timeoutPolicy.informList}\n                                        clearable={true} multi={true}\n                                        onClear={() => {\n                                            if (step.onWaiting.timeoutPolicy.informList !== \"ORGANIZATION_MANAGER\") {\n                                                this.clearGrantList(step);\n                                            }\n                                        }}\n                                        options={informedTypes()}\n                                        placeholder={\"Seçiniz..\"}\n                                        noResultsText={\"Veri yok\"}\n                                        onChange={e => {\n                                            let fixedPersonSelectedTimeout = false;\n                                            let fixedMultiPersonSelectedTimeout = false;\n                                            if (e === null) {\n                                                step.onWaiting.timeoutPolicy.informList = [];\n                                            } else {\n                                                for (var i = 0; i < e.length; i++) {\n                                                    if (e[i].value === \"FIXED_PERSON\") {\n                                                        fixedPersonSelectedTimeout = true;\n                                                        if (step.onWaiting.timeoutPolicy.fixedPersonId === null) {\n                                                            this.fixedPersonTimeout(step);\n                                                            step.informType = \"FIXED_PERSON\";\n                                                        }\n                                                    } else if (e[i].value === \"FIXED_MULTI_PERSON\") {\n                                                        fixedMultiPersonSelectedTimeout = true;\n                                                        step.onWaiting.timeoutPolicy.informType = \"FIXED_MULTI_PERSON\";\n                                                    } else if (e[i].value === \"ORGANIZATION_MANAGER\") {\n                                                        step.onWaiting.timeoutPolicy.informType = \"ORGANIZATION_MANAGER\";\n                                                    } else if (e[i].value === \"FIXED_ADMIN\") {\n                                                        this.setTimeoutFixedHrAdmin(step)\n                                                        step.onWaiting.timeoutPolicy.informType = \"\";\n                                                    }\n                                                }\n                                                step.onWaiting.timeoutPolicy.informList = e.map(option => (option.value));\n                                            }\n                                            if (!fixedPersonSelectedTimeout) {\n                                                step.onWaiting.timeoutPolicy.fixedPersonId = null;\n                                                step.onWaiting.timeoutPolicy.fixedPersonLabel = \"\";\n                                                step.informType = \"\";\n                                            }\n                                            if(!fixedMultiPersonSelectedTimeout){\n                                                step.onWaiting.timeoutPolicy.informType = \"\";\n                                                step.onWaiting.timeoutPolicy.fixedPersonIdList = [];\n                                            }\n                                            this.setState({flow: this.state.flow, fixedPersonSelectedTimeout});\n                                        }}\n                                />\n                            </div>\n                        </div>\n                        <br/>\n                        {step.onWaiting.timeoutPolicy.informList && step.onWaiting.timeoutPolicy.informList.includes(\"FIXED_MULTI_PERSON\") &&\n                            <div className=\"col-sm-12 row\" style={{ marginTop: '10px'}}>\n                                <Label sm={4}>Çoklu Sabit Çalışan:</Label>\n                                <div className=\"col-sm-8\">\n                                    <Select.Async\n                                        multi={true}\n                                        isLoading={true}\n                                        autoload={false}\n                                        cacheOptions\n                                        clearable={true}\n                                        filterOptions={(options, filter, currentValues) => options}\n                                        ignoreAccents={false}\n                                        className={\"col-sm-14\"}\n                                        clearValueText=\"Temizle\"\n                                        placeholder={\"İsim veya soyisim ile ara...\"}\n                                        noResultsText={\"Kayıt bulunamadı.\"}\n                                        searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                                        style={{flex: 1}}\n                                        onChange={(e) => this.onChangeMultiFixedPersonForTimeout(e, step)}\n                                        value={step.onWaiting.timeoutPolicy.selectedPersonForNotifications && step.onWaiting.timeoutPolicy.selectedPersonForNotifications\n                                            .map(item => ({\n                                                value: item.value,\n                                                label: item.label\n                                            }))}\n                                        loadOptions={this.getOptions}\n                                    />\n                                </div>\n                            </div>\n                        }\n                        {step.onWaiting.timeoutPolicy.informList && step.onWaiting.timeoutPolicy.informList.includes(\"ORGANIZATION_MANAGER\") &&\n                            <div className=\"col-sm-12 row\">\n                                <Label sm={4}>Rol Yetkileri :</Label>\n                                <Select.Async\n                                    multi={true}\n                                    isLoading={true}\n                                    autoload={false}\n                                    cacheOptions\n                                    clearable={true}\n                                    filterOptions={(options, filter, currentValues) => options}\n                                    ignoreAccents={false}\n                                    className={\"col-sm-5\"}\n                                    clearValueText=\"Temizle\"\n                                    placeholder={\"Yetki ismi ile ara...\"}\n                                    noResultsText={\"Kayıt bulunamadı.\"}\n                                    searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                                    style={{ flex: 1, width:200 }}\n                                    onChange={(e) => this.onChangeMultiGrantsTimeout(e, step)}\n                                    value={step.onWaiting.timeoutPolicy.selectedGrants && step.onWaiting.timeoutPolicy.selectedGrants\n                                        .map(item => ({\n                                            value: item.value,\n                                            label: item.label,\n                                            data: item\n                                        }))}\n                                    loadOptions={this.getGrants}\n                                />\n                            </div>\n                        }\n                        {step.onWaiting.timeoutPolicy.fixedPersonId !== null &&\n                            <div className=\"col-sm-12 row\">\n                                <Label sm={4}>Seçilen Kişi:</Label>\n                                <Label sm={8}>{step.onWaiting.timeoutPolicy.fixedPersonLabel}</Label>\n                            </div>}\n                    </div>\n                </div>\n                <div className=\"col-sm-12 row\">\n                    <Label style={{paddingTop: '10px', fontWeight: '600', opacity: '0.8'}}>Onaylanma Politikasi</Label>\n                    <div className=\"col-sm-12 row\">\n                        <Label sm={4}>Bilgilendirilecekler:</Label>\n                        <div className=\"col-sm-8 beInformedSelect\">\n                            <Select name={\"onConfirmInformList\"} value={step.onConfirm.informList}\n                                    clearable={true} multi={true}\n                                    onClear={() => {\n                                        if (step.onConfirm.informList !== \"ORGANIZATION_MANAGER\") {\n                                            this.clearGrantList(step);\n                                        }\n                                    }}\n                                    options={informedTypes()}\n                                    placeholder={\"Seçiniz..\"}\n                                    noResultsText={\"Veri yok\"}\n                                    onChange={e => {\n                                        let fixedPersonSelectedApprove = false;\n                                        let fixedMultiPersonSelectedApprove = false;\n                                        if (e === null) {\n                                            step.onConfirm.informList = [];\n                                        } else {\n                                            for (var i = 0; i < e.length; i++) {\n                                                if (e[i].value === \"FIXED_PERSON\") {\n                                                    fixedPersonSelectedApprove = true;\n                                                    if (step.onConfirm.fixedPersonId === null) {\n                                                        this.fixedPersonApprove(step);\n                                                        step.informType = \"FIXED_PERSON\";\n                                                    }\n                                                } else if (e[i].value === \"FIXED_MULTI_PERSON\") {\n                                                    fixedMultiPersonSelectedApprove = true;\n                                                    step.onConfirm.informType = \"FIXED_MULTI_PERSON\";\n                                                }else if (e[i].value === \"ORGANIZATION_MANAGER\") {\n                                                    step.onConfirm.informType = \"ORGANIZATION_MANAGER\";\n                                                } else if (e[i].value === \"FIXED_ADMIN\") {\n                                                    this.setConfirmFixedHrAdmin(step)\n                                                    step.onConfirm.informType = \"\";\n                                                }\n                                            }\n                                            step.onConfirm.informList = e.map(option => (option.value));\n                                        }\n                                        if (!fixedPersonSelectedApprove) {\n                                            step.onConfirm.fixedPersonId = null;\n                                            step.onConfirm.fixedPersonLabel = \"\";\n                                            step.informType = \"\";\n                                        }\n                                        if(!fixedMultiPersonSelectedApprove){\n                                            step.onConfirm.informType = \"\";\n                                            step.onConfirm.fixedPersonIdList = [];\n                                        }\n                                        this.setState({flow: this.state.flow, fixedPersonSelectedApprove});\n                                    }}\n                            />\n                        </div>\n                    </div>\n                    <br/>\n                    {step.onConfirm.informList && step.onConfirm.informList.includes(\"FIXED_MULTI_PERSON\") &&\n                        <div className=\"col-sm-12 row\" style={{ marginTop: '10px'}}>\n                            <Label sm={3}>Çoklu Sabit Çalışan:</Label>\n                            <div className=\"col-sm-8\">\n                                <Select.Async\n                                    multi={true}\n                                    isLoading={true}\n                                    autoload={false}\n                                    cacheOptions\n                                    clearable={true}\n                                    filterOptions={(options, filter, currentValues) => options}\n                                    ignoreAccents={false}\n                                    clearValueText=\"Temizle\"\n                                    placeholder={\"İsim veya soyisim ile ara...\"}\n                                    noResultsText={\"Kayıt bulunamadı.\"}\n                                    searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                                    style={{flex: 1, width:200, marginLeft: 25}}\n                                    onChange={(e) => this.onChangeMultiFixedPersonForConfirm(e, step)}\n                                    value={step.onConfirm.selectedPersonForNotifications && step.onConfirm.selectedPersonForNotifications\n                                        .map(item => ({\n                                            value: item.value,\n                                            label: item.label\n                                        }))}\n                                    loadOptions={this.getOptions}\n                                />\n                            </div>\n                        </div>\n                    }\n                    {step.onConfirm.informList && step.onConfirm.informList.includes(\"ORGANIZATION_MANAGER\") &&\n                        <div className=\"col-sm-12 row\" style={{ marginTop: '10px'}}>\n                            <Label sm={4}>Rol Yetkileri:</Label>\n                            <Select.Async\n                                multi={true}\n                                isLoading={true}\n                                autoload={false}\n                                cacheOptions\n                                clearable={true}\n                                filterOptions={(options, filter, currentValues) => options}\n                                ignoreAccents={false}\n                                clearValueText=\"Temizle\"\n                                placeholder={\"Yetki ismi ile ara...\"}\n                                noResultsText={\"Kayıt bulunamadı.\"}\n                                searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                                style={{flex: 1, width:200, marginLeft: 4}}\n                                onChange={(e) => this.onChangeMultiGrantsConfirm(e, step)}\n                                value={step.onConfirm.selectedGrants && step.onConfirm.selectedGrants\n                                    .map(item => ({\n                                        value: item.value,\n                                        label: item.label,\n                                        data: item\n                                    }))}\n                                loadOptions={this.getGrants}\n                            />\n                        </div>\n                    }\n                    {step.onConfirm.fixedPersonId !== null &&\n                        <div className=\"col-sm-12 row\">\n                            <Label sm={4}>Seçilen Kişi:</Label>\n                            <Label sm={8}>{step.onConfirm.fixedPersonLabel}</Label>\n                        </div>}\n\n                </div>\n                <div className=\"col-sm-12 row\">\n                    <Label style={{fontWeight: '600', opacity: '0.8', paddingTop: '10px'}}>Red Durumu Politikasi</Label>\n                    <div className=\"col-sm-12 row\">\n                        <Label sm={4}>Bilgilendirilecekler:</Label>\n                        <div className=\"col-sm-8 beInformedSelect\">\n                            <Select name={\"onObjectionInformList\"} value={step.onObjection.informList}\n                                    clearable={true} multi={true}\n                                    onClear={() => {\n                                        if (step.onObjection.informList !== \"ORGANIZATION_MANAGER\") {\n                                            this.clearGrantList(step);\n                                        }\n                                    }}\n                                    placeholder={\"Seçiniz..\"}\n                                    noResultsText={\"Veri yok\"}\n                                    options={informedTypes()}\n                                    onChange={e => {\n                                        let fixedPersonSelectedObjectionInform = false;\n                                        let fixedMultiPersonSelectedObjectionInform = false;\n                                        if (e === null) {\n                                            step.onObjection.informList = [];\n                                        } else {\n                                            for (var i = 0; i < e.length; i++) {\n                                                if (e[i].value === \"FIXED_PERSON\") {\n                                                    fixedPersonSelectedObjectionInform = true;\n                                                    if (step.onObjection.fixedPersonId === null) {\n                                                        this.fixedPersonObjectionInform(step);\n                                                        step.informType = \"FIXED_PERSON\";\n                                                    }\n                                                } else if (e[i].value === \"FIXED_MULTI_PERSON\") {\n                                                    fixedMultiPersonSelectedObjectionInform = true;\n                                                    step.onObjection.informType = \"FIXED_MULTI_PERSON\";\n                                                } else if (e[i].value === \"ORGANIZATION_MANAGER\") {\n                                                    step.onObjection.informType = \"ORGANIZATION_MANAGER\";\n                                                } else if (e[i].value === \"FIXED_ADMIN\") {\n                                                    this.setObjectionFixedHrAdmin(step)\n                                                    step.onObjection.informType = \"\";\n                                                }\n                                            }\n\n                                            step.onObjection.informList = e.map(option => (option.value));\n                                        }\n                                        if (!fixedPersonSelectedObjectionInform) {\n                                            step.onObjection.fixedPersonId = null;\n                                            step.onObjection.fixedPersonLabel = \"\";\n                                            step.informType = \"\";\n                                        }\n                                        if(!fixedMultiPersonSelectedObjectionInform){\n                                            step.onObjection.informType = \"\";\n                                            step.onObjection.fixedPersonIdList = [];\n                                        }\n                                        this.setState({flow: this.state.flow, fixedPersonSelectedObjectionInform});\n                                    }}\n                            />\n                        </div>\n                    </div>\n                    <br/>\n                    {step.onObjection.informList && step.onObjection.informList.includes(\"FIXED_MULTI_PERSON\") &&\n                        <div className=\"col-sm-12 row\" style={{ marginTop: '10px'}}>\n                            <Label sm={3}>Çoklu Sabit Çalışan:</Label>\n                            <div className=\"col-sm-8\">\n                                <Select.Async\n                                    multi={true}\n                                    isLoading={true}\n                                    autoload={false}\n                                    cacheOptions\n                                    clearable={true}\n                                    filterOptions={(options, filter, currentValues) => options}\n                                    ignoreAccents={false}\n\n                                    clearValueText=\"Temizle\"\n                                    placeholder={\"İsim veya soyisim ile ara...\"}\n                                    noResultsText={\"Kayıt bulunamadı.\"}\n                                    searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                                    style={{flex: 1, width:200, marginLeft: 25}}\n                                    onChange={(e) => this.onChangeMultiFixedPersonForObjection(e, step)}\n                                    value={step.onObjection.selectedPersonForNotifications && step.onObjection.selectedPersonForNotifications\n                                        .map(item => ({\n                                            value: item.value,\n                                            label: item.label\n                                        }))}\n                                    loadOptions={this.getOptions}\n                                />\n                            </div>\n                        </div>\n                    }\n                    {step.onObjection.informList && step.onObjection.informList.includes(\"ORGANIZATION_MANAGER\") &&\n                        <div className=\"col-sm-12 row\" style={{ marginTop: '10px'}}>\n                            <Label sm={4}>Rol Yetkileri:</Label>\n                            <Select.Async\n                                multi={true}\n                                isLoading={true}\n                                autoload={false}\n                                cacheOptions\n                                clearable={true}\n                                filterOptions={(options, filter, currentValues) => options}\n                                ignoreAccents={false}\n                                clearValueText=\"Temizle\"\n                                placeholder={\"Yetki ismi ile ara...\"}\n                                noResultsText={\"Kayıt bulunamadı.\"}\n                                searchPromptText={\"Arama için en az 2 karakter giriniz.\"}\n                                style={{flex: 1, width:200, marginLeft: 4}}\n                                onChange={(e) => this.onChangeMultiGrantsObjection(e, step)}\n                                value={step.onObjection.selectedGrants&& step.onObjection.selectedGrants\n                                    .map(item => ({\n                                        value: item.value,\n                                        label: item.label,\n                                        data: item\n                                    }))}\n                                loadOptions={this.getGrants}\n                            />\n                        </div>\n                    }\n                    {step.onObjection.fixedPersonId !== null &&\n                        <div className=\"col-sm-12 row\">\n                            <Label sm={4}>Seçilen Kişi:</Label>\n                            <Label sm={8}>{step.onObjection.fixedPersonLabel}</Label>\n                        </div>}\n                </div>\n            </div>\n        </div>;\n    }\n}\n\nexport default ApprovalFlow;"],"sourceRoot":""}