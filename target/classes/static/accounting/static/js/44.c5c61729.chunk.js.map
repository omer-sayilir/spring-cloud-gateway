{"version":3,"sources":["accounting/kepik/formsession/FormSessionListPage.js"],"names":["FormSessionListPage","Component","constructor","props","super","videos","title","id","switchVideo","video","this","setState","showVideos","callback","data","action","type","shouldRun","flag","joyrideActive","activateJoyride","state","formTypeList","list","loading","loadingContent","locale","back","close","last","next","skip","manual","page","pageNumber","pageSize","searchKey","searchQuery","undefined","searching","selectedAll","selectedFormIds","location","selection","selectedFormSessions","size","steps","target","content","placement","stop","total","width","window","innerWidth","deleteRow","bind","fetchData","isSelected","handleSearch","toggleCheckboxChange","deleteSelected","componentDidMount","self","params","url","method","requestK","then","response","isISGU","filter","formtype","category","isHealthForm","isZimmet","isKVKK","catch","error","showAxiosError","accessor","direction","searchWithKey","e","value","sortStr","reload","checkGrantForFetchResponse","totalElements","totalIdList","selectedIdList","row","message","disabledDeleteBtn","selected","Alert","success","position","effect","timeout","deleteList","finally","indexOf","checked","items","forEach","item","push","index","slice","length","render","pageIdList","Array","map","columns","Header","React","createElement","DropdownCheck","selectionIdList","onChange","selectType","sortable","Cell","style","textAlign","margin","whiteSpace","TextOverFlowTooltip","text","formTemplate","formName","maxLength","formType","className","isAnswerable","color","isDecline","toString","includes","formCount","moment","createdAt","isValid","format","createdByWebservice","disabled","checkGrantToDisplay","FORM_SEND","ISG_FORM_SEND","HEALTH_FORM_SEND","ZIMMET_FORM_SEND","KVKK_FORM_SEND","onClick","history","pathname","peykName","signedCount","FORM_OPERATIONS","ISG_FORM_OPERATIONS","HEALTH_FORM_OPERATIONS","ZIMMET_FORM_OPERATIONS","KVKK_FORM_OPERATIONS","alert","SweetAlert","showCancel","warning","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","onCancel","fields","label","operator","selectData","formTypeData","stateData","isKepOwner","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","options","zIndex","primaryColor","Nav","StickButton","fontSize","selections","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","i","key","marginTop","marginBottom","DetailedSearch","onSearch","Table","VideoModal","isOpen"],"mappings":"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","file":"static/js/44.c5c61729.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Table from \"../../../components/Table/Table\";\nimport 'react-table/react-table.css'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport {Nav} from 'reactstrap';\nimport 'moment/locale/tr';\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport {checkGrantForFetchResponse, checkGrantToDisplay, showAxiosError} from \"../../../helper/helper\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport moment from \"moment/moment\";\nimport Alert from \"react-s-alert\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport {formTypeData, stateData} from \"../common/PeykHelper\";\nimport Joyride from \"react-joyride\";\nimport VideoModal from \"../../../components/VideoModal\";\nimport StickButton from \"../../../components/StickButton\";\nimport {\n    FORM_OPERATIONS,\n    FORM_SEND,\n    HEALTH_FORM_OPERATIONS,\n    HEALTH_FORM_SEND,\n    ISG_FORM_OPERATIONS,\n    ISG_FORM_SEND,\n    ZIMMET_FORM_OPERATIONS,\n    ZIMMET_FORM_SEND,\n    KVKK_FORM_SEND,\n    KVKK_FORM_OPERATIONS\n} from \"../../../common/authorities/GrantDef\";\nimport DropdownCheck from \"../../../components/Table/DropdownCheck\";\n\nclass FormSessionListPage extends Component {\n\n    videos = [\n        {title: \"Form işlemleri\", id: \"lTjRaQZI4_Y\"},\n    ];\n    switchVideo = (video) => {\n        this.setState({video: video, showVideos: true})\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            flag: 0,\n            formTypeList: [],\n            joyrideActive: false,\n            list: [],\n            loading: false,\n            loadingContent: 'Yükleme devam ediyor',\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            manual: false,\n            page: 0,\n            pageNumber: 0,\n            pageSize: 10,\n            searchKey: \"\",\n            searchQuery: undefined,\n            searching: false,\n            selectedAll: false,\n            selectedFormIds: this.props.location.selectedFormIds !== undefined ? this.props.location.selectedFormIds : [],\n            selection: this.props.location.selectedFormSessions ? this.props.location.selectedFormSessions : [],\n            shouldRun: true,\n            showVideos: false,\n            size: 10,\n            steps: [\n                {\n                    target: '.card-title',\n                    content: \"Form gönder ile başlattığınız bütün form işlemleri burada listelenmektedir. Gönderim yapmak için ilgili form işlemini sarı renkte 'Aç' butonu ile açabilirsiniz. \",\n                    placement: \"center\",\n                },\n                // {\n                //     target: '.Select',\n                //     content: \"form2 \" ,\n                //     placement: \"center\",\n                // },\n            ],\n            stop: null,\n            total: 0,\n            video: null,\n            width: window.innerWidth\n        };\n\n        this.deleteRow = this.deleteRow.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n        this.isSelected = this.isSelected.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n        this.deleteSelected = this.deleteSelected.bind(this);\n    }\n\n    componentDidMount() {\n        let self = this;\n        let params = {\n            url: `/formtype/readFormTypeAllWithSablonsuz`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let formTypeList = (self.props.isISGU !== undefined && self.props.isISGU === true) ? response.data.filter(function (formtype) {\n                    return formtype.category === \"ISGF\";\n                }) : (self.props.isHealthForm !== undefined && self.props.isHealthForm === true) ? response.data.filter(function (formtype) {\n                    return formtype.category === \"SAĞLIK FORMU\";\n                }) : (self.props.isZimmet !== undefined && self.props.isZimmet === true) ? response.data.filter(function (formtype) {\n                    return formtype.category === \"ZİMMET\";\n                }): (self.props.isKVKK !== undefined && self.props.isKVKK === true) ? response.data.filter(function (formtype) {\n                    return formtype.category === \"KVKK\";\n                })  : response.data;\n                self.setState({formTypeList});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({searchQuery, searching: true},\n            () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size));\n    }\n\n    searchWithKey(e) {\n        this.setState({searchKey: e.target.value, manual: true});\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true});\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback = (data) => {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    };\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = !!accessor ? ('&sort=' + accessor + ',' + direction) : '&sort=id,desc';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let url = ((this.props.isISGU !== undefined && this.props.isISGU === true) ? '/formsession/readFormSessionsISGF?page=' : (this.props.isHealthForm !== undefined && this.props.isHealthForm === true) ? '/formsession/readFormSessionsHealth?page=' : (this.props.isZimmet !== undefined && this.props.isZimmet === true) ? '/formsession/readFormSessionsZimmet?page=' : (this.props.isKVKK !== undefined && this.props.isKVKK === true) ? '/formsession/readFormSessionsKvkk?page=' : '/formsession/readFormSessions?page=');\n        let params = {\n            url: url + page + '&size=' + size + searchQuery + sortStr,\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        self.props.reload(true);\n        requestK(params)\n            .then(function (response) {\n                checkGrantForFetchResponse(self, response.data.page);\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: response.data.page ? response.data.page.totalElements : 0,\n                    list: response.data.page ? response.data.page.content : [],\n                    totalIdList: response.data ? response.data.selectedIdList : [],\n                    loading: false,\n                    searching: false\n                });\n                self.props.reload(false);\n            }).catch(function (error) {\n            self.setState({loading: false, searching: false});\n            self.props.reload(false);\n            showAxiosError(error);\n        });\n    }\n\n    deleteRow(row) {\n        let self = this;\n        let params = {\n            url: `/formsession/deleteFormSession`,\n            method: \"post\",\n            data: row.id\n        };\n        requestK(params)\n            .then(function (response) {\n                let message = response.data;\n                self.setState({\n                    loading: false,\n                    disabledDeleteBtn: false,\n                    manual: true,\n                    selected: null\n                });\n                Alert.success(message, {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({loading: false, disabledDeleteBtn: false});\n        });\n\n    }\n\n    deleteSelected() {\n        this.deleteList(this.state.selection);\n    }\n\n    deleteList(list) {\n        let self = this;\n        let params = {\n            url: `/formsession/deleteMultiFormSession`,\n            method: \"post\",\n            data: list\n        };\n        requestK(params)\n            .then(function (response) {\n                let message = response;\n                self.setState({\n                    loading: false,\n                    disabledDeleteBtn: false,\n                    manual: true,\n                    selected: null\n                });\n                Alert.success(\"Seçilen kayıtlar silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            })\n            .catch((error) => {\n                showAxiosError(error);\n            })\n            .finally(() => {\n                self.setState({ loading: false, disabledDeleteBtn: false, selection: [] });\n            });\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.list;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.list.length) : false)\n            });\n        }\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let locale = this.state.locale;\n        let pageIdList = [];\n        if (this.state.list && this.state.list instanceof Array) {\n            this.state.list.map(e => {\n                pageIdList.push(e.id);\n            });\n        }\n        let columns = [\n            {\n                Header: (this.state.list &&\n                    <DropdownCheck selectionIdList={this.state.selection}\n                                   totalIdList={this.state.totalIdList}\n                                   pageIdList={pageIdList}\n                                   onChange={e => this.setState({selection: e})}/>\n                ),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.list &&\n                    <div style={{textAlign: \"center\"}}>\n                        <input type=\"checkbox\" checked={this.isSelected(row.id)}\n                               onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}/></div>)\n            },\n            {\n                Header: \"Form Adı\",\n                accessor: \"formTemplate_formName\",\n                Cell: row => (\n                    <div style={{margin: 0, whiteSpace: 'pre'}}><TextOverFlowTooltip text={row.formTemplate && row.formTemplate.formName} maxLength={41}/></div>)\n            },\n            {\n                Header: \"Form Türü\",\n                accessor: \"formTemplate_formType_category\",\n                Cell: row => (\n                    <div>\n                        {row.formTemplate && row.formTemplate.formType && row.formTemplate.formType.category}\n                    </div>\n                )\n            },\n            {\n                Header: \"Onay Tipi\",\n                accessor: \"formTemplate_isAnswerable\",\n                Cell: row => (<div style={{margin: 0}}>\n                    <span className=\"isAnswerable\"\n                          style={\n                              row.formTemplate.isAnswerable === 1\n                                  ? { color: '#007acc' }\n                                  : { color: row.formTemplate.isDecline === 1 ? '#08c21d' : 'gray' }\n                          }>\n                         {row.formTemplate.isAnswerable === 1 && row.formTemplate.isDecline === 1 ? (\n                             \"Cevap Zorunlu - Reddedilebilir \"\n                         ) : row.formTemplate.isAnswerable === 1 ? (\n                             \"Cevap Zorunlu\"\n                         ) : row.formTemplate.isAnswerable === 0 && row.formTemplate.isDecline === 1 ? (\n                             \"Reddedilebilir\"\n                         ) : null }\n                    </span>\n                </div>)\n            },\n            {\n                Header: \"Form Sayısı\",\n                accessor: \"formCount\",\n                width: \"205px\",\n                Cell: row => (\n                    <div>\n                        {!!row.error &&\n                            <div style={{margin: 0}}>\n              <span\n                  className=\"text-danger\">{row.error.toString().includes(\"İşlem gerçekleştirilemedi.\") ? \"İşlem gerçekleştirilemedi.\" : row.error}</span>\n                            </div>}\n                        {!row.error &&\n                            <div style={{margin: 0, textAlign: \"center\"}}>\n                                {(row.formCount !== undefined && row.formCount !== null) ? row.formCount : this.state.loadingContent}\n                                {/*<ReactLoading type=\"spinningBubbles\" style={{width: \"20px\", height: \"20px\", margin: \"0 auto 0 auto\"}}/>*/}\n\n                            </div>}\n                    </div>\n                )\n            },\n            {\n                Header: \"Oluşturulma Zamanı\",\n                accessor: \"createdAt\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {moment(row.createdAt).isValid() ? moment(row.createdAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}\n                    </div>\n                )\n            },\n            {\n                Header: \"Web Servis\",\n                accessor: \"createdByWebservice\",\n                Cell: (item) => (\n                    <div style={{textAlign: \"center\"}}>\n                        <input type=\"checkbox\"\n                               checked={item.createdByWebservice !== null ? item.createdByWebservice : false}\n                               disabled=\"disabled\"/>\n                    </div>\n                )\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: row => (\n                    <div style={{textAlign: 'left'}}>\n                        {(checkGrantToDisplay(this, FORM_SEND) || checkGrantToDisplay(this, ISG_FORM_SEND) || checkGrantToDisplay(this, HEALTH_FORM_SEND) || checkGrantToDisplay(this, ZIMMET_FORM_SEND) || checkGrantToDisplay(this, KVKK_FORM_SEND)) &&\n                            <button title=\"Aç\" className=\"btn-icon btn btn-warning btn-sm\" style={{margin: '0px 3px'}}\n                                    onClick={() => this.props.history.push({pathname: `/${this.props.peykName}/formsession/${row.id}`})}>\n                                <i className=\"BtnIcon fa fa-eye\"/>\n                            </button>}\n                        {row.signedCount <= 0 && (checkGrantToDisplay(this, FORM_OPERATIONS) || checkGrantToDisplay(this, ISG_FORM_SEND) || checkGrantToDisplay(this, ISG_FORM_OPERATIONS) || checkGrantToDisplay(this, HEALTH_FORM_SEND) || checkGrantToDisplay(this, HEALTH_FORM_OPERATIONS) || checkGrantToDisplay(this, ZIMMET_FORM_OPERATIONS) || checkGrantToDisplay(this, ZIMMET_FORM_SEND) || checkGrantToDisplay(this, KVKK_FORM_OPERATIONS) || checkGrantToDisplay(this, KVKK_FORM_SEND)) &&\n                            <button title=\"Form Dönemini Sil\" className=\"btn-icon btn btn-danger btn-sm\"\n                                    style={{margin: '0px 3px'}}\n                                    onClick={() => {\n                                        this.setState({\n                                            alert: (\n                                                <SweetAlert showCancel warning\n                                                            confirmBtnText=\"Evet\"\n                                                            cancelBtnText=\"Hayır\"\n                                                            confirmBtnBsStyle=\"danger\"\n                                                            cancelBtnBsStyle=\"default\"\n                                                            title=\"Emin misiniz?\"\n                                                            disabled={this.state.disabledDeleteBtn}\n                                                            onConfirm={() => {\n                                                                this.setState({\n                                                                    alert: null,\n                                                                    loading: true,\n                                                                    disabledDeleteBtn: true\n                                                                }, () => {\n                                                                    this.deleteRow(row)\n                                                                });\n                                                            }}\n                                                            onCancel={() => this.setState({alert: null})}\n                                                >\n                                                    Bildirim kaydı silinecek.\n                                                </SweetAlert>\n                                            )\n                                        });\n                                    }}>\n                                <i className=\"now-ui-icons ui-1_simple-remove\"/>\n                            </button>}\n                    </div>\n                )\n            }\n        ];\n\n        const fields = [\n            {\n                label: \"Oluşturulma Tarihi (Başlangıç)\",\n                accessor: \"min_createdAt\",\n                type: \"datetime\",\n                operator: \">=\",\n            },\n            {\n                label: \"Oluşturulma Tarihi (Bitiş)\",\n                accessor: \"max_createdAt\",\n                type: \"datetime\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Form Adı\",\n                accessor: \"formTemplate_formName\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Form Türü\",\n                accessor: \"formTemplate_formType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: formTypeData(this.state.formTypeList)\n            },\n            {\n                label: \"Şablon İçeriği\",\n                accessor: \"formTemplate_formContent\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Web Servis\",\n                accessor: \"createdByWebservice\",\n                type: \"boolean\",\n                operator: \"=\",\n            },\n            {\n                label: \"Form Durumu\",\n                accessor: \"formList_state\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: stateData(this.state.isKepOwner)\n            },\n            {\n                label: \"İmzasız Gönderilmiş Form\",\n                accessor: \"formTemplate_withoutSign\",\n                type: \"boolean\",\n                operator: \"=\",\n            }\n        ];\n\n        return (\n            <div className=\"row baseBackground\">\n                {this.state.joyrideActive &&\n                    <Joyride\n                        disableBeacon={false}\n                        autoStart\n                        locale={locale}\n                        steps={steps}\n                        continuous={true}\n                        run={this.state.shouldRun}\n                        scrollToFirstStep={true}\n                        showProgress={true}\n                        showSkipButton={true}\n                        scrollToSteps={true}\n                        disableCloseOnEsc={true}\n                        disableOverlay={false}\n                        disableOverlayClicks={false}\n                        keyboardNavigation={true}\n                        hideBackButton={false}\n                        disableOverlayClose={true}\n                        callback={this.callback}\n                        holePadding={0}\n                        shouldRun={this.state.shouldRun}\n                        styles={{\n                            options: {\n                                zIndex: 100000,\n                                primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                            }\n                        }}/>\n                }\n                <Nav className=\"topbar\">\n                    <div style={{margin: '-3px 0 0 12px'}}>\n                        {checkGrantToDisplay(this, FORM_SEND) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Gonder\" label=\"Form Gönder\"\n                                         title=\"Form Gönderimi için tıklayınız\"\n                                         disabled={this.state.selection == null || this.state.selection.length != 1}\n                                         style={{fontSize: 'x-small'}}\n                                         onClick={() => this.props.history.push({pathname: `/${this.props.peykName}/formsession/${this.state.selection[0]}`})}/>}\n                        {checkGrantToDisplay(this, FORM_SEND) &&\n                            <StickButton position=\"leftSide\" className=\"zocial TopluGonder\" label=\"Toplu Form Gönder\"\n                                         title=\"Farklı form dönemlerine ait formları göndermek için tıklayınız\"\n                                         style={{fontSize: 'x-small'}}\n                                         disabled={this.state.selection == null || this.state.selection.length < 2}\n                                         onClick={() => this.props.history.push({\n                                             pathname: `/${this.props.peykName}/multiSessionForms`,\n                                             selectedFormSessions: this.state.selection,\n                                             selections: this.state.selectedFormIds\n                                         })}/>}\n                        {checkGrantToDisplay(this, FORM_SEND) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Sil\" label=\"Seçilenleri Sil\"\n                                         title=\"Seçilen Formları Sil\"\n                                         disabled={!(this.state.selection && this.state.selection.length > 0)}\n                                         style={{fontSize: 'x-small'}}\n                                         onClick={() => {\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert showCancel warning\n                                                                 confirmBtnText=\"Evet\"\n                                                                 cancelBtnText=\"Hayır\"\n                                                                 confirmBtnBsStyle=\"danger\"\n                                                                 cancelBtnBsStyle=\"default\"\n                                                                 title=\"Emin misiniz?\"\n                                                                 onConfirm={() => {\n                                                                     this.setState({\n                                                                         alert: null,\n                                                                         loading: true,\n                                                                         disabledDeleteBtn: true\n                                                                     }, () => {\n                                                                         this.deleteSelected()\n                                                                     });\n                                                                 }}\n                                                                 onCancel={() => this.setState({alert: null})}\n                                                     >\n                                                         Sadece pdf oluşturuldu durumundaki kayıtlar silinecektir.\n                                                     </SweetAlert>\n                                                 )\n                                             });\n                                         }}/>}\n                    </div>\n                    <ul className=\"helpfulList\">\n                        <li className=\"helpButtonContainer\" position=\"rightside\">\n                            <button className=\"helpButton\" onClick={() => {\n                                this.activateJoyride()\n                            }}>\n                                <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                                <i className=\"far fa-question-circle helpButtonIcon\"/>\n                            </button>\n                        </li>\n                        {this.state.stop &&\n                            <li className=\"nav-item dropdown  videoIconContainer\">\n                                <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                        aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                    <span className=\"tooltipText\">Yardimci Videolar</span>\n                                    <i className=\"fab fa-youtube videoIcon\"/>\n                                </button>\n                                <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                     aria-labelledby=\"videosLink\">\n                                    {\n                                        this.videos.map((video, i) =>\n                                            <a key={i} className=\"dropdown-item\"\n                                               onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                    }\n                                </div>\n                            </li>\n                        }\n                    </ul>\n                </Nav>\n                <div className=\"row satirBasi\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-header \">\n                                <h4 className=\"card-title\">Form İşlemleri</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"\">\n                                    <div className=\"\" style={{marginTop: '10px', marginBottom: '0px'}}>\n                                        <DetailedSearch fields={fields}\n                                                        loading={this.state.loading}\n                                                        onSearch={this.handleSearch}/>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body\">\n                                <Table columns={columns}\n                                       content={this.state.list}\n                                       loading={this.state.loading}\n                                       total={this.state.total}\n                                       page={this.state.page}\n                                       manual={this.state.manual}\n                                       size={this.state.size}\n                                       options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                                       fetchData={this.fetchData}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.alert}\n                {this.state.showVideos &&\n                    <VideoModal video={this.state.video} isOpen={this.state.showVideos}\n                                close={() => this.setState({showVideos: false})}/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default FormSessionListPage;\n"],"sourceRoot":""}