{"version":3,"sources":["accounting/kepik/formsession/SignFormManualPage.js"],"names":["SignFormManualPage","Component","constructor","props","super","readSmsTemplate","self","this","params","url","method","requestK","then","response","setState","smsBody","data","catch","error","showAxiosError","readMailTemplate","mimeBody","isNoTemplateValid","state","mimeTitle","trim","Alert","position","effect","timeout","alert","loading","completed","signedDocumentCount","progressLength","pageState","timer","timerStarted","certError","disableButton","signPdf","bind","writeSignedForm","updatePdfCertificates","stateMap","0","label","10","wait","20","30","40","danger","componentDidMount","axios","Axios","create","baseURL","location","formSessionId","history","push","pathname","peykName","componentDidUpdate","setInterval","prevState","updateMailInfo","parseInt","kepAccountId","title","body","timerStatus","status","onTimerStatus","hsmType","pdfCertificate","certificate","value","certificateKeyId","keyId","JSON","stringify","signedInfoList","p","Promise","resolve","signedDocument","length","forEach","element","index","pdfName","post","base64","pin","signedInfo","id","signature","result","React","createElement","HsmErrorAlert","onConfirm","renderNavButtons","Nav","className","style","paddingLeft","height","StickButton","fontSize","onClick","checkGrantToDisplay","FORM_SEND","ISG_FORM_SEND","HEALTH_FORM_SEND","ZIMMET_FORM_SEND","KVKK_FORM_SEND","disabled","e","SweetAlert","showCancel","warning","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onCancel","renderState","marginBottom","Col","sm","md","display","marginRight","ReactLoading","type","color","width","top","lineHeight","paddingRight","opacity","fontWeight","renderMailInputs","Row","Input","marginTop","onChange","target","rows","border","padding","render","Notify","ref","Card","CardHeader","CardTitle","tag","CardBody","HsmCertificateViewer","manual","val","pinValueChange","certificateError","displayCertificateMenu","userId","currentUser"],"mappings":"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","file":"static/js/49.25aa0023.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Card, CardBody, CardHeader, CardTitle, Col, Input, Nav, Row} from 'reactstrap';\nimport 'react-table/react-table.css'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Notify from 'react-notification-alert';\nimport 'react-datetime/css/react-datetime.css'\nimport 'moment/locale/tr'\nimport Axios from 'axios'\nimport HsmErrorAlert from '../../../common/hsm/HsmErrorAlert'\nimport HsmCertificateViewer from '../common/HsmCertificateViewer';\nimport ReactLoading from 'react-loading';\nimport StickButton from \"../../../components/StickButton\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {checkGrantToDisplay, showAxiosError} from \"../../../helper/helper\";\nimport {FORM_SEND, ISG_FORM_SEND, HEALTH_FORM_SEND, ZIMMET_FORM_SEND, KVKK_FORM_SEND} from \"../../../common/authorities/GrantDef\";\nimport Alert from \"react-s-alert\";\n\nclass SignFormManualPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      completed: false,\n      signedDocumentCount: 0,\n      progressLength: 1,\n      pageState: 0,\n      timer: 1,\n      timerStarted: false,\n      certError: true,\n      disableButton: false\n    };\n\n    this.signPdf = this.signPdf.bind(this);\n    this.writeSignedForm = this.writeSignedForm.bind(this);\n    this.updatePdfCertificates = this.updatePdfCertificates.bind(this);\n\n    this.stateMap = {\n      0: {\n        label: \"Form dosyaları imzalama için hazır. İmzalayınız\",\n      },\n      // İmzala'ya basıldı -> 1.E-posta bilgileri alınıyor\n      10: {\n        label: \"İletiler oluşturuluyor. Lütfen bekleyiniz.\",\n        wait: true\n      },\n      // İmzala'ya basıldı -> 2.Sertifika session'a kaydediliyor\n      //                   -> 3.SignedInfo Üretilmesi bekleniyor\n      20: {\n        label: \"Sertifika sahibi formlara yazılıyor. Lütfen, sayfayı terk etmeyiniz.\",\n        wait: true\n      },\n      // İmzala'ya basıldı -> 4.İmzalanıyor\n      30: {\n        label: \"Form dosyaları imzalanıyor. Lütfen, sayfayı terk etmeyiniz.\",\n      },\n      // İmzalanamadı ise;\n      40: {\n        label: \"Formlar imzalanamadı. Bilgileri kontrol ediniz.\",\n        danger: true\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.axios = Axios.create({\n      baseURL: \"http://127.0.0.1:9999\"\n    });\n\n    if (!this.props || !this.props.location || !this.props.location.formSessionId)\n      this.props.history.push({pathname: `/${this.props.peykName}/formsessionlist`});\n    else {\n      this.setState({\n        formSessionId: this.props.location.formSessionId,\n        mimeTitle: this.props.location.mimeTitle,\n        mimeBody: this.props.location.mimeBody\n      });\n      this.readSmsTemplate();\n      this.readMailTemplate();\n    }\n  }\n\n  readSmsTemplate = () => {\n    let self = this;\n    let params = {\n      url: `/signer/readFormSmsTemplateInfo`,\n      method: \"get\"\n    };\n    requestK(params)\n      .then(function (response) {\n        self.setState({smsBody: response.data})\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n  };\n\n  readMailTemplate = () => {\n    let self = this;\n    let params = {\n      url: `/signer/readFormMailTemplateInfo`,\n      method: \"get\"\n    };\n    requestK(params)\n      .then(function (response) {\n        if (response.data) {\n          self.setState({mimeBody: response.data})\n        }\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n  };\n\n  componentDidUpdate() {\n    if (this.state.timer === 1 && !this.state.timerStarted &&\n      this.state.completed && this.state.signedDocumentCount === this.state.progressLength) {\n      setInterval(() => {\n        this.setState(prevState => ({timer: prevState.timer - 1}))\n      }, 1000);\n      this.setState({timerStarted: true});\n    } else if (this.state.timer === 0) {\n      this.props.history.push({pathname: `/${this.props.peykName}/formsession/` + this.state.formSessionId});\n    }\n  }\n\n  isNoTemplateValid = () => {\n    if (this.state.mimeTitle.trim() === \"\") {\n      Alert.error(\"E-Posta İleti Konusu alanı boş bırakılamaz.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 5000\n      });\n      this.setState({alert: null});\n      return false;\n    } else if (this.state.mimeBody.trim() === \"\") {\n      Alert.error(\"E-Posta İleti İçeriği alanı boş bırakılamaz.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 5000\n      });\n      this.setState({alert: null});\n      return false;\n    } else if (this.state.smsBody.trim() === \"\") {\n      Alert.error(\"SMS İleti İçeriği alanı boş bırakılamaz.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 5000\n      });\n      this.setState({alert: null});\n      return false;\n    }else{\n      return true;\n    }\n  }\n  updateMailInfo() {\n    let self = this;\n    let params = {\n      url: `/signer/writeFormMimeInfo`,\n      method: \"post\",\n      data: {\n        formSessionId: parseInt(self.props.location.formSessionId),\n        kepAccountId: self.state.kepAccountId && parseInt(self.state.kepAccountId),\n        title: self.state.mimeTitle,\n        body: self.state.mimeBody,\n        smsBody: self.state.smsBody,\n      }\n    };\n    self.setState({pageState: 10, alert: null, disableButton: true});\n    requestK(params)\n      .then(function (response) {\n        self.updatePdfCertificates();\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({pageState: 40, disableButton: false});\n    });\n  }\n\n  timerStatus(status){\n    this.props.onTimerStatus(status);\n  };\n  updatePdfCertificates() {\n    let self = this;\n    let params = {\n      url: `/signer/createFormPdfSignedInfoList`,\n      method: \"post\",\n      data: {\n        formSessionId: parseInt(self.state.formSessionId),\n        hsmType: self.state.pdfCertificate.hsmType,\n        certificate: self.state.pdfCertificate.value,\n        certificateKeyId: self.state.pdfCertificate.keyId,\n        pdfCertificate:  JSON.stringify(self.state.pdfCertificate)\n      },\n      timeout: 9600000\n    };\n    this.setState({pageState: 20, alert: null});\n    this.timerStatus(true);\n    requestK(params)\n      .then(function (response) {\n        self.setState({signedInfoList: response.data});\n        self.signPdf();\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({pageState: 40, disableButton: false});\n      this.timerStatus(false);\n    });\n  }\n\n  signPdf() {\n    let p = Promise.resolve([]);\n    let signedDocument = [];\n\n    this.setState({\n      progressLength: this.state.signedInfoList.length,\n      loading: true,\n      pageState: 30\n    });\n    this.state.signedInfoList.forEach((element, index) => {\n      p = p.then((response) => {\n        this.setState({pdfName: element.pdfName});\n        return this.axios.post(\"/signature/signedinfo?hsmtype=\" + element.hsmType, {\n          base64: true,\n          pin: this.state.pin,\n          signedInfo: element.signedInfo,\n          certificate: {\n            keyId: element.certificateKeyId\n          }\n        }).then((response) => {\n          signedDocument.push({\n            id: element.id,\n            signature: response.data.signedDocument\n          });\n          this.writeSignedForm(signedDocument);\n          signedDocument = [];\n        });\n      });\n    });\n\n    p.then((result) => {\n      this.setState({\n        loading: false,\n        completed: true\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        completed: false,\n        pageState: 0,\n        disableButton: false,\n        alert: <HsmErrorAlert error={error} onConfirm={() => this.setState({alert: null})}/>\n      });\n    });\n  }\n\n  writeSignedForm(signedDocument) {\n    let self = this;\n    let params = {\n      url: `/signer/writeFormPdfSignature`,\n      method: \"post\",\n      data: signedDocument,\n      timeout: 9600000\n    };\n    requestK(params)\n      .then(function (response) {\n        self.setState((prevState, props) => {\n          return {signedDocumentCount: prevState.signedDocumentCount + 1}\n        });\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({pageState: 40, disableButton: false});\n      this.timerStatus(false);\n    });\n  }\n\n  renderNavButtons() {\n    return (\n      <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n        <StickButton position=\"leftSide\" className=\"zocial GeriDon\" style={{fontSize: 'x-small'}}\n                     label=\"Geri\" title=\"Önceki Sayfaya Git\"\n                     onClick={() => this.props.history.push(`/${this.props.peykName}/formsession/${this.state.formSessionId}`)}/>\n        {(checkGrantToDisplay(this, FORM_SEND) || checkGrantToDisplay(this, ISG_FORM_SEND) || checkGrantToDisplay(this, HEALTH_FORM_SEND) || checkGrantToDisplay(this, ZIMMET_FORM_SEND) || checkGrantToDisplay(this, KVKK_FORM_SEND)) &&\n        <StickButton position=\"leftSide\" className=\"zocial Imza\" style={{fontSize: 'x-small'}}\n                     label=\"İmzala\" title=\"Form PDF Dosyaları İmzala\"\n                     disabled={this.state.disableButton}\n                     onClick={e => {\n                       if (this.state.pdfCertificate && this.state.pdfCertificate.hsmType &&\n                         this.state.pdfCertificate.value && this.state.pdfCertificate.keyId)\n                         this.setState({\n                           alert: (\n                             <SweetAlert showCancel warning\n                                         confirmBtnText=\"Evet\"\n                                         cancelBtnText=\"Hayır\"\n                                         confirmBtnBsStyle=\"success\"\n                                         cancelBtnBsStyle=\"default\"\n                                         title=\"Emin misiniz?\"\n                                         onConfirm={() => {\n                                           if(this.isNoTemplateValid()){\n                                             this.updateMailInfo();\n                                           }\n                                         }}\n                                         onCancel={() => this.setState({alert: null})}\n                             >\n                               Dokümanlar imzalanıp Tübitak zaman damgası ile mühürlenerek gönderilecektir.\n                             </SweetAlert>\n                           )\n                         });\n                       else\n                         this.setState({\n                           alert: <HsmErrorAlert error={this.state.certError}\n                                                 onConfirm={() => this.setState({alert: null})}/>\n                         });\n                     }}/>}\n      </Nav>\n    );\n  }\n\n  renderState() {\n    let stateMap = this.stateMap[this.state.pageState];\n\n    return <div className=\"row\" style={{marginBottom: \"15px\"}}>\n      <Col sm='12' md='6'>\n        <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n          {stateMap.wait && <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={24} width={24}/>}\n        </div>\n        <div style={{\n          display: \"inline-block\", marginRight: \"8px\", position: \"relative\", top: \"-6px\",\n          color: stateMap.danger === true ? \"trueColor\" : \"falseColor\"\n        }}>\n          {stateMap.label}\n        </div>\n      </Col>\n      <Col sm='12' md='6'>\n        <div className='explanationOfSigning' style={{lineHeight: '1.2'}}>\n          <i className=\"fas fa-exclamation-triangle\" id=\"exclamationIcon\" style={{paddingRight: '10px'}}/>\n          <span style={{opacity: '0.9', fontSize: '12px', fontWeight: '500'}}>İmzalama süresince lütfen ekranı kapatmayınız ve bilgisayarınızın ekran koruyucusunun kapalı olduğundan emin olun.</span>\n        </div>\n      </Col>\n    </div>\n  }\n\n  renderMailInputs() {\n\n    return <div className=\"FormRenk\">\n      <Row sm={6}>\n        <Col sm={2} style={{top: '5px'}}>\n          E-Posta Konu\n        </Col>\n        <Col sm={6}>\n          <Input type=\"text\" style={{marginTop: '2px'}}\n                 value={this.state.mimeTitle}\n                 onChange={(e) => this.setState({mimeTitle: e.target.value})}/>\n        </Col>\n      </Row>\n      <Row sm={6}>\n        <Col sm={2} style={{top: '25px'}}>\n          E-Posta İçerik\n        </Col>\n        <Col sm={6}>\n          <Input type=\"textarea\" rows={5}\n                 style={{\n                   height: '200px',\n                   border: '1px solid #E3E3E3',\n                   marginTop: '2px',\n                   padding: '3px 3px'\n                 }}\n                 value={this.state.mimeBody}\n                 onChange={(e) => this.setState({mimeBody: e.target.value})}/>\n        </Col>\n      </Row>\n      <Row sm={6}>\n        <Col sm={2} style={{top: '25px'}}>\n          SMS İçerik\n        </Col>\n        <Col sm={6}>\n          <Input type=\"textarea\" rows={5}\n                 style={{\n                   height: '200px',\n                   border: '1px solid #E3E3E3',\n                   marginTop: '2px',\n                   padding: '3px 3px'\n                 }}\n                 value={this.state.smsBody}\n                 onChange={(e) => this.setState({smsBody: e.target.value})}/>\n        </Col>\n      </Row>\n    </div>\n  }\n\n  render() {\n\n    return (\n      <Row className=\"baseBackground\">\n        <Notify ref=\"notify\"/>\n        {this.state.alert}\n        {this.renderNavButtons()}\n        <div className=\"row satirBasi\">\n          <Col md=\"12\">\n            <Card className=\"card\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">\n                  İmzala & Gönder\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n                {this.props.location.formSessionId && this.renderState()}\n              </CardBody>\n              <CardBody>\n                {this.props.location.formSessionId && this.renderMailInputs()}\n              </CardBody>\n              <CardBody>\n                {this.props.location.formSessionId &&\n                <HsmCertificateViewer manual={true}\n                                      value={this.state.pdfCertificate}\n                                      onChange={(val) => this.setState({pdfCertificate: val})}\n                                      pinValueChange={(val) => this.setState({pin: val})}\n                                      certificateError={(val) => this.setState({certError: val})}\n                                      pdfName={this.state.pdfName ? this.state.pdfName : \"\"}\n                                      progressLength={this.state.progressLength}\n                                      signedDocumentCount={this.state.signedDocumentCount}\n                                      displayCertificateMenu={this.state.pageState === 0 || this.state.pageState === 40}\n                                      userId={this.props.currentUser && this.props.currentUser.id}/>}\n              </CardBody>\n            </Card>\n          </Col>\n        </div>\n      </Row>\n\n    );\n  }\n\n}\n\nexport default SignFormManualPage;\n"],"sourceRoot":""}