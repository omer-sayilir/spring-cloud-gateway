{"version":3,"sources":["components/AutoCompleteList.js","accounting/kepik/organization/DepartmentSelectionTree.js","accounting/kepik/employee/component/CreateEditEmployeeModal.js","accounting/kepik/bordrosession/component/UploadBordroFileModal.js","accounting/kepik/bordro/component/EmployeeSelector.js","accounting/kepik/bordro/component/BordroEmployeeEditor.js","accounting/kepik/common/DocumentConditionalSpec.js","accounting/kepik/common/DocumentDeclineSpec.js","accounting/kepik/bordro/component/BordroTable.js","accounting/kepik/bordrosession/component/BordroFileTable.js","accounting/kepik/bordrosession/component/ChangeLocation.js","accounting/kepik/bordrosession/component/UploadBordroFileModalWithoutTckn.js","accounting/kepik/bordrosession/BordroImportPage.js"],"names":["AutoCompleteList","Component","constructor","props","super","formatCreateLabelCreator","value","this","allowNew","name","state","changeLabel","bind","createLabel","checkUpperCase","generateOptions","onChange","list","length","newValue","onlyLabel","label","push","updateList","i","valueCheck","text","useUpperCase","toString","replace","toUpperCase","options","map","e","render","React","createElement","Select","Creatable","clearable","multi","className","id","placeholder","promptTextCreator","noResultsText","onNewOptionClick","defaultProps","DepartmentSelectionTree","selectedDepts","conditionalList","declineList","forEach","componentDidMount","levelInfo","findChildrenLowestLevel","treeData","setState","level","maxLength","onSelectionChange","node","checked","target","key","childrenList","searchTreeChildrenNameList","onSelect","conditionalListChange","self","deptList","title","params","url","method","data","loading","requestK","then","response","Array","isArray","index","indexOf","splice","from","Set","changeOnConditionalList","catch","error","showAxiosError","declineListChange","changeOnDeclineList","loop","nodes","width","TreeNode","customLabel","children","style","display","Col","xs","margin","padding","overflow","type","marginBottom","textAlign","selectedAuthorizationWay","authorizationWays","EXPENDITURE","Tree","showLine","icon","_ref","selectable","defaultExpandAll","CreateEditEmployeeModal","getEmployeeInfo","departmentList","expenditureDepList","ntfTypeList","finally","getGroupList","groupList","group","getEmployee","getJobTitles","jobTitles","readCustomFields","Object","keys","customFields","handleChangeCustomFields","intFormat","match","doubleFormat","substring","handleChangeCustomDoubleFields","isNaN","parseFloat","split","join","handleChangeCustomDateTimeFields","moment","isValid","dateValidation","format","handleBooleanFields","generateJobTitle","employee","jobTitle","handleSaveClick","setDepartmentInfo","isPhoneNumberValid","telephone","Alert","warning","isTCValid","tckn","isBildTuruSelected","employeeNotificationTypeList","isEmailSelected","email","trim","isDepartmanSelected","department","isLoading","isDisabled","saveClicked","getEmployeeGroupList","selectedGroupList","employeeGroups","employeeGroup","selectedEmpGroupList","hasGrant","grant","handleChange","validateClass","getNtfTypeList","onManagerChange","onSecondManagerChange","onThirdManagerChange","onDepartmentChange","handleChangeDouble","handleChangeInteger","onChangeNtfTypeList","handleSalaryDouble","isNumeric","onChangeOnJobTitle","getTelephoneNumber","validateField","validateMessage","rule","dataset","vdata","boundary","vlength","turkishCharacterPattern","result","assign","undefined","message","expenditureDepartment","integrationCode","conformToMask","guide","conformedValue","componentWillMount","isDepartmentMandatory","statusType","isCandidate","manager","secondManager","thirdManager","getDepartmentElement","expenditureDep","getExpenditureElement","letter","btnDisabled","str","valid","validateEmail","position","effect","timeout","html","notificationTypeList","some","item","ntfType","longCode","phone","setExpenditureDepInfo","isValidEmployee","errorMessage","departmentMandatory","kepAddressUnique","isKepAddressUnique","JSON","stringify","success","checkIfRegistryManual","toggleModal","parseInt","recordId","parse","onChangeGroupList","selected","_employee$employeeGro","existEmpGroup","find","empGroup","onExpenditureDepChange","dept","alert","SweetAlert","confirmBtnText","confirmBtnBsStyle","onConfirm","DefaultModal","isOpen","modal","fade","size","closeOnEsc","Fragment","confirmButtonStyle","cursor","opacity","cancelBtnText","onCancel","marginTop","Form","paddingLeft","paddingRight","fontWeight","renderInput","renderInputInteger","FormGroup","row","Label","sm","Async","ignoreAccents","autoload","cache","filterOptions","searchPromptText","loadingPlaceholder","clearValueText","loadOptions","getEmployees","disabled","ReactLoading","height","fill","isKepOwner","MaskedInput","mask","filter","v","includes","emailMask","inputProps","ref","onBlur","UncontrolledTooltip","placement","delay","statusTypeSetData","employmentContract","employmentContractData","SEE_SALARY_DATA","NumberFormat","isNumericString","salary","onValueChange","suffix","thousandSeparator","decimalSeparator","displayType","allowNegative","decimalScale","Input","vip","Datetime","locale","input","closeOnSelect","passiveEndDate","isValidDate","current","startOf","isAfter","dateFormat","timeFormat","reason","statusReasonData","Row","fontSize","employmentStartDate","renderInputSmaller","renderInputSmallerDouble","gender","genderData","dateOfBirth","titleList","renderCustomFields","prevKey","renderCustomInputSmaller","fieldName","readOnly","arguments","check","customFieldsBooleanControl","onClick","UploadBordroFileModal","zipAndUploadFiles","fileList","zip","require","file","content","generateAsync","compression","compressionOptions","File","Blob","lastModified","Date","now","methodCall","formData","FormData","newSession","append","sessionMonth","year","month","location","cancelToken","_source","token","status","statusText","document","history","peykName","loadBordroSession","axios","isCancel","process","realIndex","disableZone","steps","steps2","back","close","last","next","skip","joyrideActive","shouldRun","onDrop","callback","changeLocation","sendNextBordroFile","componentDidUpdate","prevProps","prevState","snapshot","removeMonth","setRemoveMonthOff","firstCycle","total","CancelToken","source","totalCount","allPdf","allXlsx","fileName","toLowerCase","endsWith","totalFileSize","toggleModalWithTimeout","load","document1","cancel","acceptedFiles","rejectedFiles","processing","uploadBtnDisabled","getStatusRender","color","activateJoyride","action","modalBodyStyle","minHeight","secondaryButton","right","alignSelf","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","zIndex","primaryColor","renderMonth","isSameOrBefore","onMonthChange","paddingTop","Dropzone","accept","activeClassName","multiple","maxHeight","paddingBottom","backgroundColor","TextOverFlowTooltip","Decimal","toFixed","toNumber","colSpan","float","CheckboxTable","checkboxHOC","ReactTable","EmployeeSelector","employeeListLoading","searching","manual","pageList","totalElements","employeeList","renderMainTable","checkboxProps","keyField","isSelected","toggleSelection","selectType","getTrProps","s","r","original","columns","renewListForDepartment","Header","accessor","checkboxTable","defaultPageSize","previousText","nextText","pageText","ofText","rowsText","BordroEmployeeEditor","editClicked","nextProps","bordro","selectedEmployee","edit","bordroId","employeeId","disabledSaveBtn","toggle","onBordroUpdated","renderView","parsedTckn","surname","jobtitle","kepAddress","renderEdit","Modal","ModalHeader","ModalBody","ModalFooter","Button","DocumentConditionalSpec","isChecked","conditionalIdList","sessionId","disableBtn","showCancel","cancelBtnBsStyle","top","DocumentDeclineSpec","declineIdList","BordroTable","readDepartmentTreeData","readTitleAll","updateConditionalList","conditionalSelection","doc","conditionalApproveAllowed","changeOnConditionalSelection","updateDeclineList","declineSelection","declineAllowed","changeOnDeclineSelection","detailedDepartment","b","getElementById","selection","displayTcknDublicates","showOnlyMissing","showOnlyDublicates","showOnlySents","conditionalSelectedAll","declineSelectedAll","searchQuery","page","searchKey","temporaryRow","showDownloadButton","DEPARTMENT","fetchData","deleteRow","handleSearch","changeSelection","setSelectedDepts","toggleCheckboxChange","toggleConditionalChange","toggleDeclineChange","changeConditionalSelection","changeDeclineSelection","isConditionalAllowed","isDeclineAllowed","setMediaViewer","previewBordro","getTrStyles","downloadContent","onAuthorizationWaysChange","jobTitlesData","event","componentWillReceiveProps","isManual","direction","_responseData$page","_responseData$page2","sortStr","bordroSession","responseData","selectedIdList","selectedIdResponse","conditionallyOrDeclinableTotalIds","totalPdfCountIdList","totalIdList","isPdfsParsing","tableLoadingCompleted","disabledDeleteBtn","cancelSendingBordro","disabledCancelSendingBtn","items","addSelectionToState","slice","emp","mediaModal","responseType","blob","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","webkitTextFillColor","disabledDownloadBtn","selectedIndex","link","href","window","URL","createObjectURL","randomNum","Math","floor","random","createdAt","term","download","body","appendChild","timeStamp","formTimeStamp","base64_arraybuffer","decode","linkTs","click","pageIdList","dublicateList","tempList","columnList","DropdownCheck","selectionIdList","sortable","Cell","DocumentState","warningCount","pageCount","messageType","isConditional","stateCompare","isDeclinable","WebkitTextFillColor","data-toggle","aria-labelledby","downloadApproveDocument","showModal","conditionalDocumentId","conditionalDocumentStatus","showConditionalChangeModal","declineDocumentId","declineDocumentStatus","showDeclineChangeModal","stateDetail","renewListForPrivileges","fieldList","operator","selectData","stateData","statusTypeFilterData","fields","marginLeft","DetailedSearch","onSearch","bordroSessionInfo","unpairedCount","dublicatedCount","marginRight","Table","StateDetail","detail","documentType","ApproveDocumentViewer","closeModal","flag","sidebarMenus","BordroFileTable","fileCount","downloadSessionFile","loadName","checkGrantToDisplay","DOWNLOAD_UPLOADED_PAYROLL_FILE","Container","ChangeLocation","UploadBordroFileModalWithoutTckn","createCustomFields","customFieldsQuery","searchList","selectedAll","titleFilterList","searchWithKey","selectedList","searchQueryResult","addCustomFields","BordroImportPage","videos","videos2","switchVideo","video","showEczaciHelpModal","updateDimensions","innerWidth","deleteBordro","deleteList","disabledBtnType","sessionToBeCreatedn","sessionToBeCreated","timerStatus","getSignStatistics","signed","unsigned","showAlertMessage","signStatistic","states","fail","arrangeDataSet","dataSet","uuid","create_UUID","isNotEminEczanesi","currentUser","vknTckn","newCleanState","sign","manualPdfSign","showWarning","deleteClicked","downloadMedia","downloadExcel","uploadBordroFile","uploadBordroFileWithoutTckn","waitIfMimeSending","uploadBordroSessionFile","checkSessionMonthIsUsed","readBordroSessionDateAll","refreshBordroSessionInfo","sessionAndEmployeeListChecker","refreshBordroSessionDublicateInfo","checkCustomerSmsCreditAndSent","checkCustomerSmsCreditAndSentManuel","monthlyBordros","isMimeSending","sentCount","signedCount","locaton","isHsmOwner","steps3","open","stop","bordroSessionId","selectedBordroIdList","addEventListener","componentWillUnmount","removeEventListener","info","errorOccured","errorTrace","newState","unloadedEmployees","unloadedLoading","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","onTimerStatus","LOADED","READYTOBESENT","LOADSTARTED","currentState","LOADERROR","SENT","hasFileWithError","bordroCount","sentMimeCount","signedMimeCount","unPairedCount","showUploadModal","fileLoadSessionId","showUploadModalWithoutTckn","selectedDate","loadedBordros","x","bgcolor","monthName","loadingType","sidebarSelected","pairedEmployeeId","renderBordroSessionState","renderFileListModal","displayFiles","renderLocationChangeModal","displayLocationChangeModal","pretext","renderNavButtons","NavBarKS","offsetWidth","manualSign","reload","exitsManuelSign","StickButton","pathname","danger","aria-haspopup","aria-expanded","kepPdfSign","Nav","mimeSign","hsmSign","mailPdfSign","updatedConditionalList","updatedDeclineList","updateConditionalInfoParams","updateDeclineInfoParams","renderSummary","unloadedEmployeesLength","left","CardHeader","CardTitle","tag","CardBody","VideoModal"],"mappings":"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","file":"static/js/15.b56ad72e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Select from \"../local_node_modules/react-select\"\n\nclass AutoCompleteList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.changeLabel = this.changeLabel.bind(this);\n        this.createLabel = this.createLabel.bind(this);\n        this.checkUpperCase = this.checkUpperCase.bind(this);\n        this.generateOptions = this.generateOptions.bind(this);\n    }\n\n    changeLabel(value) {\n        this.props.onChange(this.checkUpperCase(value));\n    }\n\n    createLabel(value) {\n        if (this.props.allowNew) {\n            let list = this.props.list;\n            if (list.length === 0) {\n                let newValue;\n                if (!this.props.onlyLabel) {\n                    newValue = {value: \"0\", label: this.checkUpperCase(value.label)};\n                } else {\n                    newValue = {value: this.checkUpperCase(value.label), label: this.checkUpperCase(value.label)};\n                }\n                list.push(newValue);\n                this.props.updateList(list);\n                this.changeLabel(newValue);\n            } else {\n                let i = list.length - 1;\n                let valueCheck = list[i];\n                if (!this.props.onlyLabel) {\n                    if (valueCheck.value === \"0\") {\n                        list[i].label = this.checkUpperCase(value.label);\n                        this.props.updateList(list);\n                        this.changeLabel(list[i]);\n                    } else {\n                        let newValue = {value: \"0\", label: this.checkUpperCase(value.label)};\n                        list.push(newValue);\n                        this.props.updateList(list);\n                        this.changeLabel(newValue);\n                    }\n                } else {\n                    if (valueCheck.value === this.checkUpperCase(value.label)) {\n                        list[i].label = this.checkUpperCase(value.label);\n                        this.props.updateList(list);\n                        this.changeLabel(list[i]);\n                    } else {\n                        let newValue = {\n                            value: this.checkUpperCase(value.label),\n                            label: this.checkUpperCase(value.label)\n                        };\n                        list.push(newValue);\n                        this.props.updateList(list);\n                        this.changeLabel(newValue);\n                    }\n                }\n            }\n        }\n    }\n\n    checkUpperCase(text) {\n        if (text && this.props.useUpperCase) {\n            if (text.value != null && text.label) {\n                text.label = text.label.toString().replace(\"i\", \"İ\").toUpperCase();\n            } else {\n                text = text.toString().replace(\"i\", \"İ\").toUpperCase();\n            }\n        }\n        return text;\n    }\n\n    generateOptions() {\n        let options = [];\n        this.props.list &&\n        this.props.list.length > 0 &&\n        this.props.list.map(e => {\n            options.push({value: e.value, label: this.checkUpperCase(e.label)})\n        });\n        return options;\n    }\n\n    formatCreateLabelCreator = (value) => {\n        if (this.props.allowNew)\n            return 'Ekle \"' + value + '\"';\n        else\n            return 'Lütfen, var olan bir ' + this.props.name + ' seçimi yapınız.'\n    };\n\n    render() {\n        let options = this.generateOptions();\n        return (\n            <Select.Creatable\n                clearable={false}\n                multi={false}\n                className=\"select-control\"\n                name=\"autoCompleteList\"\n                id=\"autoCompleteList\"\n                value={this.props.value}\n                placeholder={this.props.placeholder}\n                promptTextCreator={this.formatCreateLabelCreator}\n                noResultsText={\"Henüz kaydedilmiş veri yok\"}\n                onChange={(e) => this.changeLabel(e)}\n                onNewOptionClick={(e) => this.createLabel(e)}\n                options={options}\n            />\n        );\n    }\n}\n\nAutoCompleteList.defaultProps = {\n  allowNew: true,\n  useUpperCase: false,\n  onlyLabel: false,\n  updateList: (list) => {}\n};\nexport default AutoCompleteList;\n","import React, {Component} from 'react';\nimport Tree from \"rc-tree\";\nimport TreeNode from \"rc-tree/es/TreeNode\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport {findChildrenLowestLevel, searchTreeChildrenNameList} from \"../common/PeykHelper\";\nimport {Col} from \"reactstrap\";\nimport {authorizationWays} from \"../../../helper/helper\";\nclass DepartmentSelectionTree extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedDepts: {},\n            conditionalList: [],\n            declineList: [],\n        };\n\n        [\n            'onSelectionChange',\n            'conditionalListChange',\n            'declineListChange',\n        ].forEach((name) => (this[name] = this[name].bind(this)));\n    }\n\n    componentDidMount() {\n        let levelInfo = findChildrenLowestLevel(this.props.treeData[0]);\n        this.setState({level: levelInfo[0], maxLength: levelInfo[1] + 20});\n    }\n\n    onSelectionChange(node, e) {\n        let selectedDepts = this.state.selectedDepts;\n        let checked = e.target.checked;\n        selectedDepts[node.key] = checked;\n\n        let childrenList = searchTreeChildrenNameList(this.props.treeData[0], node.key);\n        childrenList && childrenList.map(key => selectedDepts[key] = checked);\n\n        this.setState({selectedDepts});\n        this.props.onSelect(selectedDepts);\n    }\n\n    conditionalListChange(node, e) {\n        let self = this;\n        let checked = e.target.checked;\n        let deptList = [];\n        deptList.push(node.title);\n        let params = {\n            url: '/employee/getEmployeeListForDept',\n            method: \"post\",\n            data: deptList\n        };\n        self.props.loading(true);\n        requestK(params)\n            .then(function (response) {\n                let conditionalList = self.state.conditionalList;\n                if (checked) {\n                    if (response.data && Array.isArray(response.data)) {\n                        response.data.map(id => conditionalList.push(id));\n                    } else if (response.data && typeof response.data === 'number') {\n                        conditionalList.push(response.data);\n                    }\n                } else {\n                    if (response.data && Array.isArray(response.data)) {\n                        response.data.map(id => {\n                            let index = conditionalList.indexOf(id);\n                            if (index > -1) {\n                                conditionalList.splice(index, 1);\n                            }\n                        });\n                    } else if (response.data && typeof response.data === 'number') {\n                        let index = conditionalList.indexOf(response.data);\n                        if (index > -1) {\n                            conditionalList.splice(index, 1);\n                        }\n                    }\n                }\n                conditionalList = Array.from(new Set(conditionalList));\n                self.setState({conditionalList});\n                self.props.changeOnConditionalList(conditionalList);\n                self.props.loading(false);\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.props.loading(false);\n        });\n    }\n\n    declineListChange(node, e) {\n        let self = this;\n        let checked = e.target.checked;\n        let deptList = [];\n        deptList.push(node.title);\n        let params = {\n            url: '/employee/getEmployeeListForDept',\n            method: \"post\",\n            data: deptList\n        };\n        self.props.loading(true);\n        requestK(params)\n            .then(function (response) {\n                let declineList = self.state.declineList;\n                if (checked) {\n                    if (response.data && Array.isArray(response.data)) {\n                        response.data.map(id => declineList.push(id));\n                    } else if (response.data && typeof response.data === 'number') {\n                        declineList.push(response.data);\n                    }\n                } else {\n                    if (response.data && Array.isArray(response.data)) {\n                        response.data.map(id => {\n                            let index = declineList.indexOf(id);\n                            if (index > -1) {\n                                declineList.splice(index, 1);\n                            }\n                        });\n                    } else if (response.data && typeof response.data === 'number') {\n                        let index = declineList.indexOf(response.data);\n                        if (index > -1) {\n                            declineList.splice(index, 1);\n                        }\n                    }\n                }\n                declineList = Array.from(new Set(declineList));\n                self.setState({declineList});\n                self.props.changeOnDeclineList(declineList);\n                self.props.loading(false);\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.props.loading(false);\n        });\n    }\n\n    render() {\n        let maxLength = this.state.maxLength ? this.state.maxLength : 0;\n        const icon = ({}) => (<i className=\"fa fa-university\"/>);\n        const loop = (nodes, width) => {\n            if (!nodes || !nodes.length) {\n                return null\n            }\n            return nodes.map((node) =>\n                <TreeNode key={node.key}\n                          title={customLabel(node, width)}>\n                    {loop(node.children, width - 18)}\n                </TreeNode>\n            )\n        };\n        const customLabel = (node, width) => (\n\n            <div style={{display: 'inline-flex'}}>\n\n                <Col xs='10' style={{margin: '0', padding: '0', width: width + \"px\",}} title={node.title}>\n                    <label style={{overflow: 'hidden'}}> {node.title}... </label>\n                </Col>\n\n                <div className='2' style={{display: 'inline-flex'}}>\n                    <Col xs={'6'}>\n                        |\n                        <input type=\"checkbox\" style={{width: '40px'}}\n                               checked={this.state.selectedDepts && this.state.selectedDepts[node.key]}\n                               onChange={e => this.onSelectionChange(node, e)}/>\n                        |\n                    </Col>\n\n                    {/*<Col xs={'6'}>*/}\n                    {/*    |*/}\n                    {/*    <input type=\"checkbox\" style={{width: '40px'}}*/}\n                    {/*           checked={this.state.conditionalList && this.state.conditionalList[node.title]}*/}\n                    {/*           onChange={e => this.conditionalListChange(node, e)}/>*/}\n                    {/*    |*/}\n                    {/*</Col>*/}\n                </div>\n            </div>\n\n        );\n\n        return (\n            <div className=\"col-xs-12\">\n                <div style={{marginBottom: '-15px'}}>\n                    <label style={{width: (maxLength + 135) + \"px\", textAlign: 'center'}}>{this.props.selectedAuthorizationWay===authorizationWays.EXPENDITURE?\"Masraf Yeri\":\"Departman\"}</label>\n                    <label style={{width: \"40px\", textAlign: 'center'}}>Seçim</label>\n                    {/*<label style={{width: \"120px\", textAlign: 'center'}}>Şartlı Onay</label>*/}\n                </div>\n                <div>\n                    <Tree showLine\n                          icon={icon}\n                          selectable={false}\n                          defaultExpandAll={true}>\n                        {loop(this.props.treeData, maxLength)}\n                    </Tree>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DepartmentSelectionTree;","import React, {Component} from 'react';\nimport {customFieldsBooleanControl, showAxiosError} from \"../../../../helper/helper\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport DefaultModal from \"../../../../components/DefaultModal\";\nimport Alert from \"react-s-alert\";\nimport {isValidEmployee} from \"../../../../common/componentValidation\";\nimport MaskedInput, {conformToMask} from \"react-text-mask\";\nimport {\n    employmentContractData,\n    genderData,\n    getEmployees,\n    isDepartmentMandatory,\n    isKepAddressUnique,\n    statusReasonData,\n    statusTypeSetData\n} from \"../../common/PeykHelper\";\nimport {Col, Form, FormGroup, Input, Label, Row, UncontrolledTooltip} from \"reactstrap\";\nimport Select from \"../../../../local_node_modules/react-select\";\nimport moment from \"moment/moment\";\nimport Datetime from \"react-datetime\";\nimport AutoCompleteList from \"../../../../components/AutoCompleteList\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport NumberFormat from 'react-number-format';\nimport {SEE_SALARY_DATA} from \"../../../../common/authorities/GrantDef\";\nimport emailMask from \"text-mask-addons/dist/emailMask\";\nimport {validateField} from \"../../../../common/validation\";\nimport ReactLoading from \"react-loading\";\n\nclass CreateEditEmployeeModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            employee: {},\n            error: {},\n            departmentList: [],\n            expenditureDepList: [],\n            ntfTypeList: [],\n            customFields: {},\n            dateValidation: true,\n            groupList: [],\n            selectedGroupList: [],\n            selectedEmpGroupList: [],\n            jobTitles: [],\n            jobTitle: {value: \"\", label: \"\"},\n            isLoading: false,\n            isDisabled: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.saveClicked = this.saveClicked.bind(this);\n        this.validateClass = this.validateClass.bind(this);\n        this.getNtfTypeList = this.getNtfTypeList.bind(this);\n        this.onManagerChange = this.onManagerChange.bind(this);\n        this.onSecondManagerChange = this.onSecondManagerChange.bind(this);\n        this.onThirdManagerChange = this.onThirdManagerChange.bind(this);\n        this.onDepartmentChange = this.onDepartmentChange.bind(this);\n        this.handleChangeDouble = this.handleChangeDouble.bind(this);\n        this.handleChangeInteger = this.handleChangeInteger.bind(this);\n        this.onChangeNtfTypeList = this.onChangeNtfTypeList.bind(this);\n        this.handleSalaryDouble = this.handleSalaryDouble.bind(this);\n        this.getEmployeeGroupList = this.getEmployeeGroupList.bind(this);\n        this.getEmployee = this.getEmployee.bind(this);\n        this.isNumeric = this.isNumeric.bind(this);\n        this.onChangeOnJobTitle = this.onChangeOnJobTitle.bind(this);\n        CreateEditEmployeeModal.getTelephoneNumber = CreateEditEmployeeModal.getTelephoneNumber.bind(this);\n        this.validateField = this.validateField.bind(this);\n        this.validateMessage = this.validateMessage.bind(this);\n    }\n\n    validateField(e) {\n        let { name, value } = e.target;\n        let id = e.target.id;\n        let rule = e.target.dataset.vdata;\n        let boundary = e.target.dataset.vlength;\n        const turkishCharacterPattern = /[şŞıİçÇöÖüÜĞğ]/g;\n        if (name === \"email\") {\n            if (value.match(turkishCharacterPattern)) {\n                return;\n            }\n        }\n        let result = validateField(rule, boundary, value);\n        let error = this.state.error;\n        error = Object.assign(error, {[id]: result});\n        this.setState({error});\n    }\n\n    validateMessage(id) {\n        let error = this.state.error;\n        return (error[id] === undefined ? '' : (error[id].message));\n    }\n\n    static getDepartmentElement(data) {\n        if (data.department) {\n            return {value: data.department.id.toString(), label: data.department.name};\n        } else {\n            return null;\n        }\n    }\n\n    static getExpenditureElement(data) {\n        if (data.expenditureDepartment) {\n            return {\n                value: data.expenditureDepartment.id.toString(),\n                label: data.expenditureDepartment.name + \"-(\" + data.expenditureDepartment.integrationCode + \")\"\n            };\n        } else {\n            return null;\n        }\n    }\n\n    static getTelephoneNumber(telephone) {\n        let phoneNumberMask = ['0', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n        let conformedPhoneNumber = conformToMask(\n            telephone,\n            phoneNumberMask,\n            {guide: false}\n        );\n        return conformedPhoneNumber.conformedValue;\n    }\n\n    componentWillMount() {\n        if (isDepartmentMandatory(this)) {\n            this.getEmployeeInfo();\n        }\n        if (!!this.props.id) {\n            this.readCustomFields();\n        }\n    }\n\n    getEmployeeInfo = () => {\n        let self = this;\n        let params = {\n            url: '/employee/getList',\n            method: \"get\",\n        };\n        self.setState({loading: true});\n        requestK(params)\n            .then(function (response) {\n                let {departmentList, expenditureDepList, ntfTypeList} = response.data;\n                self.setState({departmentList, ntfTypeList, expenditureDepList, loading: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n        })\n            .finally(function () {\n                self.setState({ loading: false });\n            });\n    };\n\n    getGroupList = () => {\n        let self = this;\n        let params = {\n            url: '/employee/getGroups',\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let groupList = [];\n                response.data.map((group) => {\n                    groupList.push({value: group.id, label: group.name, group: group})\n                });\n                self.setState({groupList});\n                self.getEmployee();\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    getJobTitles = () => {\n        let self = this;\n        let params = {\n            url: `/job/titles`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let jobTitles = response.data;\n                self.setState({jobTitles});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    readCustomFields = () => {\n        let self = this;\n        let params = {\n            url: `/employeecustom/readCustomFields`,\n            method: \"post\",\n            data: self.props.id\n        };\n        requestK(params)\n            .then(function (response) {\n                if (response.data && Object.keys(response.data) && Object.keys(response.data).length) {\n                    self.setState({customFields: response.data});\n                }\n            })\n            .catch(function (error) {\n            });\n    };\n\n    componentDidMount() {\n        let self = this;\n        self.getGroupList();\n        self.getJobTitles();\n    }\n\n    getEmployee() {\n        let self = this;\n        let params = {\n            url: `/employee/getEmployeeById`,\n            method: \"post\",\n            data: self.props.id ? self.props.id : -1\n        };\n        requestK(params)\n            .then(function (response) {\n                if (!response.data.id && self.props.tckn) {\n                    response.data.tckn = self.props.tckn;\n                }\n                let employee = response.data;\n                if (!self.props.id) {\n                    employee.statusType = self.props.isCandidate ? \"CANDIDATE\" : \"ACTIVE\";\n                }\n                self.setState({\n                    employee,\n                    jobTitle: {value: 1, label: employee.jobTitle},\n                    manager: response.data.manager,\n                    secondManager: response.data.secondManager,\n                    thirdManager: response.data.thirdManager,\n                    department: CreateEditEmployeeModal.getDepartmentElement(response.data),\n                    expenditureDep: CreateEditEmployeeModal.getExpenditureElement(response.data)\n                });\n                self.getEmployeeGroupList();\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    handleChange(e) {\n        let { name, value, type } = e.target;\n\n        if (name === \"name\" || name === \"surname\") {\n            let letter = /^[a-zA-Z\\süÜığĞİşŞçÇöÖ]+$/;\n            if (value.match(letter) || value.length === 0) {\n                let employee = this.state.employee;\n                employee[name] = value;\n                this.setState({ employee });\n            }\n        } else if (name === \"email\") {\n            const turkishCharacterPattern = /[şŞıİçÇöÖüÜĞğ]/g;\n            let employee = this.state.employee;\n            employee[name] = value;\n            this.setState({ employee });\n\n            if (value.match(turkishCharacterPattern)) {\n                this.setState({ btnDisabled: true });\n            } else {\n                this.setState({ btnDisabled: false });\n            }\n        } else if (name === 'statusType') {\n            let employee = this.state.employee;\n            if (value !== \"PASSIVE\") {\n                employee[\"passiveEndDate\"] = null;\n                employee[\"reason\"] = null;\n            }\n            employee[name] = value;\n            this.setState({ employee });\n        } else {\n            if (type === 'checkbox')\n                value = e.target.checked;\n\n            let employee = this.state.employee;\n            employee[name] = value;\n            this.setState({ employee });\n        }\n    }\n\n    isNumeric(str) {\n        if (typeof str != \"string\") return false\n        return !isNaN(str) && !isNaN(parseFloat(str))\n    }\n\n    handleChangeDouble(e) {\n        let self = this;\n        let {name, value} = e.target;\n        if (value.length > 1) {\n            value = value.toString().replace(\",\", \".\");\n        }\n        if (self.isNumeric(value) || value.length === 0) {\n            let employee = self.state.employee;\n            if (value && value.length === 1) {\n                value = value.split(\" \").join(\"\");\n                employee[name] = value;\n                self.setState({employee});\n            } else {\n                employee[name] = value;\n                self.setState({employee});\n            }\n        }\n    }\n\n    handleSalaryDouble(e) {\n        let self = this;\n        let value = e.value;\n        if (!isNaN(parseFloat(value) || value.length === 0)) {\n            let employee = self.state.employee;\n            if (value && value.length === 1) {\n                value = value.split(\" \").join(\"\");\n                employee[\"salary\"] = value;\n                self.setState({employee});\n            } else {\n                employee[\"salary\"] = value;\n                self.setState({employee});\n            }\n        }\n    }\n\n    handleChangeInteger(e) {\n        let {name, value} = e.target;\n        if (name === \"telephone\" && value && value.length > 0) {\n            value = value.split(\" \").join(\"\");\n            value = value.replace(/[{()}]/g, '').replace(/-/g, \"\").replace(/_/g, \"\");\n            if (value[0] === \"0\") {\n                value = value.substring(1, value.length);\n            }\n        } else if (name === \"telephone\" && value && value.length === 0) {\n            value = \"0\";\n        }\n        if (name === \"telephone\" && value.length > 10) {\n            value = value.substring(0, 10);\n        }\n        if (!isNaN(value)) {\n            let employee = this.state.employee;\n            if (value && value.length === 1) {\n                value = value.split(\" \").join(\"\");\n                employee[name] = value;\n                this.setState({employee});\n            } else {\n                employee[name] = value;\n                this.setState({employee});\n            }\n        }\n    }\n\n    handleChangeCustomFields = (e, type) => {\n        let {name, value} = e.target;\n        if (type === \"INTEGER\") {\n            let intFormat = /^\\d+$/;\n            if (value.length > 0 && !value.match(intFormat)) {\n                return;\n            }\n        } else if (type === \"DOUBLE\") {\n            let doubleFormat = /^[0-9.]+$/;\n            if (value.length > 0 && !(value.match(doubleFormat) && value.toString().substring(value.toString().indexOf(\".\") + 1).indexOf(\".\") === -1)) {\n                return;\n            }\n        }\n        let customFields = this.state.customFields;\n        customFields[name] = value;\n        this.setState({customFields});\n    };\n\n    handleChangeCustomDoubleFields = (e, type, name) => {\n        let value = e.value;\n        let customFields = this.state.customFields;\n        if (!isNaN(parseFloat(value) || value.length === 0)) {\n            if (value && value.length === 1) {\n                value = value.split(\" \").join(\"\");\n                customFields[name] = value;\n                this.setState({customFields});\n            } else {\n                customFields[name] = value;\n                this.setState({customFields});\n            }\n        }\n    };\n\n    handleChangeCustomDateTimeFields = (name, value) => {\n        let dateFormat = /^[0-9\\s\\-:]+$/;\n        if (value.length > 0 && (!value.match(dateFormat) || !moment(value, \"YYYY-MM-DD HH:mm:ss\", true).isValid())) {\n            this.setState({dateValidation: false});\n            return;\n        }\n        if (value && value.toString().length) {\n            value = value.format(\"YYYY-MM-DD HH:mm:ss\").toString();\n        }\n        let customFields = this.state.customFields;\n        customFields[name] = value;\n        this.setState({customFields, dateValidation: true});\n    };\n\n    handleBooleanFields = (name, e) => {\n        let customFields = this.state.customFields;\n        customFields[name] = e.target.checked;\n        this.setState({customFields});\n    };\n\n    validateClass(id) {\n        let error = this.state.error;\n        return (error[id] === undefined ? \"\" : (error[id].valid ? \" has-success\" : \" has-danger\"));\n    }\n\n    validateEmail(e) {\n        let { value } = e.target;\n        const turkishCharacterPattern = /[şŞıİçÇöÖüÜĞğ]/g;\n\n        if (value.match(turkishCharacterPattern)) {\n            let error = this.state.error;\n            error[\"cEmail\"] = {\n                \"message\": \"E-posta Türkçe karakter içeremez.\",\n                \"valid\": false\n            };\n            this.setState({ error });\n            Alert.error('E-posta Türkçe karakter içeremez.', {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000,\n                html: false\n            });\n        } else {\n            let error = this.state.error;\n            delete error[\"cEmail\"];\n            this.setState({ error });\n        }\n    }\n\n    generateJobTitle = () => {\n        let {employee, jobTitle} = this.state;\n        employee.jobTitle = jobTitle.label;\n        this.setState({employee});\n    }\n    isEmailSelected(notificationTypeList) {\n        return Array.isArray(notificationTypeList) &&\n            notificationTypeList.some(item => item.ntfType && item.ntfType.longCode === 'EMAIL');\n    }\n\n    handleSaveClick = () => {\n        let { employee } = this.state;\n        employee = this.setDepartmentInfo({ ...employee });\n\n        // Telefon numarası kontrolü\n        if (!this.isPhoneNumberValid(employee.telephone)) {\n            Alert.warning(\"Lütfen geçerli bir telefon numarası giriniz.\");\n            return;\n        }\n\n        // T.C. kimlik no kontrolü\n        if (!this.isTCValid(employee.tckn)) {\n            Alert.warning(\"Lütfen geçerli bir T.C. Kimlik numarası giriniz.\");\n            return;\n        }\n\n        // Bildirim türü kontrolü\n        if (!this.isBildTuruSelected(employee.employeeNotificationTypeList)) {\n            Alert.warning(\"Lütfen en az bir bildirim türü seçiniz.\");\n            return;\n        }\n\n        const emailSelected = this.isEmailSelected(employee.employeeNotificationTypeList);\n        if (emailSelected && (!employee.email || employee.email.trim() === '')) {\n            Alert.warning(\"E-posta bildirimi seçili iken e-Posta alanı boş bırakılamaz.\");\n            return;\n        }\n\n\n        // Departman kontrolü\n        if (!this.isDepartmanSelected(employee.department)) {\n            Alert.warning(\"Lütfen departman bilgisini giriniz.\");\n            return;\n        }\n\n        // Tüm kontroller geçti, şimdi kayıt başlatılabilir\n        this.setState({ isLoading: true, isDisabled: true }, () => {\n            this.saveClicked();\n        });\n    };\n\n    isDepartmanSelected(department) {\n        return department && department.id;\n    }\n\n    isBildTuruSelected(notificationTypeList) {\n        return Array.isArray(notificationTypeList) && notificationTypeList.length > 0;\n    }\n\n    isPhoneNumberValid(phone) {\n        return phone && phone.length === 10;\n    }\n\n    isTCValid(tckn) {\n        return tckn && tckn.length === 11;\n    }\n\n\n    saveClicked() {\n        let self = this;\n        this.generateJobTitle();\n        let employee = self.setDepartmentInfo(self.state.employee);\n        employee.employeeGroups = self.state.selectedEmpGroupList;\n        employee = self.setExpenditureDepInfo(employee);\n        let result = isValidEmployee(self, employee);\n        let error = result.error;\n        let valid = result.valid;\n        if (!self.state.dateValidation) {\n            valid = false;\n            result = { errorMessage: \"Girilen tarih bilgisi formata uygun değildir.\" };\n        }\n\n        if (valid) {\n            let params = {\n                url: `/employee/saveEmployee`,\n                method: \"post\",\n                data: {\n                    employee: employee,\n                    departmentMandatory: isDepartmentMandatory(self),\n                    kepAddressUnique: isKepAddressUnique(self),\n                    customFields: JSON.stringify(self.state.customFields),\n                },\n            };\n            self.setState({ btnDisabled: true, isLoading: true });\n            requestK(params)\n                .then(function (response) {\n                    let message = response.data;\n                    self.setState({ btnDisabled: false, isLoading: false });\n                    Alert.success(message, {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000,\n                    });\n                    if (!employee.id && self.props.checkIfRegistryManual) {\n                        self.props.checkIfRegistryManual();\n                    }\n                    self.props.toggleModal(false, true);\n                })\n                .catch(function (error) {\n                    showAxiosError(error);\n                    self.setState({ btnDisabled: false, isLoading: false, isDisabled: false });\n                });\n        } else {\n            Alert.error(result.errorMessage, {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 8000,\n            });\n            self.setState({ error: error, isDisabled: false });\n        }\n    }\n\n    setDepartmentInfo(employee) {\n        if (this.state.department) {\n            employee.department = {id: parseInt(this.state.department.value), name: this.state.department.label};\n        }\n        return employee;\n    }\n\n    setExpenditureDepInfo(employee) {\n        if (this.state.expenditureDep) {\n            employee.expenditureDepartment = {\n                id: parseInt(this.state.expenditureDep.value),\n                name: this.state.expenditureDep.label\n            };\n        }\n        return employee;\n    }\n\n    getNtfTypeList() {\n        return this.state.employee && this.state.employee.employeeNotificationTypeList ? this.state.employee.employeeNotificationTypeList.map(ntfType => (JSON.stringify(ntfType.ntfType))) : [];\n    }\n\n    getEmployeeGroupList = () => {\n        let self = this;\n        let selectedGroupList = [];\n        self.state.employee.employeeGroups.map(employeeGroup => (selectedGroupList.push({\n            value: employeeGroup.group.id,\n            label: employeeGroup.group.name,\n            group: employeeGroup.group\n        })));\n        let selectedEmpGroupList = self.state.employee.employeeGroups;\n        self.setState({selectedGroupList, selectedEmpGroupList});\n    }\n\n    onChangeNtfTypeList(e) {\n        let result = e.map(ntfType => ({recordId: null, ntfType: JSON.parse(ntfType.value)}));\n        let employee = this.state.employee;\n        employee.employeeNotificationTypeList = result;\n        this.setState({employee});\n    }\n\n    onChangeGroupList(e) {\n        let self = this;\n        let employee = self.state.employee;\n        let selectedGroupList = [];\n        let selectedEmpGroupList = [];\n        e.forEach(selected => {\n            let existEmpGroup = employee?.employeeGroups?.find(empGroup => (empGroup.group.id === selected.group.id));\n            if (existEmpGroup) {\n                selectedEmpGroupList.push(existEmpGroup);\n            } else {\n                selectedEmpGroupList.push({id: null, \"group\": selected.group})\n            }\n        });\n\n        selectedEmpGroupList.map(selected => (selectedGroupList.push({\n            value: selected.group.id,\n            label: selected.group.name,\n            group: selected.group\n        })));\n        self.setState({selectedGroupList, selectedEmpGroupList});\n    }\n\n    onExpenditureDepChange(dept) {\n        if (dept) {\n            this.setState({expenditureDep: dept});\n        } else {\n            this.setState({expenditureDep: {value: null, label: null}});\n        }\n    }\n\n    onDepartmentChange(dept) {\n        if (this.state.manager && this.state.manager.value) {\n            this.setState({\n                alert: (\n                    <SweetAlert warning\n                                confirmBtnText=\"Tamam\"\n                                confirmBtnBsStyle=\"error\"\n                                title=\"Uyarı\"\n                                onConfirm={() => {\n                                    this.setState({alert: null});\n                                }\n                                }>\n                        Yönetici bilgisini kontrol edin!\n                    </SweetAlert>\n                )\n            });\n        }\n        if (dept) {\n            this.setState({department: dept});\n        } else {\n            this.setState({department: {value: null, label: null}});\n        }\n    }\n\n    onManagerChange(data) {\n        this.handleChange({\n            target: {\n                name: 'parentUserId',\n                value: data && data.value\n            }\n        });\n        this.setState({manager: data})\n    }\n\n    onSecondManagerChange(data) {\n        this.handleChange({\n            target: {\n                name: 'secondParentUserId',\n                value: data && data.value\n            }\n        });\n        this.setState({secondManager: data})\n    }\n    onThirdManagerChange(data) {\n        this.handleChange({\n            target: {\n                name: 'thirdParentUserId',\n                value: data && data.value\n            }\n        });\n        this.setState({thirdManager: data})\n    }\n    onChangeOnJobTitle(jobTitle) {\n        if (jobTitle) {\n            this.setState({jobTitle: jobTitle});\n        } else {\n            this.setState({jobTitle: {value: 0, label: \"\"}});\n        }\n    }\n\n    hasGrant = (grant) => {\n        return this.props.hasGrant(grant);\n    };\n\n    render() {\n        return <DefaultModal\n            isOpen={this.props.modal}\n            hasGrant={this.props.hasGrant}\n            fade={false}\n            size=\"lg\"\n            closeOnEsc={false}\n            title=\"Çalışan Ekle/Düzenle Ekranı\"\n            confirmBtnText={\n                <span>\n                    {this.state.isLoading ? (\n                        <>\n                            KAYDEDİLİYOR\n                            <span className=\"spinner\"></span>\n                        </>\n                    ) : (\n                        \"KAYDET\"\n                    )}\n                </span>\n            }\n            confirmButtonStyle={{\n                cursor: this.state.isLoading ? \"not-allowed\" : \"pointer\",\n                opacity: this.state.isLoading ? 0.6 : 1,\n            }}\n            cancelBtnText=\"Kapat\"\n            onConfirm={!this.state.isLoading ? this.handleSaveClick : null}\n            onCancel={() => this.props.toggleModal(false, false)}\n        >\n            <div style={{marginTop: '20px'}}>\n                <Form>\n                    <div className=\"FormRenk\" style={{marginBottom: '10px', paddingLeft: '20px', paddingRight: '20px'}}>\n                        <label style={{fontWeight: 'bold', display: 'block'}}>\n                            Genel:\n                        </label>\n                        {this.renderInput(\"Ad *\", \"name\")}\n                        {this.renderInput(\"Soyad *\", \"surname\")}\n                        {this.renderInputInteger(\"TCKN *\", \"tckn\", 11, this.props.id !== null)}\n\n                        {isDepartmentMandatory(this) &&\n                            <FormGroup row className={this.validateClass(\"department\")}>\n                                <Label sm={4}>Departman *</Label>\n                                <Col sm={8}>\n                                    <AutoCompleteList name={\"Departman\"}\n                                                      useUpperCase={false} onlyLabel={false} allowNew={false}\n                                                      list={this.state.departmentList}\n                                                      value={this.state.department}\n                                                      onChange={e => this.onDepartmentChange(e)}\n                                                      updateList={e => this.setState({departmentList: e})}\n                                                      placeholder={\"Departman Seçiniz veya Departman Adı Yazınız...\"}\n                                    />\n                                </Col>\n                            </FormGroup>\n                        }\n                        {isDepartmentMandatory(this) &&\n                            <FormGroup row className={this.validateClass(\"jobTitle\")}>\n                                <Label sm={4}>{\"Görev\"}</Label>\n                                <Col sm={8}>\n                                    <AutoCompleteList name={\"Görev\"}\n                                                      useUpperCase={false} onlyLabel={false} allowNew={true}\n                                                      list={this.state.jobTitles}\n                                                      value={this.state.jobTitle}\n                                                      onChange={e => this.onChangeOnJobTitle(e)}\n                                                      updateList={e => this.setState({jobTitles: e})}\n                                                      placeholder={\"Görev Seçiniz veya Görev Adı Yazınız...\"}\n                                    />\n                                </Col>\n                            </FormGroup>\n                        }\n\n                        {isDepartmentMandatory(this) &&\n                            <FormGroup row className={this.validateClass(\"manager\")}>\n                                <Label sm={4}>Bağlı Olduğu Yönetici</Label>\n                                <Col sm={8}>\n                                    <Select.Async multi={false}\n                                                  ignoreAccents={false}\n                                                  value={this.state.manager}\n                                                  onChange={(e) => this.onManagerChange(e)}\n                                                  isLoading={true}\n                                                  autoload={false}\n                                                  cache={false}\n                                                  clearable={true}\n                                                  filterOptions={(options) => options}\n                                                  noResultsText=\"Kayıt bulunamadı.\"\n                                                  searchPromptText=\"Arama için en az 2 karakter giriniz.\"\n                                                  placeholder=\"İsim veya soyisim ile ara...\"\n                                                  loadingPlaceholder=\"Yükleniyor...\"\n                                                  clearValueText=\"Seçimi kaldır\"\n                                                  loadOptions={getEmployees}\n                                                  disabled={this.state.isDisabled} />\n                                </Col>\n                            </FormGroup>\n                        }\n                        {isDepartmentMandatory(this) &&\n                            <FormGroup row className={this.validateClass(\"manager\")}>\n                                <Label sm={4}>Bağlı Olduğu 2. Yönetici</Label>\n                                <Col sm={8}>\n                                    <Select.Async multi={false}\n                                                  ignoreAccents={false}\n                                                  value={this.state.secondManager}\n                                                  onChange={(e) => this.onSecondManagerChange(e)}\n                                                  isLoading={true}\n                                                  autoload={false}\n                                                  cache={false}\n                                                  clearable={true}\n                                                  filterOptions={(options) => options}\n                                                  noResultsText=\"Kayıt bulunamadı.\"\n                                                  searchPromptText=\"Arama için en az 2 karakter giriniz.\"\n                                                  placeholder=\"İsim veya soyisim ile ara...\"\n                                                  loadingPlaceholder=\"Yükleniyor...\"\n                                                  clearValueText=\"Seçimi kaldır\"\n                                                  loadOptions={getEmployees}\n                                                  disabled={this.state.isDisabled} />\n                                </Col>\n                            </FormGroup>\n                        }\n                        {isDepartmentMandatory(this) &&\n                            <FormGroup row className={this.validateClass(\"manager\")}>\n                                <Label sm={4}>Bağlı Olduğu 3. Yönetici</Label>\n                                <Col sm={8}>\n                                    <Select.Async multi={false}\n                                                  ignoreAccents={false}\n                                                  value={this.state.thirdManager}\n                                                  onChange={(e) => this.onThirdManagerChange(e)}\n                                                  isLoading={true}\n                                                  autoload={false}\n                                                  cache={false}\n                                                  clearable={true}\n                                                  filterOptions={(options) => options}\n                                                  noResultsText=\"Kayıt bulunamadı.\"\n                                                  searchPromptText=\"Arama için en az 2 karakter giriniz.\"\n                                                  placeholder=\"İsim veya soyisim ile ara...\"\n                                                  loadingPlaceholder=\"Yükleniyor...\"\n                                                  clearValueText=\"Seçimi kaldır\"\n                                                  loadOptions={getEmployees}\n                                                  disabled={this.state.isDisabled} />\n                                </Col>\n                            </FormGroup>\n                        }\n                        {this.state.loading && (\n                            <ReactLoading\n                                type=\"spinningBubbles\"\n                                style={{width: \"60px\", height: \"60px\", margin: \"20px auto 0 auto\", fill: \"#888\"}}/>)}\n                        {!this.props.isKepOwner &&\n                            <FormGroup row className={this.validateClass(\"employeeNtfResultList\")}>\n                                <Label sm={4}>Bildirim Türleri *</Label>\n                                <Col sm={8}>\n                                    <Select\n                                        className=\"select-control\"\n                                        name=\"employeeNtfResultList\"\n                                        id=\"employeeNtfResultList\"\n                                        multi={true}\n                                        placeholder=\"Seçiniz...\"\n                                        noResultsText={\"Veri yok\"}\n                                        value={this.getNtfTypeList()}\n                                        onChange={(e) => e && this.onChangeNtfTypeList(e)}\n                                        options={this.state.ntfTypeList && this.state.ntfTypeList.map(ntfType => ({\n                                            value: JSON.stringify(ntfType),\n                                            label: ntfType.longCode\n                                        }))}\n                                        disabled={this.state.isDisabled}\n                                    />\n                                </Col>\n                            </FormGroup>}\n                        {this.props.isKepOwner &&\n                            this.renderInput(\"KEP Adresi *\", \"kepAddress\")}\n                        <FormGroup row className={this.validateClass(\"telephone\")}>\n                            <Label sm={4}>Telefon Numarası *</Label>\n                            <Col sm={8}>\n\n                                <MaskedInput\n                                    className=\"form-control\"\n                                    mask={['0', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                    style={{textAlign: \"left\"}}\n                                    type=\"text\"\n                                    placeholder=\"(5xx) xxx-xxxx\"\n                                    name=\"telephone\"\n                                    value={this.state.employee.telephone}\n                                    size=\"10\"\n                                    onChange={(e) => this.handleChangeInteger(e)}\n                                    disabled={this.state.isDisabled}\n                                />\n                            </Col>\n                        </FormGroup>\n\n                        <FormGroup row className={this.validateClass(\"cEmail\")}>\n                            <Label sm={4}>{this.getNtfTypeList().filter(v => v.includes('EMAIL')).length === 1  ? 'e-Posta' + ' *' : 'e-Posta'}</Label>\n                            <Col sm={8}>\n                                <MaskedInput\n                                    className=\"form-control\"\n                                    mask={emailMask}\n                                    placeholder=\"_________@______.___\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    inputProps={{ vdata: \"email\", vlength: '1,255' }}\n                                    id=\"cEmail\"\n                                    ref=\"cEmail\"\n                                    onBlur={(e) => this.validateEmail(e)}\n                                    value={this.state.employee.email}\n                                    onChange={(e) => this.handleChange(e)}\n                                    disabled={this.state.isDisabled}\n                                />\n                                {this.validateMessage('cEmail') !== \"\" &&\n                                    <UncontrolledTooltip placement=\"right\" target=\"cEmail\" delay={0}>\n                                        {this.validateMessage(\"cEmail\")}\n                                    </UncontrolledTooltip>}\n                            </Col>\n                        </FormGroup>\n\n                        <FormGroup row className={this.validateClass(\"statusType\")}>\n                            <Label sm={4}>Durumu</Label>\n                            <Col sm={8}>\n                                <Select\n                                    placeholder=\"Seçiniz...\"\n                                    value={this.state.employee.statusType ? this.state.employee.statusType : 'ACTIVE'}\n                                    clearable={false}\n                                    options={statusTypeSetData()}\n                                    noResultsText={\"Veri yok\"}\n                                    onChange={(e) => {\n                                        this.handleChange({\n                                            target: {\n                                                name: 'statusType',\n                                                value: (e && e.value) ? e.value : 'ACTIVE'\n                                            }, e\n                                        });\n                                    }}\n                                    disabled={this.state.isDisabled}\n                                />\n                            </Col>\n                        </FormGroup>\n                        {this.renderInput(\"Entegrasyon Kodu\", \"integrationCode\")}\n                        <FormGroup row className={this.validateClass(\"employmentContract\")}>\n                            <Label sm={4}>İş Sözleşmesi Türü</Label>\n                            <Col sm={8}>\n                                <Select value={this.state.employee.employmentContract}\n                                        clearable={false}\n                                        options={employmentContractData()}\n                                        placeholder=\"Seçiniz...\"\n                                        noResultsText={\"Veri yok\"}\n                                        onChange={(e) => {\n                                            this.handleChange({\n                                                target: {\n                                                    name: \"employmentContract\",\n                                                    value: (e && e.value) ? e.value : 'UNDECLARED'\n                                                }, e\n                                            });\n                                        }}\n                                        disabled={this.state.isDisabled}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row className={this.validateClass(\"salary\")}>\n                            <Label sm={4}>Ücret</Label>\n                            {this.hasGrant(SEE_SALARY_DATA) ?\n                                <Col sm={8}>\n                                    <NumberFormat\n                                        placeholder=\"0,00\"\n                                        isNumericString={true}\n                                        value={this.state.employee.salary}\n                                        onValueChange={(e) => this.handleSalaryDouble(e)}\n                                        sm={12}\n                                        suffix={' ₺'}\n                                        style={{textAlign: 'right'}}\n                                        thousandSeparator={'.'} decimalSeparator={','}\n                                        displayType=\"input\"\n                                        allowNegative={false}\n                                        decimalScale={2}\n                                        disabled={this.state.isDisabled}\n                                    />\n                                </Col> :\n                                <Col sm={8}>\n                                    <Input type=\"text\" name={\"salary\"}\n                                           value={\"********\"}\n                                    />\n                                </Col>\n                            }\n                        </FormGroup>\n                        <FormGroup row className={this.validateClass(\"vip\")}>\n                            <Label sm={4}>VIP</Label>\n                            <Col sm={8}>\n                                <input type=\"checkbox\" name=\"vip\"\n                                       checked={this.state.employee.vip}\n                                       onChange={(e) => this.handleChange(e)}\n                                       disabled={this.state.isDisabled}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row className={this.validateClass(\"expenditure\")}>\n                            <Label sm={4}>Masraf Yeri </Label>\n                            <Col sm={8}>\n                                <AutoCompleteList name={\"Masraf Yeri\"}\n                                                  useUpperCase={false} onlyLabel={false} allowNew={false}\n                                                  list={this.state.expenditureDepList}\n                                                  value={this.state.expenditureDep}\n                                                  onChange={e => this.onExpenditureDepChange(e)}\n                                                  updateList={e => this.setState({expenditureDepList: e})}\n                                                  placeholder={\"Masraf Yeri Seçiniz veya Masraf Yeri Adı Yazınız...\"}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row className={this.validateClass(\"groups\")}>\n                            <Label sm={4}>Gruplar</Label>\n                            <Col sm={8}>\n                                <Select\n                                    className=\"select-control\"\n                                    name=\"groups\"\n                                    id=\"groups\"\n                                    multi={true}\n                                    placeholder=\"Seçiniz...\"\n                                    value={this.state.selectedGroupList}\n                                    onChange={(e) => e && this.onChangeGroupList(e)}\n                                    options={this.state.groupList}\n                                    noResultsText={\"Henüz kaydedilmiş veri yok\"}\n                                    disabled={this.state.isDisabled}\n                                />\n                            </Col>\n                        </FormGroup>\n                        {this.state.employee.statusType === 'PASSIVE' &&\n                            <FormGroup row className={this.validateClass(\"passiveEndDate\")}>\n                                <Label sm={4}>Pasif Durumunun Biteceği Tarih</Label>\n                                <Col sm={8}>\n                                    <Datetime locale=\"tr\"\n                                              className=\"datepicker\"\n                                              input={true}\n                                              closeOnSelect={true}\n                                              inputProps={{disabled: this.state.employee.statusType !== 'PASSIVE' || this.state.isDisabled}}\n                                              value={\n                                                  moment(this.state.employee.passiveEndDate, \"YYYY-MM-DD\", true).isValid() ?\n                                                      moment(this.state.employee.passiveEndDate).format(\"DD-MM-YYYY\") :\n                                                      this.state.employee.passiveEndDate\n                                              }\n                                              isValidDate={function (current) {\n                                                  return current.startOf('date').isAfter(Datetime.moment().startOf('date'));\n                                              }}\n                                              dateFormat=\"DD-MM-YYYY\"\n                                              timeFormat={false}\n                                              onChange={e => {\n                                                  this.handleChange({\n                                                      target: {\n                                                          name: 'passiveEndDate',\n                                                          value: (e && moment(e).isValid()) ? e.format(\"YYYY-MM-DD\") : null\n                                                      }\n                                                  });\n                                              }}\n                                    />\n                                </Col>\n                            </FormGroup>\n                        }\n                        {this.state.employee.statusType === 'PASSIVE' &&\n                            <FormGroup row className={this.validateClass(\"reason\")}>\n                                <Label sm={4}>Pasif Durumun Gerekçesi</Label>\n                                <Col sm={8}>\n                                    <Select value={this.state.employee.reason}\n                                            clearable={false}\n                                            disabled={this.state.employee.statusType !== 'PASSIVE' || this.state.isDisabled}\n                                            options={statusReasonData()}\n                                            placeholder=\"Seçiniz...\"\n                                            onChange={(e) => {\n                                                this.handleChange({\n                                                    target: {\n                                                        name: \"reason\",\n                                                        value: (e && e.value) ? e.value : null\n                                                    }\n                                                });\n                                            }}\n                                    />\n                                </Col>\n                            </FormGroup>\n                        }\n                    </div>\n                    <div className=\"FormRenk\" style={{paddingLeft: '20px', paddingRight: '20px'}}>\n                        <label style={{fontWeight: 'bold', display: 'block'}}>\n                            Detay:\n                        </label>\n                        <Row>\n                            <Col sm={6}>\n                                <FormGroup row className={this.validateClass(\"employmentStartDate\")}\n                                           style={{marginTop: '-2px'}}>\n                                    <Label sm={4} style={{fontSize: '11px'}}>İşe Başlama Tarihi</Label>\n                                    <Col sm={8}>\n                                        <Datetime locale=\"tr\"\n                                                  className=\"datepicker\"\n                                                  input={true}\n                                                  closeOnSelect={true}\n                                                  value={\n                                                      moment(this.state.employee.employmentStartDate, \"YYYY-MM-DD\", true).isValid() ?\n                                                          moment(this.state.employee.employmentStartDate).format(\"DD-MM-YYYY\") :\n                                                          this.state.employee.employmentStartDate\n                                                  }\n                                                  dateFormat=\"DD-MM-YYYY\"\n                                                  timeFormat={false}\n                                                  onChange={e => {\n                                                      this.handleChange({\n                                                          target: {\n                                                              name: 'employmentStartDate',\n                                                              value: (e && moment(e, \"YYYY-MM-DD\", true).isValid()) ? moment(e).format(\"YYYY-MM-DD\") : null\n                                                          }\n                                                      });\n                                                  }}\n                                                  disabled={this.state.isDisabled}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                            </Col>\n                            {this.renderInputSmaller(\"Çalışma Şekli\", \"employmentStatus\")}\n                        </Row>\n                        <Row>\n                            {this.renderInputSmallerDouble(\"Yıllık İzin Hakkı\", \"remainingAnnualVacation\", 5)}\n                            {this.renderInputSmallerDouble(\"Mazeret İzin Hakkı\", \"remainingExcuseVacation\", 5)}\n                        </Row>\n                        <Row>\n                            <Col sm={6}>\n                                <FormGroup row className={this.validateClass(\"gender\")}>\n                                    <Label sm={4} style={{fontSize: '11px'}}>Cinsiyet</Label>\n                                    <Col sm={8}>\n                                        <Select value={this.state.employee.gender}\n                                                clearable={false}\n                                                options={genderData()}\n                                                placeholder=\"Seçiniz...\"\n                                                noResultsText={\"Veri Yok\"}\n                                                onChange={(e) => {\n                                                    this.handleChange({\n                                                        target: {\n                                                            name: \"gender\",\n                                                            value: (e && e.value && e.value !== ' ') ? e.value : null\n                                                        }\n                                                    });\n                                                }}\n                                                disabled={this.state.isDisabled}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                            </Col>\n                            {this.renderInputSmaller(\"Adres\", \"address\")}\n                        </Row>\n                        <Row>\n                            <Col sm={6}>\n                                <FormGroup row className={this.validateClass(\"dateOfBirth\")}\n                                           style={{marginTop: '-2px'}}>\n                                    <Label sm={4} style={{fontSize: '11px'}}>Doğum Tarihi</Label>\n                                    <Col sm={8}>\n                                        <Datetime locale=\"tr\"\n                                                  className=\"datepicker\"\n                                                  input={true}\n                                                  closeOnSelect={true}\n                                                  value={\n                                                      moment(this.state.employee.dateOfBirth, \"YYYY-MM-DD\", true).isValid() ?\n                                                          moment(this.state.employee.dateOfBirth).format(\"DD-MM-YYYY\") :\n                                                          this.state.employee.dateOfBirth\n                                                  }\n                                                  dateFormat=\"DD-MM-YYYY\"\n                                                  timeFormat={false}\n                                                  onChange={e => {\n                                                      this.handleChange({\n                                                          target: {\n                                                              name: 'dateOfBirth',\n                                                              value: (e && moment(e, \"YYYY-MM-DD\", true).isValid()) ? moment(e).format(\"YYYY-MM-DD\") : null\n                                                          }\n                                                      });\n                                                  }}\n                                                  disabled={this.state.isDisabled}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                            </Col>\n                            {this.renderInputSmaller(\"Doğum Yeri\", \"cityOfBirth\")}\n                        </Row>\n                        <Row>\n                            {this.renderInputSmaller(\"Eğitim Durumu\", \"educationLevel\")}\n                            {this.renderInputSmaller(\"Askerlik Durumu\", \"militaryStatus\")}\n                        </Row>\n                        {this.props.titleList && !!this.props.titleList.length &&\n                            this.renderCustomFields()}\n                    </div>\n                </Form>\n                {this.state.alert}\n            </div>\n        </DefaultModal>\n    }\n\n    renderCustomFields() {\n        let prevKey = \"\";\n\n        return this.props.titleList.map((key, index) => {\n            if (index % 2 === 1) {\n                return (\n                    <Row>\n                        {this.renderCustomInputSmaller(prevKey.title, prevKey.type, this.state.customFields[prevKey.title])}\n                        {this.renderCustomInputSmaller(key.title, key.type, this.state.customFields[key.title])}\n                    </Row>\n                );\n            } else if (index === (this.props.titleList.length - 1)) {\n                return (\n                    <Row>\n                        {this.renderCustomInputSmaller(key.title, key.type, this.state.customFields[key.title])}\n                    </Row>\n                );\n            } else {\n                prevKey = key;\n            }\n        })\n    }\n\n    renderInput(label, fieldName) {\n        return (\n            <FormGroup row className={this.validateClass(fieldName)}>\n                <Label sm={4}>{label}</Label>\n                <Col sm={8}>\n                    <Input\n                        type=\"text\"\n                        name={fieldName}\n                        value={this.state.employee[fieldName] || ''}\n                        onChange={(e) => this.handleChange(e)}\n                        disabled={this.state.isDisabled}\n                    />\n                </Col>\n            </FormGroup>\n        );\n    }\n\n    renderInputInteger(label, fieldName, maxLength, readOnly = false) {\n        return (\n            <FormGroup row className={this.validateClass(fieldName)}>\n                <Label sm={4}>{label}</Label>\n                <Col sm={8}>\n                    <Input\n                        type=\"text\"\n                        name={fieldName}\n                        maxLength={maxLength}\n                        disabled={this.state.isDisabled || readOnly}\n                        value={this.state.employee[fieldName] || ''}\n                        onChange={(e) => {\n                            this.handleChangeInteger(e)\n                        }}\n                    />\n                </Col>\n            </FormGroup>\n        );\n    }\n\n    renderInputSmaller(label, fieldName) {\n        return <Col sm={6}>\n            <FormGroup row className={this.validateClass(fieldName)}>\n                <Label sm={4} style={{fontSize: '11px'}}>{label}</Label>\n                <Col sm={8}>\n                    <Input type=\"text\" name={fieldName}\n                           value={this.state.employee[fieldName] || ''}\n                           onChange={(e) => {\n                               this.handleChange(e)\n                           }}\n                           disabled={this.state.isDisabled}\n                    />\n                </Col>\n            </FormGroup>\n        </Col>;\n    }\n\n    renderInputSmallerDouble(label, fieldName, maxLength) {\n        return <Col sm={6}>\n            <FormGroup row className={this.validateClass(fieldName)}>\n                <Label sm={4} style={{fontSize: '11px'}}>{label}</Label>\n                <Col sm={8}>\n                    <Input type=\"text\" name={fieldName} maxLength={maxLength}\n                           value={this.state.employee[fieldName] || ''}\n                           onChange={(e) => {\n                               this.handleChangeDouble(e)\n                           }}\n                           disabled={this.state.isDisabled}\n                    />\n                </Col>\n            </FormGroup>\n        </Col>;\n    }\n\n    renderCustomInputSmaller(label, type, value) {\n        return <Col sm={6}>\n            <FormGroup row>\n                <Label sm={4} style={{fontSize: '11px'}}>{label}</Label>\n                <Col sm={8}>{type !== \"DATETIME\" && type !== \"BOOLEAN\" && type !== \"DOUBLE\" &&\n                    <Input type=\"text\" name={label}\n                           value={value || ''}\n                           onChange={(e) => {\n                               this.handleChangeCustomFields(e, type)\n                           }}\n                           disabled={this.state.isDisabled}\n                    />}\n                    {type === \"DATETIME\" &&\n                        <Datetime locale=\"tr\"\n                                  className=\"datepicker\"\n                                  input={true}\n                                  closeOnSelect={true}\n                                  value={moment(value, \"YYYY-MM-DD HH:mm:ss\", true).isValid() ? moment(value).format(\"DD-MM-YYYY HH:mm:ss\") : value}\n                                  dateFormat=\"DD-MM-YYYY\"\n                                  timeFormat=\"HH:mm:ss\"\n                                  onChange={(e) => this.handleChangeCustomDateTimeFields(label, e)}\n                                  disabled={this.state.isDisabled}\n                        />}\n                    {type === \"BOOLEAN\" &&\n                        <Label check>\n                            <Input type=\"checkbox\" checked={customFieldsBooleanControl(value)}\n                                   onClick={(e) => this.handleBooleanFields(label, e)}\n                                   disabled={this.state.isDisabled}\n                            />\n                        </Label>\n                    }\n                    {type === \"DOUBLE\" &&\n                        <NumberFormat\n                            placeholder=\"0,00\"\n                            isNumericString={true}\n                            value={value}\n                            onValueChange={(e) =>this.handleChangeCustomDoubleFields(e, type,label)}\n                            sm={12}\n                            style={{textAlign: 'right'}}\n                            thousandSeparator={'.'}\n                            decimalSeparator={','}\n                            displayType=\"input\"\n                            allowNegative={true}\n                            name={label}\n                            id={\"numberFormat-component\"}\n                            className=\"form-control\"\n                            disabled={this.state.isDisabled}\n                        />\n                    }\n                </Col>\n            </FormGroup>\n        </Col>;\n    }\n}\n\nexport default CreateEditEmployeeModal;\n","import React, {Component} from 'react';\nimport 'moment/locale/tr';\nimport {Col, Input, Row} from 'reactstrap';\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport DefaultModal from \"../../../../components/DefaultModal\";\nimport Alert from \"react-s-alert\";\nimport {Decimal} from 'decimal.js';\nimport TextOverFlowTooltip from \"../../../../components/TextOverFlowTooltip\";\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Joyride from \"react-joyride\";\n\nclass UploadBordroFileModal extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: [],\n      index: 0,\n      process: false,\n      realIndex: 0,\n      year: null,\n      month: null,\n      disableZone: false,\n      steps: [\n        {\n          target: '.modal-content',\n          content: \"Çalışanlarınıza ücret bordrosu gönderimi yapmak için, toplu veya ayrı ayrı olan ücret bordrolarını pdf veya xlsx uzantılı olarak yükleme yapınız.\",\n          placement: \"center\",\n        },\n        {\n          target: '.form-control',\n          content: \"Bordro dönemini buradan seçebilirsiniz.\",\n          placement: \"auto\",\n        },\n        {\n          target: '.dropzoneInnerArea',\n          content: 'Ücret bordrolarınızı sürükle-bırak veya bu alana tıklayarak yükleyebilirsiniz.',\n          placement: \"auto\",\n        },\n        {\n          target: '.kaydet',\n          content: 'Dönem ve yüklenecek dosyalar seçildikten sonra yüklemeyi başlatabilirsiniz.',\n          placement: \"auto\",\n        }\n      ],\n      steps2: [\n        {\n          target: '.modal-content',\n          content: \"Seçilen bordro dönemine dosya eklemesi yapmak için, toplu veya ayrı ayrı olan ücret bordrolarını pdf veya xlsx uzantılı olarak yükleme yapınız.\",\n          placement: \"center\",\n        },\n        {\n          target: '.dropzoneInnerArea',\n          content: 'Ücret bordrolarınızı sürükle-bırak veya bu alana tıklayarak yükleyebilirsiniz.',\n          placement: \"auto\",\n        },\n        {\n          target: '.kaydet',\n          content: 'Yüklenecek dosyalar seçildikten sonra yüklemeyi başlatabilirsiniz.',\n          placement: \"auto\",\n        }\n      ],\n      locale: {\n        back: 'Geri',\n        close: 'Kapat',\n        last: 'Son',\n        next: 'İleri',\n        skip: 'Atla',\n      },\n      joyrideActive: false,\n      shouldRun: true,\n    };\n    this.onDrop = this.onDrop.bind(this);\n    this.callback = this.callback.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.changeLocation = this.changeLocation.bind(this);\n    this.sendNextBordroFile = this.sendNextBordroFile.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.removeMonth === true && !!this.state.sessionMonth) {\n      this.setState({sessionMonth: null});\n      this.props.setRemoveMonthOff();\n    }\n  }\n\n  zipAndUploadFiles = () => {\n    let self = this;\n    let fileList = self.state.fileList;\n    const zip = require('jszip')();\n    fileList.forEach(file => {\n      zip.file(file.name, file.content);\n    });\n    zip.generateAsync({\n      type: 'arrayBuffer',\n      compression: 'DEFLATE',\n      compressionOptions: {\n        level: 9\n      }\n    }).then(content => {\n      let file = {\n        content:\n          new File(\n            [new Blob([content], {type: \"application/zip\"})],\n            \"yuklenenDokumanlar.zip\",\n            {type: \"application/zip\", lastModified: Date.now()}),\n        name: \"zipFile.zip\",\n        size: 1};\n      fileList = [];\n      fileList.push(file);\n      let formData = new FormData();\n      let methodCall;\n\n      if (self.props.newSession) {\n        formData.append(\"content\", file.content);\n        formData.append(\"year\", self.state.sessionMonth.year().toString());\n        formData.append(\"month\", (self.state.sessionMonth.month() + 1).toString());\n        formData.append(\"totalCount\", 1);\n        formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n        methodCall = \"/create\";\n\n      } else {\n        formData.append(\"content\", file.content);\n        formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n        formData.append(\"totalCount\", 1);\n        methodCall = \"/sendNextBordroFile\";\n      }\n\n      let params = {\n        url: `/bordrosession${methodCall}`,\n        method: 'post',\n        cancelToken: self._source.token,\n        data: formData\n      };\n      fileList[0] = {\n        status: \"processing\",\n        statusText: \"Gönderim başlatıldı.\",\n        name: file.name,\n        size: file.size,\n        content: file.content,\n      };\n      self.setState({btnDisabled: true, fileList});\n      requestK(params)\n        .then(function (response) {\n          let document = fileList[0];\n          fileList[0] = {\n            status: \"success\",\n            statusText: \"Gönderim başarılı.\",\n            name: document.name,\n            size: document.size,\n            content: document.content,\n          };\n          self.setState({fileList, id: response.data, btnDisabled: false});\n          self.props.toggleModal(true, true);\n          if (self.props.newSession) {\n            self.props.toggleModal(false, true);\n            self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n            self.props.loadBordroSession();\n          }\n        })\n        .catch(function (error) {\n          if (!axios.isCancel(error)) {\n            file.status = \"error\";\n            file.statusText = error.data;\n            fileList[0] = {\n              status: \"error\",\n              statusText: error.data,\n              name: file.name,\n              size: file.size,\n              content: file.content,\n            };\n            self.setState({fileList: fileList, btnDisabled: false});\n            showAxiosError(error);\n          }\n        });\n\n    });\n  };\n\n  // sendNextBordroFile() {\n  //   if (this.props.newSession && !moment(this.state.sessionMonth, \"YYYY/MM\", true).isValid()) {\n  //     showAxiosError({message: 'Ücret Bordrosu Dönemi alanına YYYY/AA formatında geçerli bir değer giriniz.'});\n  //   } else {\n  //     this._source = axios.CancelToken.source();\n  //     this.zipAndUploadFiles();\n  //   }\n  // }\n\n  sendNextBordroFile(index, firstCycle, total) {\n    if (this.props.newSession && !moment(this.state.sessionMonth, \"YYYY/MM\", true).isValid()) {\n      showAxiosError({message: 'Ücret Bordrosu Dönemi alanına YYYY/AA formatında geçerli bir değer giriniz.'});\n    } else {\n      let self = this;\n      this._source = axios.CancelToken.source();\n      let fileList = self.state.fileList;\n      let totalCount;\n      if (total === 0)\n        totalCount = fileList.length;\n      else\n        totalCount = total;\n\n      let allPdf = true;\n      let allXlsx = true;\n      for (let i = 0; i < totalCount; i++) {\n        let fileName = fileList[i].name;\n        if (!fileName.toLowerCase().endsWith(\".pdf\")) {\n          allPdf = false;\n        }\n        if (!fileName.toLowerCase().endsWith(\".xlsx\")) {\n          allXlsx = false;\n        }\n      }\n      if (totalCount > 1 && allPdf) {\n        let totalFileSize = 0;\n        fileList.forEach(file => {\n          totalFileSize += file.size;\n        });\n        if(totalFileSize < 75 * 1024 * 1024){\n          let formData = new FormData();\n          fileList.forEach(file => {\n            formData.append(\"files\", file.content);\n          });\n          if (!self.props.id) {\n            formData.append(\"year\", this.state.sessionMonth.year().toString());\n            formData.append(\"month\", (this.state.sessionMonth.month() + 1).toString());\n            formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n          }else{\n            formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n          }\n          let methodCall = \"/createOrSendNextBordroFile\";\n\n          let params = {\n            url: `/bordrosession${methodCall}`,\n            method: 'post',\n            cancelToken: self._source.token,\n            data: formData\n          };\n\n          fileList.forEach((document, index) => {\n            fileList[index] = {\n              status: \"processing\",\n              statusText: \"Gönderim başlatıldı.\",\n              name: document.name,\n              size: document.size,\n              content: document.content,\n            };\n          });\n\n          self.setState({btnDisabled: true, fileList: fileList});\n\n          requestK(params)\n              .then(function (response) {\n                fileList.forEach((document, index) => {\n                  fileList[index] = {\n                    status: \"success\",\n                    statusText: \"Gönderim başarılı.\",\n                    name: document.name,\n                    size: document.size,\n                    content: document.content,\n                  };\n                });\n                self.setState({btnDisabled: false, index: index + 1});\n                if (self.props.newSession) {\n                  self.props.toggleModal(false, true);\n                  self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n                  self.props.loadBordroSession();\n                } else {\n                  if (fileList[index].status === \"success\")\n                    self.props.toggleModalWithTimeout(false, true);\n                }\n                self.load();\n                Alert.success('Tüm dokümanlar kaydedildi.', {\n                  position: 'top-right',\n                  effect: 'stackslide',\n                  timeout: 5000\n                });\n              })\n              .catch(function (error) {\n                if (!axios.isCancel(error)) {\n                  fileList.forEach((document, index) => {\n                    document.status = \"error\";\n                    document.statusText = error.data;\n                    fileList[index] = {\n                      status: \"error\",\n                      statusText: error.data,\n                      name: document.name,\n                      size: document.size,\n                      content: document.content,\n                    };\n                  });\n                  self.setState({fileList, btnDisabled: false});\n                  showAxiosError(error);\n                }\n              });\n        }else{\n          Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n          });\n        }\n\n      } else if(totalCount>1 && !allPdf && allXlsx){\n        Alert.warning('.xlsx olarak sadece bir dosya yüklenebilir.', {\n          position: 'top-right',\n          effect: 'stackslide',\n          timeout: 5000\n        });\n      }else if(totalCount>1 && !allPdf && !allXlsx){\n        Alert.warning('.pdf ve .xlsx dosyaları birlikte yüklenemez.', {\n          position: 'top-right',\n          effect: 'stackslide',\n          timeout: 5000\n        });\n      } else {\n        if (index < fileList.length) {\n          let document1 = fileList[index];\n          if(document1.size< 75 * 1024 * 1024){\n            let formData = new FormData();\n            let methodCall;\n\n            if (self.props.newSession && firstCycle) {\n              formData.append(\"content\", document1.content);\n              formData.append(\"year\", this.state.sessionMonth.year().toString());\n              formData.append(\"month\", (this.state.sessionMonth.month() + 1).toString());\n              formData.append(\"totalCount\", totalCount);\n              formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n              methodCall = \"/create\";\n\n            } else {\n              formData.append(\"content\", document1.content);\n              formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n              formData.append(\"totalCount\", totalCount);\n              methodCall = \"/sendNextBordroFile\";\n            }\n\n            let params = {\n              url: `/bordrosession${methodCall}`,\n              method: 'post',\n              cancelToken: self._source.token,\n              data: formData\n            };\n            fileList[index] = {\n              status: \"processing\",\n              statusText: \"Gönderim başlatıldı.\",\n              name: document1.name,\n              size: document1.size,\n              content: document1.content,\n            };\n            self.setState({btnDisabled: true, fileList: fileList});\n            requestK(params)\n                .then(function (response) {\n                  let document = fileList[index];\n                  fileList[index] = {\n                    status: \"success\",\n                    statusText: \"Gönderim başarılı.\",\n                    name: document.name,\n                    size: document.size,\n                    content: document.content,\n                  };\n                  self.setState({fileList, index: (index + 1)});\n                  firstCycle && self.setState({id: response.data});\n                  if (index + 1 < fileList.length) {\n                    if ((index + 1) % 5 === 0) {\n                      fileList.splice(0, 4);\n                      self.setState({realIndex: (self.state.realIndex + 4)});\n                      self.sendNextBordroFile((index + 1) - 4, false, totalCount);\n                    } else {\n                      self.sendNextBordroFile(index + 1, false, totalCount);\n                    }\n                  } else {\n                    self.setState({btnDisabled: false, index: index + 1});\n                    if (self.props.newSession) {\n                      self.props.toggleModal(false, true);\n                      self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n                      self.props.loadBordroSession();\n                    } else {\n                      if (fileList[index].status === \"success\")\n                        self.props.toggleModalWithTimeout(false, true);\n                    }\n                  }\n                })\n                .catch(function (error) {\n                  if (!axios.isCancel(error)) {\n                    document1.status = \"error\";\n                    document1.statusText = error.data;\n                    fileList[index] = {\n                      status: \"error\",\n                      statusText: error.data,\n                      name: document1.name,\n                      size: document1.size,\n                      content: document1.content,\n                    };\n                    self.setState({fileList: fileList, btnDisabled: false});\n                    showAxiosError(error);\n                  }\n                });\n          }else{\n            Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n              position: 'top-right',\n              effect: 'stackslide',\n              timeout: 5000\n            });\n          }\n\n        } else {\n          Alert.success('Tüm dokümanlar kaydedildi.', {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n          });\n        }\n      }\n    }\n  }\n\n  onCancel() {\n    if (this._source)\n      this._source.cancel();\n\n    if (this.state.index > 0) {\n      this.props.toggleModal(false, true);\n    } else {\n      this.props.toggleModal(false, false);\n    }\n  }\n\n  onDrop(acceptedFiles, rejectedFiles) {\n    let self = this;\n    if (!!acceptedFiles) {\n      self.setState({processing: true, uploadBtnDisabled: true, fileList: []});\n      let fileList = [];\n      for (let i = 0; i < acceptedFiles.length; i++) {\n        fileList.push({content: acceptedFiles[i], name: acceptedFiles[i].name, size: acceptedFiles[i].size});\n      }\n      self.setState({processing: false, uploadBtnDisabled: false, fileList: fileList, index: 0, realIndex: 0});\n    }\n  }\n\n  getStatusRender(status) {\n    let className = (status === \"processing\" ? \"spinner fa-spin\" : (status === \"success\" ? \"check\" : (status === \"error\" ? \"close\" : \"pause\")));\n    let color = (status === \"processing\" ? \"dark\" : (status === \"success\" ? \"green\" : (status === \"error\" ? \"red\" : \"dark\")));\n    return (<i className={\"fas fa-\" + className} style={{color: color, paddingRight: \"4px\"}}></i>);\n  }\n\n  // activeJoyride(){\n  //     this.setState({joyrideActive:true})\n  // }\n\n  activateJoyride() {\n    if (this.state.joyrideActive === false)\n      this.setState({joyrideActive: true})\n    // else\n    //     this.setState({ joyrideActive: false })\n  }\n\n  callback(data) {\n    if (data.action === 'close' && data.type === 'step:after') {\n      this.setState({shouldRun: false});\n    }\n    if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n      this.setState({shouldRun: true});\n      this.setState({joyrideActive: false});\n      this.activateJoyride();\n    }\n  }\n\n  changeLocation(e) {\n    this.setState({location: e.target.value});\n  }\n\n  render() {\n    let steps = this.props && this.props.newSession ? this.state.steps : this.state.steps2;\n    let locale = this.state.locale;\n    return (\n      <DefaultModal\n        isOpen={this.props.modal}\n        disabled={\n          this.state.btnDisabled ||\n          (this.state.fileList && this.state.fileList.length === 0) ||\n          (this.props.newSession && !this.state.sessionMonth)}\n        title=\"Ücret Bordrosu Dosyalarını Yükleme\"\n        size=\"lg\"\n        modalBodyStyle={{padding: \"0\", minHeight: \"500px\"}}\n        secondaryButton={<button className=\"helpButton\" onClick={() => {\n          this.activateJoyride()\n        }} style={{position: \"absolute\", right: \"70px\", alignSelf: \"center\", marginTop: \"-5px\"}}>\n          <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n          <i className=\"far fa-question-circle helpButtonIcon\" style={{opacity: \".5\"}}/></button>}\n        confirmBtnText=\"Doküman(lar)ı Yükle\"\n        cancelBtnText=\"Kapat\"\n        onConfirm={(e) => this.sendNextBordroFile(this.state.index, true, 0)}\n        onCancel={(e) => this.props.toggleModal(false, false)}>\n        <Row>\n          {this.state.joyrideActive &&\n              <Joyride\n                  disableBeacon={true}\n                  autoStart\n                  locale={locale}\n                  steps={steps}\n                  continuous={true}\n                  run={this.state.shouldRun}\n                  scrollToFirstStep={true}\n                  showProgress={true}\n                  showSkipButton={true}\n                  scrollToSteps={true}\n                  disableCloseOnEsc={true}\n                  disableOverlay={false}\n                  disableOverlayClicks={false}\n                  keyboardNavigation={true}\n                  hideBackButton={false}\n                  disableOverlayClose={true}\n                  callback={this.callback}\n                  holePadding={0}\n                  shouldRun={this.state.shouldRun}\n                  styles={{\n                    options: {\n                      zIndex: 100000,\n                      primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                    }\n                  }}\n\n              />\n        }\n          {this.props.newSession &&\n          <div className=\" col-sm-12 row\" style={{marginTop: \"15px\"}}>\n            <div className=\"col-sm-4\"/>\n            <div className=\"col-sm-8 row\">\n              <div className=\"col-sm-4\">\n                Dönem\n              </div>\n              <div className=\"col-sm-4\">\n                <Datetime timeFormat={false} dateFormat=\"YYYY-MM\" closeOnSelect={true}\n                          inputProps={{placeholder: 'YIL/AY'}}\n                          value={this.state.sessionMonth}\n                          renderMonth={this.props.renderMonth}\n                          isValidDate={function (current) {\n                            return current.startOf('month').isSameOrBefore(Datetime.moment().startOf('month'));\n                          }}\n                          onChange={(e) => {\n                            this.setState({sessionMonth: e});\n                            this.props.onMonthChange(e)\n                          }}/>\n              </div>\n            </div>\n            <div className=\"col-sm-2\"/>\n          </div>}\n          {this.props.newSession &&\n          <div className=\" col-sm-12 row\" style={{marginTop: \"15px\"}}>\n            <div className=\"col-sm-4\"/>\n            <div className=\"col-sm-8 row\">\n              <div className=\"col-sm-4\">\n                Lokasyon\n              </div>\n              <div className=\"col-sm-4\">\n                <Input type=\"text\" name=\"location\"\n                       value={this.state.location}\n                       onChange={this.changeLocation}/>\n              </div>\n            </div>\n            <div className=\"col-sm-2\"/>\n          </div>}\n          <Col sm=\"12\" style={{paddingTop: \"15px\", paddingRight: \"32px\", paddingLeft: \"32px\"}}>\n            <Dropzone\n              accept=\".pdf, .xlsx\"\n              activeClassName=\"dropzoneActiveClass\"\n              className=\"FormRenk col-sm-12\"\n              multiple={true}\n              disabled={this.state.btnDisabled}\n              onDrop={this.onDrop}>\n              <div className=\"dropzoneInnerArea\">\n                Ücret Bordrosu dosyalarını (.pdf, .xlsx) yükleyiniz.\n              </div>\n            </Dropzone>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\" style={{\n            paddingTop: \"0px\",\n            paddingRight: \"15px\",\n            paddingLeft: \"15px\",\n            maxHeight: '500px',\n            overflow: \"auto\"\n          }}>\n            <table className=\"\" style={{textAlign: 'center', paddingBottom: \"5px\"}}>\n              <thead>\n              <tr style={{backgroundColor: '#ebedf0'}}>\n                <th width=\"5%\">#</th>\n                <th>Dosya Adı</th>\n                <th>Dosya Boyutu</th>\n                <th>Durum</th>\n              </tr>\n              </thead>\n              <tbody>\n              {this.state.fileList && this.state.fileList.map((document, index) =>\n                <tr key={index + \"_\" + document.name + \"_\" + document.size}>\n                  <td>{index + 1}</td>\n                  <td style={{margin: \"0px\", textAlign: \"left\"}}>{<TextOverFlowTooltip\n                    text={document.name || \"-\"}\n                    maxLength={30}/>}</td>\n                  <td\n                    style={{margin: \"0px\"}}>{(new Decimal(new Decimal(document.size / 1024 / 1024).toFixed(2))).toNumber() + \" MB\"}</td>\n                  <td\n                    style={{margin: \"0px\"}}>{this.getStatusRender(document.status)}{(document.statusText || \"Gönderim bekliyor\")}</td>\n                </tr>\n              )}\n              {!this.state.processing && (this.state.fileList && this.state.fileList.length === 0) &&\n              <tr>\n                <td colSpan=\"8\">Kayıt bulunamadı</td>\n              </tr>\n              }\n              {this.state.processing &&\n              <tr>\n                <td colSpan=\"8\">Doküman işleniyor...</td>\n              </tr>\n              }\n              </tbody>\n            </table>\n          </Col>\n          <Col sm=\"12\">\n            <p style={{float: \"right\"}}>Toplam\n              Adet: {this.state.fileList ? this.state.fileList.length : 0}</p>\n          </Col>\n        </Row>\n\n      </DefaultModal>\n    );\n  }\n}\n\nexport default UploadBordroFileModal;\n\n","import React, {Component} from 'react';\nimport ReactTable from 'react-table'\nimport checkboxHOC from \"react-table/lib/hoc/selectTable\";\nimport 'react-table/react-table.css'\nimport ReactLoading from 'react-loading';\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {renewListForDepartment} from \"../../common/PeykHelper\";\n\nconst CheckboxTable = checkboxHOC(ReactTable);\n\nclass EmployeeSelector extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            employeeListLoading: false\n        }\n    }\n\n    componentDidMount() {\n        let self = this;\n        let params = {\n            url: '/employee/readActiveEmployeeAll?page=' + 0 + '&size=' + 100 + '&customFields=',\n            method: \"get\",\n        };\n        self.setState({\n            loading: true,\n            searching: true,\n            manual: self.manual === true ? false : self.manual,\n            employeeListLoading: true\n        });\n        requestK(params)\n        .then(function (response) {\n            self.setState({\n                total: response.data.pageList.totalElements,\n                employeeList: response.data.pageList.content,\n                loading: false,\n                employeeListLoading: false\n            });\n        })\n        .catch(function (error) {\n            self.setState({loading: false, searching: false, employeeListLoading: false});\n            showAxiosError(error);\n        });\n    }\n\n    renderMainTable() {\n        const checkboxProps = {\n            keyField: \"id\",\n            isSelected: (key) => {\n                return this.props.value && this.props.value.id === key;\n            },\n            toggleSelection: (key) => {\n                let employee = this.state.employeeList.find((e) => e.id === parseInt(key.replace(\"select-\", \"\")));\n                if (employee)\n                    this.props.onChange(employee);\n            },\n            selectType: \"radio\",\n            getTrProps: (s, r) => {\n                const selected = r && this.props.value && this.props.value.id === r.original.id;\n                return {\n                    style: {\n                        backgroundColor: selected ? \"lightgreen\" : \"inherit\"\n                    }\n                };\n            }\n        };\n\n        let columnList = [\n            {\n                Header: \"Ad\",\n                accessor: \"name\"\n            },\n            {\n                Header: \"Soyad\",\n                accessor: \"surname\"\n            },\n            {\n                Header: \"Departman\",\n                accessor: \"department_name\"\n            },\n            {\n                Header: \"Görevi\",\n                accessor: \"jobtitle\"\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"tckn\"\n            },\n            {\n                Header: \"KEP Adresi\",\n                accessor: \"kepAddress\"\n            }\n        ];\n        let columns = renewListForDepartment(this, columnList, \"accessor\");\n\n        return <CheckboxTable ref={r => (this.checkboxTable = r)} className=\"-striped -highlight\"\n                              data={this.state.employeeList} columns={columns} defaultPageSize={10}\n                              previousText={\"Önceki\"} nextText={\"Sonraki\"} pageText={\"Sayfa\"}\n                              ofText={\"Toplam:\"} rowsText={\"kayıt\"} {...checkboxProps} />\n    }\n\n    render() {\n        return <div>\n            {this.state.employeeListLoading && <ReactLoading type=\"spinningBubbles\" style={{\n                width: \"150px\",\n                height: \"150px\",\n                margin: \"50px auto 0 auto\",\n                fill: \"#888\"\n            }}/>}\n            {!this.state.employeeListLoading && this.renderMainTable()}\n        </div>\n    }\n}\n\nexport default EmployeeSelector;\n","\nimport React, {Component} from 'react';\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\nimport EmployeeSelector from './EmployeeSelector'\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport Alert from \"react-s-alert\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {isDepartmentMandatory} from \"../../common/PeykHelper\";\n\nclass BordroEmployeeEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            alert: null\n        };\n        this.editClicked = this.editClicked.bind(this);\n        this.saveClicked = this.saveClicked.bind(this);\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.bordro !== prevState.bordro) {\n            return {\n                bordro: nextProps.bordro,\n                selectedEmployee: undefined\n            }\n        }\n        return null;\n    }\n\n    editClicked(e) {\n        this.setState({edit: true});\n    }\n\n    saveClicked(e) {\n        let self = this;\n        let params = {\n            url: `/bordro/updateBordroEmployee`,\n            method: \"post\",\n            data: {\n                bordroId: self.props.bordro.id,\n                employeeId: self.state.selectedEmployee.id\n            }\n        };\n        self.setState({disabledSaveBtn:true});\n        requestK(params)\n        .then(function (response) {\n            let message = response.data;\n            self.setState({edit: false, alert: null,disabledSaveBtn:false});\n            self.props.toggle && self.props.toggle();\n            self.props.onBordroUpdated();\n            Alert.success(message, {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledSaveBtn:false});\n        });\n    }\n\n    renderView() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-4 col-lg-2\">\n                        <label>TCKN</label>\n                    </div>\n                    <div className=\"col-sm-12 col-md-8 col-lg-10\">\n                        {this.props.bordro.employee &&\n                        <span className=\"text-success\">{this.props.bordro.employee.tckn}</span>}\n                        {!this.props.bordro.employee &&\n                        <span className=\"text-danger\">{this.props.bordro.parsedTckn}</span>}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-4 col-lg-2\">\n                        <label>Adı</label>\n                    </div>\n                    <div className=\"col-sm-12 col-md-8 col-lg-10\">\n                        <span>{this.props.bordro.employee && this.props.bordro.employee.name}</span>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-4 col-lg-2\">\n                        <label>Soyadı</label>\n                    </div>\n                    <div className=\"col-sm-12 col-md-8 col-lg-10\">\n                        <span>{this.props.bordro.employee && this.props.bordro.employee.surname}</span>\n                    </div>\n                </div>\n                {isDepartmentMandatory(this) &&\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-4 col-lg-2\">\n                        <label>Departmanı</label>\n                    </div>\n                    <div className=\"col-sm-12 col-md-8 col-lg-10\">\n                        <span>{this.props.bordro.employee && this.props.bordro.employee.department && this.props.bordro.employee.department.name}</span>\n                    </div>\n                </div>}\n                {isDepartmentMandatory(this) &&\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-4 col-lg-2\">\n                        <label>Görevi</label>\n                    </div>\n                    <div className=\"col-sm-12 col-md-8 col-lg-10\">\n                        <span>{this.props.bordro.employee && this.props.bordro.employee.jobtitle}</span>\n                    </div>\n                </div>}\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-4 col-lg-2\">\n                        <label>Kep Adresi</label>\n                    </div>\n                    <div className=\"col-sm-12 col-md-8 col-lg-10\">\n                        <span>{this.props.bordro.employee && this.props.bordro.employee.kepAddress}</span>\n                    </div>\n                </div>\n            </div>)\n    }\n\n    renderEdit() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 col-md-4 col-lg-3\">\n                        <label>Ücret Bordrosu TCKN</label>\n                    </div>\n                    <div className=\"col-sm-12 col-md-8 col-lg-9\">\n                        <span>{this.props.bordro.parsedTckn}</span>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <EmployeeSelector value={this.state.selectedEmployee}\n                                          onChange={(e) => this.setState({selectedEmployee: e})}/>\n                    </div>\n                </div>\n            </div>)\n    }\n\n    render() {\n        return <div>\n            {this.state.alert}\n            <Modal isOpen={this.props.bordro} size=\"lg\" toggle={e => {\n                this.setState({edit: false});\n                this.props.toggle(e)\n            }}>\n                <ModalHeader className=\"justify-content-center\" toggle={e => {\n                    this.setState({edit: false});\n                    this.props.toggle(e)\n                }}>\n                    Ücret Bordrosu Çalışan Bilgileri\n                </ModalHeader>\n                <ModalBody>\n                    {this.props.bordro && !this.state.edit && this.renderView()}\n                    {this.props.bordro && this.state.edit && this.renderEdit()}\n                </ModalBody>\n                <ModalFooter>\n                    <Button title=\"İptal\" color=\"secondary\" onClick={e => {\n                        this.setState({edit: false});\n                        this.props.toggle(e)\n                    }}>\n                        İptal\n                    </Button>\n                    {!this.state.edit && <Button title=\"Çalışanı Değiştir\" color=\"primary\" onClick={this.editClicked}>\n                        Düzenle\n                    </Button>}\n                    {this.state.edit &&\n                    <Button title=\"Seçili Çalışanı Kaydet\" color=\"primary\" disabled={!this.state.selectedEmployee || this.state.disabledSaveBtn}\n                            onClick={this.saveClicked}>\n                        Kaydet\n                    </Button>}\n                </ModalFooter>\n            </Modal>\n        </div>\n    }\n}\n\nexport default BordroEmployeeEditor;\n","import React, {Component} from 'react';\nimport 'react-table/react-table.css'\nimport {Col, FormGroup, Label} from \"reactstrap\";\nimport Select from \"../../../local_node_modules/react-select\";\nimport DefaultModal from \"../../../components/DefaultModal\";\nimport Form from \"react-bootstrap/Form\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nclass DocumentConditionalSpec extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: {},\n            disableBtn: false\n        };\n    }\n\n    componentDidMount() {\n        this.setState({status: this.props.status ? {value: true, label: \"Verilmiş\"} : {value: false, label: \"Verilmemiş\"}});\n    }\n\n    saveClicked = () => {\n        let self = this;\n        let isChecked = this.state.status.value\n        let conditionalList = [];\n        conditionalList.push(this.props.id);\n        let params = {\n            url: `/bordro/updateBordroConditionalStatus?isChecked=${isChecked}`,\n            method: \"post\",\n            data: {\n                conditionalIdList: conditionalList,\n                sessionId: this.props.sessionId\n            }\n        };\n        self.setState({alert: null, disableBtn: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({disableBtn: false});\n                self.props.toggleModal(false, true);\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disableBtn: false});\n        });\n    };\n\n    render() {\n        return (\n            <DefaultModal isOpen={this.props.modal}\n                          size=\"sm\" closeOnEsc={false}\n                          title=\"Şartlı Onay Hakkı Atama\"\n                          confirmBtnText=\"Kaydet\"\n                          cancelBtnText=\"Kapat\"\n                          disabled={this.state.disableBtn}\n                          onConfirm={() => this.setState({\n                              alert: (\n                                  <SweetAlert showCancel warning\n                                              confirmBtnText=\"Evet\"\n                                              cancelBtnText=\"Hayır\"\n                                              confirmBtnBsStyle=\"danger\"\n                                              cancelBtnBsStyle=\"default\"\n                                              title=\"Emin misiniz?\"\n                                              onConfirm={() => this.saveClicked()}\n                                              onCancel={() => this.setState({alert: null})}\n                                              style={{top: '100%'}}\n                                  >\n                                      {this.state.status.value ? \"Dokümana şartlı onay yetkisi verilecektir.\" : \"Dokümandan şartlı onay yetkisi kaldırılacaktır.\"}\n                                  </SweetAlert>\n                              )\n                          })}\n                          onCancel={() => this.props.toggleModal(false, false)}>\n                <Form>\n                    <FormGroup row>\n                        <Label sm={6}>Şartlı Onay Hakkı: </Label>\n                        <Col sm={6}>\n                            <Select value={this.state.status}\n                                    clearable={false}\n                                    disabled={this.state.disableBtn}\n                                    options={[\n                                        {value: true, label: 'Verilmiş'},\n                                        {value: false, label: 'Verilmemiş'},\n                                    ]}\n                                    placeholder=\"Seçiniz...\"\n                                    onChange={e => this.setState({status: e})}/>\n                            {this.state.alert}\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </DefaultModal>\n        );\n    }\n}\n\nexport default DocumentConditionalSpec;\n","import React, {Component} from 'react';\nimport 'react-table/react-table.css'\nimport {Col, FormGroup, Label} from \"reactstrap\";\nimport Select from \"../../../local_node_modules/react-select\";\nimport DefaultModal from \"../../../components/DefaultModal\";\nimport Form from \"react-bootstrap/Form\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nclass DocumentDeclineSpec extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: {},\n            disableBtn: false\n        };\n    }\n\n    componentDidMount() {\n        this.setState({status: this.props.status ? {value: true, label: \"Verilmiş\"} : {value: false, label: \"Verilmemiş\"}});\n    }\n\n    saveClicked = () => {\n\n        let self = this;\n        let isChecked = this.state.status.value\n        let declineList =  [];\n        declineList.push(this.props.id);\n        let params = {\n            url: `/bordro/updateBordroDeclineStatus?isChecked=${isChecked}`,\n            method: \"post\",\n            data: {\n                declineIdList: declineList,\n                sessionId: this.props.sessionId\n            }\n        };\n        self.setState({alert: null, disableBtn: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({disableBtn: false});\n                self.props.toggleModal(false, true);\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disableBtn: false});\n        });\n    };\n\n    render() {\n        return (\n            <DefaultModal isOpen={this.props.modal}\n                          size=\"sm\" closeOnEsc={false}\n                          title=\"Reddetme Hakkı Atama\"\n                          confirmBtnText=\"Kaydet\"\n                          cancelBtnText=\"Kapat\"\n                          disabled={this.state.disableBtn}\n                          onConfirm={() => this.setState({\n                              alert: (\n                                  <SweetAlert showCancel warning\n                                              confirmBtnText=\"Evet\"\n                                              cancelBtnText=\"Hayır\"\n                                              confirmBtnBsStyle=\"danger\"\n                                              cancelBtnBsStyle=\"default\"\n                                              title=\"Emin misiniz?\"\n                                              onConfirm={() => this.saveClicked()}\n                                              onCancel={() => this.setState({alert: null})}\n                                              style={{top: '100%'}}\n                                  >\n                                      {this.state.status.value ? \"Dokümana reddedebilme yetkisi verilecektir.\" : \"Dokümandan reddedebilme yetkisi kaldırılacaktır.\"}\n                                  </SweetAlert>\n                              )\n                          })}\n                          onCancel={() => this.props.toggleModal(false, false)}>\n                <Form>\n                    <FormGroup row>\n                        <Label sm={6}>Reddetme Hakkı: </Label>\n                        <Col sm={6}>\n                            <Select value={this.state.status}\n                                    clearable={false}\n                                    disabled={this.state.disableBtn}\n                                    options={[\n                                        {value: true, label: 'Verilmiş'},\n                                        {value: false, label: 'Verilmemiş'},\n                                    ]}\n                                    placeholder=\"Seçiniz...\"\n                                    onChange={e => this.setState({status: e})}/>\n                            {this.state.alert}\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </DefaultModal>\n        );\n    }\n}\n\nexport default DocumentDeclineSpec;","import React, {Component} from 'react';\nimport Table from \"../../../../components/Table/Table\";\nimport {Col, Input, Label} from 'reactstrap';\nimport DetailedSearch from \"../../../../components/DetailedSearch/DetailedSearch\";\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport 'react-datetime/css/react-datetime.css'\nimport 'moment/locale/tr'\nimport moment from 'moment';\nimport {authorizationWays, showAxiosError} from \"../../../../helper/helper\";\nimport DropdownCheck from \"../../../../components/Table/DropdownCheck\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport Alert from \"react-s-alert\";\nimport {\n    downloadApproveDocument,\n    genderData,\n    getJobTitles,\n    renewListForPrivileges,\n    stateCompare,\n    stateData,\n    statusTypeFilterData\n} from \"../../common/PeykHelper\";\nimport DocumentState from \"../../common/DocumentState\";\nimport DepartmentSelectionTree from \"../../organization/DepartmentSelectionTree\";\nimport StateDetail from \"../../common/StateDetail\";\nimport BordroEmployeeEditor from \"./BordroEmployeeEditor\";\nimport CreateEditEmployeeModal from \"../../employee/component/CreateEditEmployeeModal\";\nimport DocumentConditionalSpec from \"../../common/DocumentConditionalSpec\";\nimport ApproveDocumentViewer from \"../../approval/helper/ApproveDocumentViewer\";\nimport TextOverFlowTooltip from \"../../../../components/TextOverFlowTooltip\";\nimport base64_arraybuffer from \"base64-arraybuffer\";\nimport DocumentDeclineSpec from \"../../common/DocumentDeclineSpec\";\n\nclass BordroTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            alert: null,\n            selection: [],\n            displayTcknDublicates: false,\n            pageList: null,\n            showOnlyMissing: false,\n            showOnlyDublicates: false,\n            showOnlySents: false,\n            manual: false,\n            content: [],\n            treeData: [],\n            conditionalSelection: [],\n            declineSelection: [],\n            conditionalSelectedAll: false,\n            declineSelectedAll: false,\n            total: 0,\n            searching: false,\n            searchQuery: undefined,\n            page: 0,\n            size: 10,\n            searchKey: \"\",\n            temporaryRow: '',\n            showDownloadButton: false,\n            detailedDepartment: false,\n            selectedAuthorizationWay: authorizationWays.DEPARTMENT\n        };\n\n        this.fetchData = this.fetchData.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n        this.isSelected = this.isSelected.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.changeSelection = this.changeSelection.bind(this);\n        this.setSelectedDepts = this.setSelectedDepts.bind(this);\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n        this.toggleConditionalChange = this.toggleConditionalChange.bind(this);\n        this.toggleDeclineChange = this.toggleDeclineChange.bind(this);\n        this.changeConditionalSelection = this.changeConditionalSelection.bind(this);\n        this.changeDeclineSelection = this.changeDeclineSelection.bind(this);\n        this.isConditionalAllowed = this.isConditionalAllowed.bind(this);\n        this.isDeclineAllowed = this.isDeclineAllowed.bind(this);\n        this.setMediaViewer = this.setMediaViewer.bind(this);\n        this.previewBordro = this.previewBordro.bind(this);\n        this.getTrStyles = this.getTrStyles.bind(this);\n        this.downloadContent = this.downloadContent.bind(this);\n        this.onAuthorizationWaysChange = this.onAuthorizationWaysChange.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({jobTitlesData: getJobTitles()});\n        if (this.props.selection && this.props.selection.length > 0) {\n            this.setState({selection: this.props.selection});\n        }\n        this.readTitleAll();\n        let self = this;\n        self.readDepartmentTreeData();\n    }\n\n    readDepartmentTreeData = () => {\n        let self = this;\n        self.setState({treeData: []});\n        let params = {\n            url: '/department/readDepartmentTreeData',\n            method: \"post\",\n            data: self.state.selectedAuthorizationWay\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({treeData: response.data});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    async onAuthorizationWaysChange(event) {\n        let self = this;\n        await self.setState({selectedAuthorizationWay: event.target.value});\n        self.readDepartmentTreeData();\n        self.handleSearch();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.manual) {\n            this.setState({manual: nextProps.manual});\n            this.props.isManual(false);\n        }\n    }\n\n    async fetchData(accessor, direction, page, size) {\n        try {\n            if (accessor === \"date\") {\n                accessor = undefined;\n                direction = undefined;\n            }\n\n            const sortStr = accessor ? `&sort=${accessor},${direction}` : '&sort=id,desc';\n            const searchQuery = this.state.searchQuery ? `&${this.state.searchQuery}` : '';\n            let url = `/bordro/readAllBordroBySessionId?bordroSessionId=${this.props.bordroSession.id}` +\n                `&showOnlyMissing=${this.state.showOnlyMissing}` +\n                `&showOnlyDublicates=${this.state.showOnlyDublicates}` +\n                `&showOnlySents=${this.state.showOnlySents}` +\n                `&page=${page}&size=${size}${searchQuery}${sortStr}`;\n\n            url = this.setSelectedDepts(url);\n\n            const params = {\n                url,\n                method: \"get\",\n            };\n\n            this.setState({ loading: true, searching: true, manual: this.manual !== true ? this.manual : false });\n\n            const response = await requestK(params);\n            const responseData = response.data || {};\n\n            if (responseData.selectedIdList) {\n                try {\n                    const selectedIdResponse = await requestK({\n                        url: '/bordro/getBordroIdsForSelectedIds',\n                        method: \"post\",\n                        data: responseData.selectedIdList,\n                    });\n                    this.setState({ conditionallyOrDeclinableTotalIds: selectedIdResponse ? selectedIdResponse.data : [] }, () => {\n                        this.props.totalPdfCountIdList(selectedIdResponse ? selectedIdResponse.data : []);\n                    });\n                } catch (error) {\n                    this.setState({ conditionallyOrDeclinableTotalIds: [] });\n                }\n            } else {\n                this.setState({ conditionallyOrDeclinableTotalIds: [] });\n            }\n\n            const content = responseData.page?.content || [];\n            this.setState({\n                page,\n                size,\n                total: responseData.page?.totalElements || 0,\n                content,\n                totalIdList: response.data ? response.data.selectedIdList : [],\n                searching: false,\n                loading: content.length > 0 || !this.props.isPdfsParsing ? false : true,\n            });\n\n            this.updateConditionalList(content);\n            this.updateDeclineList(content);\n            this.props.tableLoadingCompleted();\n\n        } catch (error) {\n            this.setState({ loading: false, searching: false });\n            this.props.tableLoadingCompleted();\n            showAxiosError(error);\n        }\n    }\n\n    readTitleAll = () => {\n        let self = this;\n        let params = {\n            url: `/employeecustom/readTitleAll`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                self.setState({titleList: response.data});\n            })\n            .catch(function (error) {\n            });\n    };\n\n    updateConditionalList = (content) => {\n        let conditionalSelection = this.state.conditionalSelection;\n        content && content.map(doc => {\n            if (doc.conditionalApproveAllowed) {\n                conditionalSelection.push(doc.id);\n            }\n        });\n        this.setState({conditionalSelection});\n        this.props.changeOnConditionalSelection(conditionalSelection);\n    };\n\n    updateDeclineList = (content) => {\n        let declineSelection = this.state.declineSelection;\n        content && content.map(doc => {\n            if (doc.declineAllowed) {\n                declineSelection.push(doc.id);\n            }\n        });\n        this.setState({declineSelection});\n        this.props.changeOnDeclineSelection(declineSelection);\n    };\n\n    handleSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            searching: true,\n            selection: [],\n            conditionalSelection: [],\n            declineSelection: [],\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    setSelectedDepts(url) {\n        let selectedDepts = this.state.selectedDepts;\n        if (selectedDepts) {\n            Object.keys(selectedDepts).map(dept => {\n                if (selectedDepts[dept]) {\n                    if (this.state.selectedAuthorizationWay === authorizationWays.EXPENDITURE) {\n                        url = url + '&employee_expenditureDepartment_id=' + dept;\n                    } else {\n                        url = url + '&employee_department_id=' + dept;\n                    }\n                }\n            });\n        }\n        return url;\n    }\n\n    deleteRow(item) {\n        let self = this;\n        let params = {\n            url: `/bordro/deleteBordro`,\n            method: \"post\",\n            data: item.id\n        };\n        self.setState({disabledDeleteBtn: true});\n        requestK(params)\n            .then(function () {\n                self.setState({\n                    manual: true,\n                    alert: null,\n                    disabledDeleteBtn: false,\n                    selection: [],\n                    conditionalSelection: [],\n                    declineSelection: [],\n                    conditionalSelectedAll: false,\n                    declineSelectedAll: false,\n                });\n                Alert.success(\"Bordro silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                self.props.load();\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDeleteBtn: false});\n        });\n    }\n\n    cancelSendingBordro(item) {\n        let self = this;\n        let params = {\n            url: `/bordro/cancelSendingBordro`,\n            method: \"post\",\n            data: item.id\n        };\n        self.setState({disabledCancelSendingBtn: true});\n        requestK(params)\n            .then(function () {\n                self.setState({\n                    manual: true,\n                    alert: null,\n                    disabledCancelSendingBtn: false,\n                    selection: [],\n                    conditionalSelection: [],\n                    declineSelection: [],\n                    conditionalSelectedAll: false,\n                    declineSelectedAll: false,\n                });\n                Alert.success(\"Bordro Gönderimi İptal Edildi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                self.props.load();\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledCancelSendingBtn: false});\n        });\n    }\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection});\n            this.props.addSelectionToState(selection);\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({selection: selection});\n            this.props.addSelectionToState(selection);\n        }\n    }\n\n    toggleConditionalChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = [];\n        self.state.content.map(emp => items.push(emp.id));\n        let selection = self.state.conditionalSelection;\n        if (row === \"all\") {\n            selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item);\n                });\n            }\n            selection = Array.from(new Set(selection));\n            self.setState({conditionalSelection: selection, conditionalSelectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            selection = Array.from(new Set(selection));\n            self.setState({\n                conditionalSelection: selection,\n                conditionalSelectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n        this.props.changeOnConditionalSelection(selection);\n    }\n\n    toggleDeclineChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = [];\n        self.state.content.map(emp => items.push(emp.id));\n        let selection = self.state.declineSelection;\n        if (row === \"all\") {\n            selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item);\n                });\n            }\n            selection = Array.from(new Set(selection));\n            self.setState({declineSelection: selection, declineSelectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            selection = Array.from(new Set(selection));\n            self.setState({\n                declineSelection: selection,\n                declineSelectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n        this.props.changeOnDeclineSelection(selection);\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    isConditionalAllowed(id) {\n        return (\n            (this.state.conditionalSelection && this.state.conditionalSelection.indexOf(id) !== -1)\n        );\n    }\n\n    isDeclineAllowed(id) {\n        return (\n            (this.state.declineSelection && this.state.declineSelection.indexOf(id) !== -1)\n        );\n    }\n\n    changeSelection(selection) {\n        this.setState({selection: selection});\n        this.props.addSelectionToState(selection);\n    }\n\n    changeConditionalSelection(conditionalSelection) {\n        this.setState({conditionalSelection: conditionalSelection});\n        this.props.changeOnConditionalSelection(conditionalSelection);\n    }\n\n    changeDeclineSelection(declineSelection) {\n        this.setState({declineSelection: declineSelection});\n        this.props.changeOnDeclineSelection(declineSelection);\n    }\n\n    setMediaViewer() {\n        this.setState({url: null, mediaModal: false});\n    }\n\n    previewBordro(row) {\n        let self = this;\n        let params = {\n            url: `/bordro/previewBordroContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({mediaModal: true, temporaryRow: row, showDownloadButton: true});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                let base64Data = \"\";\n                if (blob !== undefined) {\n                    let reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = function () {\n                        base64Data = reader.result;\n                        self.setState({url: base64Data});\n                    }\n                }\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({mediaModal: false});\n        });\n    }\n\n    getTrStyles(row) {\n        return (row.employee && row.employee.statusType && row.employee.statusType !== 'ACTIVE') ? {\n            backgroundColor: 'lightgray',\n            webkitTextFillColor: 'darkgray'\n        } : {};\n    }\n\n    detailedDepartment = () => {\n        const b = document.getElementById('departmentContainer');\n        this.setState({\n            detailedDepartment: !this.state.detailedDepartment\n        }, () => {\n            if (this.state.detailedDepartment) {\n                b.style.height = 'auto';\n            } else {\n                b.style.height = '200px';\n            }\n        });\n\n    }\n\n    downloadContent(row, index) {\n        let self = this;\n        let params = {\n            url: `/bordro/previewBordroContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({disabledDownloadBtn: true, selectedIndex: index});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                var link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                let randomNum = Math.floor(Math.random() * 100000);\n                let createdAt = !!row.createdAt ? (\"_\" + row.createdAt.toString().substring(0, row.createdAt.indexOf(\"T\"))) : \"\";\n                let fileName = \"Bordro\" +\n                    (row.parsedTckn ? (\"_\" + row.parsedTckn + \"_\") : \"_\") +\n                    row.term.split(\"-\")[0] + \"_\" +\n                    row.term.split(\"-\")[1] + \"_\" + createdAt + \"_\" + randomNum +\n                    \".pdf\";\n                link.download = fileName;\n                document.body.appendChild(link);\n                if (row.timeStamp != null && row.timeStamp != \"\") {\n                    let formTimeStamp = new Blob([base64_arraybuffer.decode(row.timeStamp)], {type: 'application/octet-stream'});\n                    let linkTs = document.createElement('a');\n                    linkTs.href = window.URL.createObjectURL(formTimeStamp);\n                    linkTs.download = fileName + \".zd\";\n                    document.body.appendChild(linkTs);\n                    linkTs.click();\n                }\n                link.click();\n                self.setState({disabledDownloadBtn: false});\n                self.setState({loading: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDownloadBtn: false, title: null});\n        });\n    }\n\n    render() {\n        let pageIdList = [], dublicateList = [], tempList = [];\n        if (this.state.content && this.state.content instanceof Array) {\n            this.state.content.map(e => {\n                if ((!e.employee || !e.employee.name || e.employee.statusType === \"ACTIVE\") ) {\n                    pageIdList.push(e.id);\n                }\n                if (!tempList.includes(e.parsedTckn)) {\n                    tempList.push(e.parsedTckn);\n                } else if (!dublicateList.includes(e.parsedTckn)) {\n                    dublicateList.push(e.parsedTckn)\n                }\n            });\n        }\n\n        let columnList = [\n            {\n                Header: (\n                    <DropdownCheck selectionIdList={this.state.selection}\n                                   totalIdList={this.state.totalIdList}\n                                   pageIdList={pageIdList}\n                                   onChange={this.changeSelection}/>\n                ),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.props.bordroSession &&\n                    <input type=\"checkbox\" checked={this.isSelected(row.id)}\n                           disabled={(row.employee && row.employee.statusType && row.employee.statusType !== 'ACTIVE') || (DocumentState[row.state].value === 602 || DocumentState[row.state].value === 603)}\n                           onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}/>)\n            },\n            {\n                Header: \"Ay\",\n                accessor: \"term\",\n                Cell: row => (\n                    <div>\n                        {!!row.term && moment(row.term, 'YYYY/MM/DD').format('YYYY/MM')}\n                    </div>\n                )\n            },\n            {\n                Header: \"Lokasyon\",\n                accessor: \"location\",\n                Cell: row => (\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.location} maxLength={25}/></div>\n                )\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"parsedTckn\",\n                Cell: row => (\n                    <div>\n                        {!(row.employee && row.employee.name) &&\n                            <span className=\"text-danger\">{row.parsedTckn}</span>}\n                        {(row.employee && row.employee.name) && dublicateList.includes(row.parsedTckn) &&\n                            <span className=\"text-warning\">{row.parsedTckn}</span>}\n                        {(row.employee && row.employee.name) && !dublicateList.includes(row.parsedTckn) &&\n                            <span className=\"text-success\">{row.parsedTckn}</span>}\n                    </div>\n                )\n            },\n            {\n                Header: \"Adı\",\n                accessor: \"employee_name\",\n                Cell: row => (\n                    <div>\n                        {row.employee && row.employee.name}\n                    </div>\n                )\n            },\n            {\n                Header: \"Soyadı\",\n                accessor: \"employee_surname\",\n                Cell: row => (\n                    <div>\n                        {row.employee && row.employee.surname}\n                    </div>\n                )\n            },\n            {\n                Header: \"Departman\",\n                accessor: \"employee_department\",\n                Cell: row => (\n                    <div>\n                        {row.employee && row.employee.department && row.employee.department.name}\n                    </div>\n                )\n            },\n            {\n                Header: \"Görev\",\n                accessor: \"employee_jobTitle\",\n                Cell: row => (\n                    <div>\n                        {row.employee && row.employee.jobTitle}\n                    </div>\n                )\n            },\n            {\n                Header: \"Kep Adresi\",\n                accessor: \"employee_kepAddress\",\n                Cell: row => (\n                    <div>\n                        {row.employee && row.employee.kepAddress}\n                    </div>\n                )\n            },\n            {\n                Header: \"Çalışan Durumu\",\n                accessor: \"employee_statusType\",\n                Cell: row => (\n                    <div>\n                        {row.employee && row.employee.statusType === \"ACTIVE\" &&\n                            <span className=\"text-success\">{\"Aktif\"}</span>}\n                        {row.employee && row.employee.statusType === \"PASSIVE\" &&\n                            <span className=\"text-danger\">{\"Pasif\"}</span>}\n                        {row.employee && row.employee.statusType === \"TERMINATED\" &&\n                            <span className=\"text-danger\">{\"Fesih\"}</span>}\n                        {row.employee && row.employee.statusType === \"CANDIDATE\" &&\n                            <span className=\"text-danger\">{\"Aday\"}</span>}\n                    </div>\n                )\n            },\n            {\n                Header: \"Uyarı Sayısı\",\n                accessor: \"warningCount\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.warningCount}\n                    </div>\n                )\n            },\n            {\n                Header: \"Sayfa Sayısı\",\n                accessor: \"pageCount\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.pageCount}\n                    </div>\n                )\n            },\n            {\n                Header: \"Durumu\",\n                accessor: \"state\",\n                Cell: row => (\n                    <div>\n                        {row.error && <span className=\"text-danger\">{row.error}</span>}\n                        {!row.error &&\n                            <span\n                                className={\"text-\" + DocumentState[row.state].messageType}>{DocumentState[row.state].message}</span>}\n                    </div>\n                )\n            },\n            {\n                Header: (this.state.content &&\n                    <div>\n                        <span style={{color: '#007acc'}}>Şartlı Onay</span>\n                        <br/>\n                        <DropdownCheck selectionIdList={this.state.conditionalSelection}\n                                       totalIdList={this.state.conditionallyOrDeclinableTotalIds}\n                                       pageIdList={pageIdList}\n                                       onChange={this.changeConditionalSelection}\n                                       isConditional={true}/>\n                    </div>),\n                accessor: \"conditional\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.content &&\n                    <input type=\"checkbox\" style={{width:'60px'}} checked={this.isConditionalAllowed(row.id)}\n                           disabled={(row.employee && row.employee.statusType && row.employee.statusType !== 'ACTIVE') || (DocumentState[row.state].value === 602 || DocumentState[row.state].value === 603) || stateCompare(row.state, \">=\", \"PDF_SIGNED\") }\n                           onChange={(e) => this.toggleConditionalChange(e, row, \"id\", index)}/>)\n            },\n            {\n                Header: (this.state.content &&\n                    <div>\n                        <span style={{color: '#408f57'}}>Reddedilebilir</span>\n                        <br/>\n                        <DropdownCheck selectionIdList={this.state.declineSelection}\n                                       totalIdList={this.state.conditionallyOrDeclinableTotalIds}\n                                       pageIdList={pageIdList}\n                                       onChange={this.changeDeclineSelection}\n                                       isDeclinable={true}/>\n                    </div>),\n                accessor: \"decline\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.content &&\n                    <input type=\"checkbox\" style={{width:'75px'}} checked={this.isDeclineAllowed(row.id)}\n                           disabled={(row.employee && row.employee.statusType && row.employee.statusType !== 'ACTIVE') || (DocumentState[row.state].value === 602 || DocumentState[row.state].value === 603) || stateCompare(row.state, \">=\", \"PDF_SIGNED\") }\n                           onChange={(e) => this.toggleDeclineChange(e, row, \"id\", index)}/>)\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: (row, index) => (\n                    <div>\n                        {!this.props.isKepOwner &&\n                            <div className=\"btn-group\" style={{padding: 0, margin: 0}}>\n                                <div className=\"dropdown\" style={{padding: 0, margin: 0}}>\n                                    <button className=\"MenuBtn2 listt btn btn-default\"\n                                            style={{WebkitTextFillColor: 'white'}}\n                                            type=\"button\" data-toggle=\"dropdown\">Seçİnİz\n                                    </button>\n                                    <div className=\"dropdown-menu\" aria-labelledby={\"dropdownMenuButton_\" + row.id}>\n                                        <a className=\"dropdown-item \"\n                                           onClick={() => this.previewBordro(row)}>\n                                            <i className=\"fa fa-search\"/>Görüntüle\n                                        </a>\n                                        {!(this.state.disabledDownloadBtn && index === this.state.selectedIndex) &&\n                                            <a className=\"dropdown-item\"\n                                               onClick={() => this.downloadContent(row)}>\n                                                <i className=\"fa fa-download\"/>Bordro İndir\n                                            </a>}\n                                        {!(this.state.disabledDownloadBtn && index === this.state.selectedIndex) &&\n                                            (DocumentState[row.state].value === 610 || (DocumentState[row.state].value >= 630 && DocumentState[row.state].value <= 660)) &&\n                                            <a className=\"dropdown-item\"\n                                               onClick={() => downloadApproveDocument(this, row, index, \"BORDRO\")}>\n                                                <i className=\"fa fa-download\"/>Onay Belgesini İndir\n                                            </a>}\n                                        {stateCompare(row.state, \"<\", \"PDF_SIGNED\") &&\n                                            <a className=\"dropdown-item\"\n                                               onClick={() => this.setState({\n                                                   employeeId: row.employee ? row.employee.id : null,\n                                                   tckn: row.parsedTckn,\n                                                   showModal: true\n                                               })}>\n                                                <i className=\"fa fa-at\"/>{row.employee && row.employee.id ? \"Alıcı Düzenle\" : \"Alıcı Yeni Ekle\"}\n                                            </a>}\n                                        {stateCompare(row.state, \">=\", \"MIME_SIGNED\") && stateCompare(row.state, \"<\", \"APPROVED_BY_EMPLOYEE\") &&  !stateCompare(row.state, \"=\", \"OBJECTION\") &&\n                                            <a className=\"dropdown-item\"\n                                               onClick={() => this.setState({\n                                                   conditionalDocumentId: row.id,\n                                                   conditionalDocumentStatus: this.state.conditionalSelection.includes(row.id),\n                                                   showConditionalChangeModal: true\n                                               })}>\n                                                <i className=\"fa fa-commenting\"/>Şartlı Onay Hakkı Değiştir\n                                            </a>}\n                                        {stateCompare(row.state, \">=\", \"MIME_SIGNED\") && stateCompare(row.state, \"<\", \"APPROVED_BY_EMPLOYEE\") &&  !stateCompare(row.state, \"=\", \"OBJECTION\") &&\n                                            <a className=\"dropdown-item\"\n                                               onClick={() => this.setState({\n                                                   declineDocumentId: row.id,\n                                                   declineDocumentStatus: this.state.declineSelection.includes(row.id),\n                                                   showDeclineChangeModal: true\n                                               })}>\n                                                <i className=\"fa fa-commenting\"/>Reddet Hakkı Değiştir\n                                            </a>}\n                                        {row.employee && row.employee.name &&\n                                            <a className=\"dropdown-item\"\n                                               onClick={() => this.setState({stateDetail: row})}>\n                                                <i className=\"fa fa-info-circle\"/>Durum Detayı\n                                            </a>}\n                                        {stateCompare(row.state, \"<\", \"PDF_SIGNED\") &&\n                                            <a className=\"dropdown-item\"\n                                               onClick={() =>\n                                                   this.setState({\n                                                       alert: (\n                                                           <SweetAlert showCancel warning\n                                                                       disabled={this.state.disabledDeleteBtn}\n                                                                       confirmBtnText=\"Evet\"\n                                                                       cancelBtnText=\"Hayır\"\n                                                                       confirmBtnBsStyle=\"danger\"\n                                                                       cancelBtnBsStyle=\"default\"\n                                                                       title=\"Emin misiniz?\"\n                                                                       onConfirm={() => {\n                                                                           this.deleteRow(row)\n                                                                       }}\n                                                                       onCancel={() => this.setState({alert: null})}>\n                                                               Ücret Bordrosu silinecek.\n                                                           </SweetAlert>)\n                                                   })\n                                               }>\n                                                <i className=\"fa fa-close\"/>Sil\n                                            </a>\n                                        }\n\n                                        {(stateCompare(row.state, \"=\", \"INSERTED_TO_FLOW\") || stateCompare(row.state, \"=\", \"FLOW_TIMEOUT\")) &&\n                                            <a className=\"dropdown-item\"\n                                               onClick={() =>\n                                                   this.setState({\n                                                       alert: (\n                                                           <SweetAlert showCancel warning\n                                                                       disabled={this.state.disabledCancelSendingBtn}\n                                                                       confirmBtnText=\"Evet\"\n                                                                       cancelBtnText=\"Hayır\"\n                                                                       confirmBtnBsStyle=\"danger\"\n                                                                       cancelBtnBsStyle=\"default\"\n                                                                       title=\"Emin misiniz?\"\n                                                                       onConfirm={() => {\n                                                                           this.cancelSendingBordro(row)\n                                                                       }}\n                                                                       onCancel={() => this.setState({alert: null})}>\n                                                               Bordro Gönderimi İptal Edilecek.\n                                                           </SweetAlert>)\n                                                   })\n                                               }>\n                                                <i className=\"fa-solid fa-rectangle-xmark\"></i>Gönderimi İptal Et\n                                            </a>\n                                        }\n\n                                    </div>\n                                </div>\n                            </div>}\n                        {this.props.isKepOwner &&\n                            <div style={{textAlign: 'left', webkitTextFillColor: 'white'}}>\n                                <button title=\"Ücret Bordrosu Görüntüle\" className=\"btn-icon btn btn-info btn-sm\"\n                                        style={{margin: '0px 3px'}}\n                                        onClick={(e) => this.previewBordro(row)}>\n                                    <i className=\"now-ui-icons ui-1_zoom-bold\"/>\n                                </button>\n                                <button title=\"Alıcı Bilgisi Düzenle\" className=\"btn-icon btn btn-success btn-sm\"\n                                        style={{margin: '0px 3px'}}\n                                        onClick={e => this.setState({selected: row})}>\n                                    <i className=\"now-ui-icons ui-2_settings-90\"/>\n                                </button>\n                                {stateCompare(row.state, \"<\", \"MIME_SIGNED\") &&\n                                    <button title=\"Ücret Bordrosu Sil\" className=\"btn-icon btn btn-danger btn-sm\"\n                                            style={{margin: '0px 3px'}} onClick={e => {\n                                        this.setState({\n                                            alert: (\n                                                <SweetAlert showCancel warning\n                                                            confirmBtnText=\"Evet\"\n                                                            cancelBtnText=\"Hayır\"\n                                                            confirmBtnBsStyle=\"danger\"\n                                                            cancelBtnBsStyle=\"default\"\n                                                            title=\"Emin misiniz?\"\n                                                            disabled={this.state.disabledDeleteBtn}\n                                                            onConfirm={() => this.deleteRow(row)}\n                                                            onCancel={() => this.setState({alert: null})}>\n                                                    Ücret Bordrosu silinecek.\n                                                </SweetAlert>\n                                            )\n                                        });\n                                    }}>\n                                        <i className=\"now-ui-icons ui-1_simple-remove\"/>\n                                    </button>}\n                            </div>}\n                    </div>\n                )\n            }\n        ];\n        let columns = renewListForPrivileges(this, columnList, \"accessor\", this.props.isKepOwner);\n\n        const fieldList = [\n            {\n                label: \"Adı\",\n                accessor: \"employee_name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Soyadı\",\n                accessor: \"employee_surname\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"TCKN\",\n                accessor: \"parsedTckn\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n            {\n                label: \"Durum\",\n                accessor: \"state\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: stateData(this.props.isKepOwner)\n            },\n            {\n                label: \"Departmanı\",\n                accessor: \"employee_department_name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Görevi\",\n                accessor: \"employee_jobTitle\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.jobTitlesData\n            },\n            {\n                label: \"Cinsiyet\",\n                accessor: \"employee_gender\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: genderData()\n            },\n            {\n                label: \"Çalışma Şekli\",\n                accessor: \"employee_employmentStatus\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"KEP Adresi\",\n                accessor: \"employee_kepAddress\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"e-Posta Adresi\",\n                accessor: \"employee_email\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Telefon Numarası\",\n                accessor: \"employee_telephone\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Çalışan Durum\",\n                accessor: \"employee_statusType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: statusTypeFilterData(),\n            },\n            {\n                label: \"Lokasyon Bilgisi\",\n                accessor: \"location\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Uyarı Sayısı\",\n                accessor: \"warningCount\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n        ];\n        let fields = renewListForPrivileges(this, fieldList, \"accessor\", this.props.isKepOwner);\n\n        return (\n            <div className=\"row\" style={{paddingTop: \"15px\"}}>\n                {this.state.treeData && this.state.treeData.length > 0 &&\n                    <div className=\"col-xs-12 col-md-6\" id='departmentContainer' style={{padding: 0}}\n                         onClick={() => this.detailedDepartment()}>\n                        <Col sm={12}>\n                            <div style={{textAlign: 'center'}} onChange={this.onAuthorizationWaysChange}>\n                                <input sm={6} type=\"radio\" value={authorizationWays.DEPARTMENT}\n                                       name=\"authorizationWay\"\n                                       checked={this.state.selectedAuthorizationWay === authorizationWays.DEPARTMENT}/> Departman\n                                <input sm={6} type=\"radio\" value={authorizationWays.EXPENDITURE}\n                                       name=\"authorizationWay\"\n                                       checked={this.state.selectedAuthorizationWay === authorizationWays.EXPENDITURE}\n                                       style={{marginLeft: 20}}\n                                /> Masraf Yeri\n                            </div>\n                        </Col>\n                        <Col id='departmentHeader' style={{padding: 0}}>\n                            <label id='departmentHeaderContent'>Daha Fazla Göster\n                                <span style={{marginLeft: '5px', fontSize: '14px'}}><i className=\"fas fa-chevron-down\"/></span>\n                            </label>\n                        </Col>\n                        <DepartmentSelectionTree treeData={this.state.treeData}\n                                                 selectedDepts={this.state.selectedDepts}\n                                                 selectedAuthorizationWay={this.state.selectedAuthorizationWay}\n                                                 loading={e => this.setState({loading: e})}\n                                                 onSelect={e => this.setState({selectedDepts: e, manual: true})}\n                                                 changeOnConditionalList={e => this.setState({conditionalSelection: e})}\n                                                 changeOnDeclineList={e => this.setState({declineSelection: e})}/>\n                    </div>}\n                <div\n                    className={(this.state.treeData && this.state.treeData.length > 0) ? \"col-xs-12 col-md-6\" : \"col-xs-12 col-md-12\"}>\n                    <DetailedSearch fields={fields}\n                                    loading={this.state.searching}\n                                    onSearch={this.handleSearch}/>\n                </div>\n                <div className=\"col-xs-12 col-md-12\">\n                    {/*{(this.props.bordroSessionInfo && this.props.bordroSessionInfo.unpairedCount > 0 ||*/}\n                    {/*    this.props.bordroSessionInfo && this.props.bordroSessionInfo.dublicatedCount > 0) &&*/}\n                    <div className=\"row\">\n                        {this.props.bordroSessionInfo && this.props.bordroSessionInfo.unpairedCount > 0 &&\n                            <Col sm={12}>\n                                <Input type=\"checkbox\" checked={this.state.showOnlyMissing}\n                                       onChange={(e) => {\n                                           if (e.target.checked) {\n                                               this.setState({\n                                                   showOnlyMissing: e.target.checked,\n                                                   showOnlyDublicates: false,\n                                                   selection: [],\n                                                   conditionalSelection: [],\n                                                   declineSelection: [],\n                                                   manual: true\n                                               });\n                                           } else {\n                                               this.setState({\n                                                   showOnlyMissing: e.target.checked,\n                                                   selection: [],\n                                                   conditionalSelection: [],\n                                                   declineSelection: [],\n                                                   manual: true\n                                               });\n                                           }\n                                       }}/>\n                                <Label>Sadece sahibi bulunamayan ücret bordrolarını göster</Label>\n                            </Col>\n                        }\n                        {this.props.bordroSessionInfo && this.props.bordroSessionInfo.dublicatedCount > 0 &&\n                            <Col sm={12}>\n                                <Input type=\"checkbox\" checked={this.state.showOnlyDublicates}\n                                       onChange={(e) => {\n                                           if (e.target.checked) {\n                                               this.setState({\n                                                   showOnlyDublicates: e.target.checked,\n                                                   showOnlyMissing: false,\n                                                   selection: [],\n                                                   conditionalSelection: [],\n                                                   declineSelection: [],\n                                                   manual: true\n                                               });\n                                           } else {\n                                               this.setState({\n                                                   showOnlyDublicates: e.target.checked,\n                                                   selection: [],\n                                                   conditionalSelection: [],\n                                                   declineSelection: [],\n                                                   manual: true\n                                               });\n                                           }\n                                       }}/>\n                                <Label>Sadece mükerrer tckn olanları göster</Label>\n                            </Col>\n                        }\n                        <Col sm={12}>\n                            <Input type=\"checkbox\" checked={this.state.showOnlySents}\n                                   onChange={(e) => {\n                                       this.setState({\n                                           showOnlySents: e.target.checked,\n                                           manual: true\n                                       });\n                                   }}/>\n                            <Label>Sadece tüm gönderilmiş bordroları göster</Label>\n                        </Col>\n                        {this.state.loading &&\n                            <Col sm={12} style={{display:\"flex\"}}>\n                                <div style={{marginRight: \"10px\"}}>Kayıtlar getiriliyor</div>\n                                <div>\n                                    <i className=\"fa fa-spinner fa-spin\"/>\n                                </div>\n                            </Col>\n                        }\n                    </div>\n                    {/*}*/}\n                    <div className=\"row\">\n                        <Table columns={columns}\n                               content={this.state.content}\n                               loading={this.state.loading || this.props.loading}\n                               total={this.state.total}\n                               page={this.state.page}\n                               manual={this.state.manual}\n                               size={this.state.size}\n                               options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                               getTrStyles={this.getTrStyles}\n                               fetchData={this.fetchData}\n                        />\n                    </div>\n                </div>\n                {this.state.stateDetail &&\n                    <StateDetail detail={this.state.stateDetail} documentType={\"Bordro\"}\n                                 toggle={() => this.setState({stateDetail: undefined})}/>}\n                <BordroEmployeeEditor bordro={this.state.selected}\n                                      toggle={() => this.setState({selected: undefined})}\n                                      onBordroUpdated={() => this.setState({manual: true})}/>\n                {this.state.mediaModal &&\n                    <ApproveDocumentViewer modal={this.state.mediaModal}\n                                           url={this.state.url}\n                                           title=\"Bordro\"\n                        // listener={this.setMediaViewer}\n                                           closeModal={this.setMediaViewer}\n                                           downloadContent={this.downloadContent}\n                                           temporaryRow={this.state.temporaryRow}\n                                           showDownloadButton={this.state.showDownloadButton}\n                    />}\n                {this.state.showConditionalChangeModal &&\n                    <DocumentConditionalSpec modal={this.state.showConditionalChangeModal}\n                                             status={this.state.conditionalDocumentStatus}\n                                             list={this.state.conditionalSelection}\n                                             sessionId={this.props.bordroSession.id}\n                                             id={this.state.conditionalDocumentId}\n                                             toggleModal={(flag, manual) =>\n                                                 this.setState({showConditionalChangeModal: flag}, () => {\n                                                     if (manual) {\n                                                         this.props.load()\n                                                     }\n                                                 })}/>}\n                {this.state.showDeclineChangeModal &&\n                    <DocumentDeclineSpec modal={this.state.showDeclineChangeModal}\n                                             status={this.state.declineDocumentStatus}\n                                             list={this.state.declineSelection}\n                                             sessionId={this.props.bordroSession.id}\n                                             id={this.state.declineDocumentId}\n                                             toggleModal={(flag, manual) =>\n                                                 this.setState({showDeclineChangeModal: flag}, () => {\n                                                     if (manual) {\n                                                         this.props.load()\n                                                     }\n                                                 })}/>}\n                {this.state.showModal &&\n                    <CreateEditEmployeeModal\n                        id={this.state.employeeId} tckn={this.state.tckn} modal={this.state.showModal}\n                        titleList={this.state.titleList}\n                        hasGrant={this.props.hasGrant}\n                        sidebarMenus={this.props.sidebarMenus} isKepOwner={this.props.isKepOwner}\n                        toggleModal={(flag, manual) => this.setState({showModal: flag}, () => {\n                            if (manual) {\n                                this.props.load()\n                            }\n                        })}/>}\n                {this.state.alert}\n            </div>\n        )\n    }\n}\n\nexport default BordroTable;","import React, {Component} from 'react';\nimport Table from \"../../../../components/Table/Table\";\nimport {Container} from 'reactstrap';\nimport 'react-datetime/css/react-datetime.css'\nimport 'moment/locale/tr'\nimport moment from 'moment';\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {checkGrantToDisplay, showAxiosError} from \"../../../../helper/helper\";\nimport {DOWNLOAD_UPLOADED_PAYROLL_FILE} from \"../../../../common/authorities/GrantDef\";\n\nclass BordroFileTable extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            loading: true,\n            fileCount: 0\n        };\n\n        this.load = this.load.bind(this);\n        this.downloadSessionFile = this.downloadSessionFile.bind(this);\n    }\n\n    componentDidMount() {\n        this.load();\n    }\n\n    load() {\n        if (this.props.bordroSession && this.props.bordroSession.id) {\n            let self = this;\n            let params = {\n                url: `/bordrofile/readBordroFileAll`,\n                method: \"post\",\n                data: this.props.bordroSession.id\n            };\n            self.setState({loading: true});\n            requestK(params)\n                .then(function (response) {\n                    self.setState({\n                        fileList: response.data,\n                        fileCount: (response.data && response.data.length) ? response.data.length : 0,\n                        loading: false\n                    });\n                }).catch(function (error) {\n                showAxiosError(error);\n                self.setState({loading: false});\n            });\n        }\n    }\n\n    downloadSessionFile(file) {\n        let self = this;\n        let params = {\n            url: `/bordrofile/downloadBordroFile`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: file.id\n        };\n        self.setState({loading: true});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: \"application/pdf\"});\n                let link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                link.download = file.loadName;\n                document.body.appendChild(link);\n                link.click();\n                self.setState({loading: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({loading: false});\n        });\n    }\n\n    render() {\n        let fileList = this.state.fileList;\n        let columns = [\n            {\n                Header: \"Dosya Türü\",\n                accessor: \"bulkBordroType\"\n            },\n            {\n                Header: \"Dosya adı\",\n                accessor: \"loadName\"\n            },\n            {\n                Header: \"Yükleme Zamanı\",\n                accessor: \"createdAt\",\n                Cell: row => (\n                    <div>{moment(row.createdAt).isValid() ? moment(row.createdAt).format(\"DD-MM-YYYY HH:mm:ss\") : ''}</div>)\n            },\n            {\n                Header: \"Hata Durumu\",\n                accessor: \"error\"\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: row => (\n                    <div style={{textAlign: 'left'}}>\n                        {(row.error === undefined || row.error === null) && checkGrantToDisplay(this, DOWNLOAD_UPLOADED_PAYROLL_FILE) &&\n                            <button title=\"Dosyayı İndir\" className=\"btn-icon btn btn-linkedin btn-sm\"\n                                    style={{margin: '0px 3px'}}\n                                    onClick={e => {\n                                        this.downloadSessionFile(row)\n                                    }}>\n                                <i className=\"BtnIcon fa fa-download\"/>\n                            </button>\n                        }\n                    </div>\n                )\n            }\n        ];\n\n        return (\n            <Container>\n                <div>\n                    <Table columns={columns}\n                           content={fileList ? fileList : []}\n                           loading={this.state.loading}\n                           total={this.state.fileCount}\n                           page={0}\n                           manual={this.state.manual}\n                           size={20}/>\n                </div>\n            </Container>)\n    }\n}\n\nexport default BordroFileTable;\n","import React, {Component} from 'react';\nimport 'react-table/react-table.css'\nimport {Col, FormGroup, Input, Label} from \"reactstrap\";\nimport DefaultModal from \"../../../../components/DefaultModal\";\nimport Form from \"react-bootstrap/Form\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nclass ChangeLocation extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: \"\",\n      disableBtn: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({location: this.props.location});\n  }\n\n  saveClicked = () => {\n\n    let self = this;\n    let params = {\n      url: '/bordrosession/updateLocation',\n      method: \"post\",\n      data: {\n        location: this.state.location,\n        sessionId: this.props.sessionId\n      }\n    };\n    self.setState({disableBtn: true, alert: null});\n    requestK(params)\n      .then(function (response) {\n        self.setState({disableBtn: false});\n        self.props.toggleModal(false, true);\n      }).catch(function (error) {\n      showAxiosError(error);\n      self.setState({disableBtn: false});\n    });\n  };\n\n  render() {\n    return (\n      <DefaultModal isOpen={this.props.modal}\n                    size=\"sm\" closeOnEsc={false}\n                    title=\"Lokasyon Bilgisi Düzenle\"\n                    confirmBtnText=\"Kaydet\"\n                    cancelBtnText=\"Kapat\"\n                    disabled={this.state.disableBtn}\n                    onConfirm={() => this.setState({\n                      alert: (\n                        <SweetAlert showCancel warning\n                                    confirmBtnText=\"Evet\"\n                                    cancelBtnText=\"Hayır\"\n                                    confirmBtnBsStyle=\"danger\"\n                                    cancelBtnBsStyle=\"default\"\n                                    title=\"Emin misiniz?\"\n                                    onConfirm={() => this.saveClicked()}\n                                    onCancel={() => this.setState({alert: null})}\n                                    style={{top: '100%'}}\n                        >\n                          Lokasyon bilgisi değiştirilecektir.\n                        </SweetAlert>\n                      )\n                    })}\n                    onCancel={() => this.props.toggleModal(false, false)}>\n        <Form>\n          <FormGroup row>\n            <Label sm={6}>Lokasyon: </Label>\n            <Col sm={6}>\n              <Input type=\"text\"\n                     name=\"location\"\n                     id=\"location\"\n                     value={this.state.location}\n                     onChange={e => this.setState({location: e.target ? e.target.value : \"\"})}/>\n              {this.state.alert}\n            </Col>\n          </FormGroup>\n        </Form>\n      </DefaultModal>\n    );\n  }\n}\n\nexport default ChangeLocation;\n","import React, {Component} from 'react';\nimport 'moment/locale/tr';\nimport {Col, Input, Row} from 'reactstrap';\nimport {authorizationWays, showAxiosError} from \"../../../../helper/helper\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport DefaultModal from \"../../../../components/DefaultModal\";\nimport Alert from \"react-s-alert\";\nimport {Decimal} from 'decimal.js';\nimport TextOverFlowTooltip from \"../../../../components/TextOverFlowTooltip\";\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport Joyride from \"react-joyride\";\nimport DetailedSearch from \"../../../../components/DetailedSearch/DetailedSearch\";\nimport Table from \"../../../../components/Table/Table\";\nimport {addCustomFields, genderData, renewListForDepartment, statusTypeFilterData} from \"../../common/PeykHelper\";\nimport DropdownCheck from \"../../../../components/Table/DropdownCheck\";\n\nclass UploadBordroFileModalWithoutTckn extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selection: [],\n            selectedAll: false,\n            loading: false,\n            manual: false,\n            content: [],\n            total: 0,\n            searching: false,\n            searchQuery: undefined,\n            page: 0,\n            size: 5,\n            titleFilterList: [],\n            fileList: [],\n            index: 0,\n            process: false,\n            realIndex: 0,\n            year: null,\n            month: null,\n            disableZone: false,\n            steps: [\n                {\n                    target: '.modal-content',\n                    content: \"Çalışanlarınıza ücret bordrosu gönderimi yapmak için, toplu veya ayrı ayrı olan ücret bordrolarını pdf veya xlsx uzantılı olarak yükleme yapınız.\",\n                    placement: \"center\",\n                },\n                {\n                    target: '.form-control',\n                    content: \"Bordro dönemini buradan seçebilirsiniz.\",\n                    placement: \"auto\",\n                },\n                {\n                    target: '.dropzoneInnerArea',\n                    content: 'Ücret bordrolarınızı sürükle-bırak veya bu alana tıklayarak yükleyebilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.kaydet',\n                    content: 'Dönem ve yüklenecek dosyalar seçildikten sonra yüklemeyi başlatabilirsiniz.',\n                    placement: \"auto\",\n                }\n            ],\n            steps2: [\n                {\n                    target: '.modal-content',\n                    content: \"Seçilen bordro dönemine dosya eklemesi yapmak için, toplu veya ayrı ayrı olan ücret bordrolarını pdf veya xlsx uzantılı olarak yükleme yapınız.\",\n                    placement: \"center\",\n                },\n                {\n                    target: '.dropzoneInnerArea',\n                    content: 'Ücret bordrolarınızı sürükle-bırak veya bu alana tıklayarak yükleyebilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.kaydet',\n                    content: 'Yüklenecek dosyalar seçildikten sonra yüklemeyi başlatabilirsiniz.',\n                    placement: \"auto\",\n                }\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n        };\n        this.onDrop = this.onDrop.bind(this);\n        this.callback = this.callback.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.changeLocation = this.changeLocation.bind(this);\n        this.sendNextBordroFile = this.sendNextBordroFile.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.searchWithKey = this.searchWithKey.bind(this);\n        this.fetchData = this.fetchData.bind(this);\n        this.setSelectedDepts = this.setSelectedDepts.bind(this);\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n    }\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                });\n            }\n            self.setState({selection: selection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n            }\n            self.setState({\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n    }\n\n    isSelected(id) {\n        return (\n            (this.props.selectedList && this.props.selectedList.indexOf(id) !== -1) ||\n            (this.state.selection && this.state.selection.indexOf(id) !== -1)\n        );\n    }\n\n    createCustomFields = (searchQuery) => {\n        let customFieldsQuery = \"\";\n        if (searchQuery.length) {\n            let searchList = searchQuery.toString().split(\"&\");\n            searchQuery = \"\";\n            searchList.map(e => {\n                if (e.length) {\n                    if (e.includes(\"cstmfld\")) {\n                        customFieldsQuery = customFieldsQuery + (customFieldsQuery.length ? \"#\" : \"\") + e.replace(\"cstmfld\", \"\");\n                    } else {\n                        searchQuery = searchQuery + \"&\" + e;\n                    }\n                }\n            });\n        }\n        return [searchQuery, customFieldsQuery];\n    };\n\n    getTrStyles(row) {\n        return {\n            /*    backgroundColor: (\n                    (this.props.selectedList && this.props.selectedList.indexOf(row.id) !== -1) ? \"#ffc\" : \"#f9f9f9\"\n                )*/\n        };\n    }\n\n    setSelectedDepts(url) {\n        let self = this;\n        let selectedDepts = self.state.selectedDepts;\n        if (selectedDepts) {\n            Object.keys(selectedDepts).map(dept => {\n                if (selectedDepts[dept]) {\n                    if (self.state.selectedAuthorizationWay === authorizationWays.EXPENDITURE) {\n                        url = url + '&expenditureDepartment_id=' + dept;\n                    } else {\n                        url = url + '&department_id=' + dept;\n                    }\n                }\n            });\n        }\n        return url;\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let searchQueryResult = self.createCustomFields(searchQuery);\n        let url = '?page=' + page + '&size=' + size + searchQueryResult[0] + sortStr +\n            '&customFields=' + searchQueryResult[1];\n        url = self.setSelectedDepts(url);\n        let params = {\n            url: '/employee/readActiveEmployeeAll' + url,\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: (response.data && response.data.page) ? response.data.page.totalElements : 0,\n                    content: (response.data && response.data.page) ? response.data.page.content : [],\n                    totalIdList: response.data ? response.data.selectedIdList : [],\n                    loading: false,\n                    searching: false\n                });\n            })\n            .catch(function (error) {\n                self.setState({loading: false, searching: false});\n                showAxiosError(error);\n            });\n    }\n\n    searchWithKey(e) {\n        this.setState({searchKey: e.target.value, manual: true});\n    }\n\n    handleSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            searching: true,\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.removeMonth === true && !!this.state.sessionMonth) {\n            this.setState({sessionMonth: null});\n            this.props.setRemoveMonthOff();\n        }\n    }\n\n    zipAndUploadFiles = () => {\n        let self = this;\n        let fileList = self.state.fileList;\n        const zip = require('jszip')();\n        fileList.forEach(file => {\n            zip.file(file.name, file.content);\n        });\n        zip.generateAsync({\n            type: 'arrayBuffer',\n            compression: 'DEFLATE',\n            compressionOptions: {\n                level: 9\n            }\n        }).then(content => {\n            let file = {\n                content:\n                    new File(\n                        [new Blob([content], {type: \"application/zip\"})],\n                        \"yuklenenDokumanlar.zip\",\n                        {type: \"application/zip\", lastModified: Date.now()}),\n                name: \"zipFile.zip\",\n                size: 1\n            };\n            fileList = [];\n            fileList.push(file);\n            let formData = new FormData();\n            formData.append(\"content\", file.content);\n            formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n            formData.append(\"totalCount\", 1);\n            formData.append(\"employeeUserIds\",self.state.selection);\n\n            let params = {\n                url: `/bordrosession/sendBordroFiles`,\n                method: 'post',\n                cancelToken: self._source.token,\n                data: formData\n            };\n            fileList[0] = {\n                status: \"processing\",\n                statusText: \"Gönderim başlatıldı.\",\n                name: file.name,\n                size: file.size,\n                content: file.content,\n            };\n            self.setState({btnDisabled: true, fileList});\n            requestK(params)\n                .then(function (response) {\n                    let document = fileList[0];\n                    fileList[0] = {\n                        status: \"success\",\n                        statusText: \"Gönderim başarılı.\",\n                        name: document.name,\n                        size: document.size,\n                        content: document.content,\n                    };\n                    self.setState({fileList, id: response.data, btnDisabled: false});\n                    self.props.toggleModal(true, true);\n                    if (self.props.newSession) {\n                        self.props.toggleModal(false, true);\n                        self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n                        self.props.loadBordroSession();\n                    }\n                })\n                .catch(function (error) {\n                    if (!axios.isCancel(error)) {\n                        file.status = \"error\";\n                        file.statusText = error.data;\n                        fileList[0] = {\n                            status: \"error\",\n                            statusText: error.data,\n                            name: file.name,\n                            size: file.size,\n                            content: file.content,\n                        };\n                        self.setState({fileList: fileList, btnDisabled: false});\n                        showAxiosError(error);\n                    }\n                });\n\n        });\n    };\n\n\n    sendNextBordroFile(index, firstCycle, total) {\n        if (this.props.newSession && !moment(this.state.sessionMonth, \"YYYY/MM\", true).isValid()) {\n            showAxiosError({message: 'Ücret Bordrosu Dönemi alanına YYYY/AA formatında geçerli bir değer giriniz.'});\n        } else {\n            let self = this;\n            this._source = axios.CancelToken.source();\n            let fileList = self.state.fileList;\n            let totalCount;\n            if (total === 0)\n                totalCount = fileList.length;\n            else\n                totalCount = total;\n            if (index < fileList.length) {\n                let document1 = fileList[index];\n                if(document1.size< 75 * 1024 * 1024){\n                    let formData = new FormData();\n                    formData.append(\"content\", document1.content);\n                    formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n                    formData.append(\"totalCount\", totalCount);\n                    formData.append(\"employeeUserIds\", self.state.selection);\n\n                    let params = {\n                        url: `/bordrosession/sendBordroFiles`,\n                        method: 'post',\n                        cancelToken: self._source.token,\n                        data: formData\n                    };\n                    fileList[index] = {\n                        status: \"processing\",\n                        statusText: \"Gönderim başlatıldı.\",\n                        name: document1.name,\n                        size: document1.size,\n                        content: document1.content,\n                    };\n                    self.setState({btnDisabled: true, fileList: fileList});\n                    requestK(params)\n                        .then(function (response) {\n                            let document = fileList[index];\n                            fileList[index] = {\n                                status: \"success\",\n                                statusText: \"Gönderim başarılı.\",\n                                name: document.name,\n                                size: document.size,\n                                content: document.content,\n                            };\n                            self.setState({fileList, index: (index + 1)});\n                            firstCycle && self.setState({id: response.data});\n                            if (index + 1 < fileList.length) {\n                                if ((index + 1) % 5 === 0) {\n                                    fileList.splice(0, 4);\n                                    self.setState({realIndex: (self.state.realIndex + 4)});\n                                    self.sendNextBordroFile((index + 1) - 4, false, totalCount);\n                                } else {\n                                    self.sendNextBordroFile(index + 1, false, totalCount);\n                                }\n                            } else {\n                                self.setState({btnDisabled: false, index: index + 1});\n                                if (self.props.newSession) {\n                                    self.props.toggleModal(false, true);\n                                    self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n                                    self.props.loadBordroSession();\n                                } else {\n                                    if (fileList[index].status === \"success\")\n                                        self.props.toggleModalWithTimeout(false, true);\n                                }\n                            }\n                        })\n                        .catch(function (error) {\n                            if (!axios.isCancel(error)) {\n                                document1.status = \"error\";\n                                document1.statusText = error.data;\n                                fileList[index] = {\n                                    status: \"error\",\n                                    statusText: error.data,\n                                    name: document1.name,\n                                    size: document1.size,\n                                    content: document1.content,\n                                };\n                                self.setState({fileList: fileList, btnDisabled: false});\n                                showAxiosError(error);\n                            }\n                        });\n                }else{\n                    Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                }\n            } else {\n                Alert.success('Tüm dokümanlar kaydedildi.', {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            }\n\n        }\n    }\n\n    onCancel() {\n        if (this._source)\n            this._source.cancel();\n\n        if (this.state.index > 0) {\n            this.props.toggleModal(false, true);\n        } else {\n            this.props.toggleModal(false, false);\n        }\n    }\n\n    onDrop(acceptedFiles, rejectedFiles) {\n        let self = this;\n        if (!!acceptedFiles) {\n            self.setState({processing: true, uploadBtnDisabled: true, fileList: []});\n            let fileList = [];\n            for (let i = 0; i < acceptedFiles.length; i++) {\n                fileList.push({content: acceptedFiles[i], name: acceptedFiles[i].name, size: acceptedFiles[i].size});\n            }\n            self.setState({processing: false, uploadBtnDisabled: false, fileList: fileList, index: 0, realIndex: 0});\n        }\n    }\n\n    getStatusRender(status) {\n        let className = (status === \"processing\" ? \"spinner fa-spin\" : (status === \"success\" ? \"check\" : (status === \"error\" ? \"close\" : \"pause\")));\n        let color = (status === \"processing\" ? \"dark\" : (status === \"success\" ? \"green\" : (status === \"error\" ? \"red\" : \"dark\")));\n        return (<i className={\"fas fa-\" + className} style={{color: color, paddingRight: \"4px\"}}></i>);\n    }\n\n    // activeJoyride(){\n    //     this.setState({joyrideActive:true})\n    // }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false)\n            this.setState({joyrideActive: true})\n        // else\n        //     this.setState({ joyrideActive: false })\n    }\n\n    callback(data) {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.activateJoyride();\n        }\n    }\n\n    changeLocation(e) {\n        this.setState({location: e.target.value});\n    }\n\n    render() {\n        let steps = this.props && this.props.newSession ? this.state.steps : this.state.steps2;\n        let locale = this.state.locale;\n        let pageIdList = [], dublicateList = [], tempList = [];\n        if (this.state.content && this.state.content instanceof Array) {\n            this.state.content.map(e => {\n                if (!e.name || e.statusType === \"ACTIVE\") {\n                    pageIdList.push(e.id);\n                }\n                if (!tempList.includes(e.tckn)) {\n                    tempList.push(e.tckn);\n                } else if (!dublicateList.includes(e.tckn)) {\n                    dublicateList.push(e.tckn)\n                }\n            });\n        }\n        const fieldList = [\n            {\n                label: \"İsim\",\n                accessor: \"name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"TCKN\",\n                accessor: \"tckn\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n            {\n                label: \"Soyisim\",\n                accessor: \"surname\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Departman\",\n                accessor: \"department_name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Görev\",\n                accessor: \"jobTitle\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.jobTitlesData\n            },\n            {\n                label: \"Cinsiyet\",\n                accessor: \"gender\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: genderData()\n            },\n            {\n                label: \"İşe Başlama Tarihi (Başlangıç)\",\n                accessor: \"min_employmentStartDate\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"date\",\n                operator: \">=\",\n            },\n            {\n                label: \"İşe Başlama Tarihi (Bitiş)\",\n                accessor: \"max_employmentStartDate\",\n                type: \"date\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Çalışma Şekli\",\n                accessor: \"employmentStatus\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Adres\",\n                accessor: \"address\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Eğitim Durumu\",\n                accessor: \"educationLevel\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Askerlik Durumu\",\n                accessor: \"militaryStatus\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Doğum Tarihi (Başlangıç)\",\n                accessor: \"min_dateOfBirth\", //min_xxx MUST ALWAYS come before the max_xxx, if it exists.\n                type: \"date\",\n                operator: \">=\",\n            },\n            {\n                label: \"Doğum Tarihi (Bitiş)\",\n                accessor: \"max_dateOfBirth\",\n                type: \"date\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Doğum Yeri\",\n                accessor: \"cityOfBirth\",\n                type: \"text\",\n                operator: \"=\",\n            }\n        ];\n        let columnList = [\n            {\n                Header: (\n                    <DropdownCheck selectionIdList={this.state.selection}\n                                   totalIdList={this.state.totalIdList}\n                                   pageIdList={pageIdList}\n                                   onChange={e => this.setState({selection: e})}/>\n                ),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.content &&\n                    <input type=\"checkbox\" checked={this.isSelected(row.id)}\n                           disabled={this.props.selectedList && this.props.selectedList.indexOf(row.id) !== -1}\n                           onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}/>)\n            },\n            {\n                Header: \"Ad\",\n                accessor: \"name\",\n                Cell: row => (<div style={{margin: 0}}><TextOverFlowTooltip text={row.name} maxLength={15}/></div>)\n            },\n            {\n                Header: \"Soyad\",\n                accessor: \"surname\",\n                Cell: row => (<div style={{margin: 0}}><TextOverFlowTooltip text={row.surname} maxLength={15}/></div>)\n            },\n            {\n                Header: \"Departman\",\n                accessor: \"department\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.department &&\n                        <TextOverFlowTooltip text={row.department.name} maxLength={15}/>}</div>)\n            },\n            {\n                Header: \"Görev\",\n                accessor: \"jobTitle\",\n                Cell: row => (<div style={{margin: 0}}><TextOverFlowTooltip text={row.jobTitle} maxLength={15}/></div>)\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"tckn\"\n            },\n            {\n                Header: \"Departman\",\n                accessor: \"expenditureDepartment\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.department &&\n                        <TextOverFlowTooltip text={row.department.name} maxLength={15}/>}</div>)\n            },\n            {\n                Header: \"Durum\",\n                accessor: \"statusType\",\n                Cell: row => (\n                    <div>\n                        <span>{statusTypeFilterData().map(function (e) {\n                            if (e.value === row.statusType) return e.label\n                        })}</span>\n                    </div>)\n            },\n        ];\n        let columns = renewListForDepartment(this, columnList, \"accessor\");\n        let fields = renewListForDepartment(this, fieldList, \"accessor\");\n        addCustomFields(this.state.titleFilterList, fieldList);\n        return (\n            <DefaultModal\n                isOpen={this.props.modal}\n                disabled={\n                    this.state.btnDisabled ||\n                    (this.state.fileList && this.state.fileList.length === 0) || (this.state.selection && this.state.selection.length === 0) ||\n                    (this.props.newSession && !this.state.sessionMonth)}\n                title=\"Ücret Dosyalarını Yükleme\"\n                size=\"lg\"\n                modalBodyStyle={{padding: \"0\", minHeight: \"500px\"}}\n                secondaryButton={<button className=\"helpButton\" onClick={() => {\n                    this.activateJoyride()\n                }} style={{position: \"absolute\", right: \"70px\", alignSelf: \"center\", marginTop: \"-5px\"}}>\n                    <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                    <i className=\"far fa-question-circle helpButtonIcon\" style={{opacity: \".5\"}}/></button>}\n                confirmBtnText=\"Doküman(lar)ı Yükle\"\n                cancelBtnText=\"Kapat\"\n                onConfirm={(e) => this.sendNextBordroFile(this.state.index, true, 0)}\n                onCancel={(e) => this.props.toggleModal(false, false)}>\n                <Row>\n                    {this.state.joyrideActive &&\n                        <Joyride\n                            disableBeacon={true}\n                            autoStart\n                            locale={locale}\n                            steps={steps}\n                            continuous={true}\n                            run={this.state.shouldRun}\n                            scrollToFirstStep={true}\n                            showProgress={true}\n                            showSkipButton={true}\n                            scrollToSteps={true}\n                            disableCloseOnEsc={true}\n                            disableOverlay={false}\n                            disableOverlayClicks={false}\n                            keyboardNavigation={true}\n                            hideBackButton={false}\n                            disableOverlayClose={true}\n                            callback={this.callback}\n                            holePadding={0}\n                            shouldRun={this.state.shouldRun}\n                            styles={{\n                                options: {\n                                    zIndex: 100000,\n                                    primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                                }\n                            }}\n\n                        />\n                    }\n                    {this.props.newSession &&\n                        <div className=\" col-sm-12 row\" style={{marginTop: \"15px\"}}>\n                            <div className=\"col-sm-4\"/>\n                            <div className=\"col-sm-8 row\">\n                                <div className=\"col-sm-4\">\n                                    Dönem\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    <Datetime timeFormat={false} dateFormat=\"YYYY-MM\" closeOnSelect={true}\n                                              inputProps={{placeholder: 'YIL/AY'}}\n                                              value={this.state.sessionMonth}\n                                              renderMonth={this.props.renderMonth}\n                                              isValidDate={function (current) {\n                                                  return current.startOf('month').isSameOrBefore(Datetime.moment().startOf('month'));\n                                              }}\n                                              onChange={(e) => {\n                                                  this.setState({sessionMonth: e});\n                                                  this.props.onMonthChange(e)\n                                              }}/>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-2\"/>\n                        </div>}\n                    {this.props.newSession &&\n                        <div className=\" col-sm-12 row\" style={{marginTop: \"15px\"}}>\n                            <div className=\"col-sm-4\"/>\n                            <div className=\"col-sm-8 row\">\n                                <div className=\"col-sm-4\">\n                                    Lokasyon\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    <Input type=\"text\" name=\"location\"\n                                           value={this.state.location}\n                                           onChange={this.changeLocation}/>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-2\"/>\n                        </div>}\n                    <Col sm=\"12\" style={{paddingTop: \"15px\", paddingRight: \"32px\", paddingLeft: \"32px\"}}>\n                        <Dropzone\n                            accept=\".pdf\"\n                            activeClassName=\"dropzoneActiveClass\"\n                            className=\"FormRenk col-sm-12\"\n                            multiple={true}\n                            disabled={this.state.btnDisabled}\n                            onDrop={this.onDrop}>\n                            <div className=\"dropzoneInnerArea\">\n                                Ücret dosyalarını (.pdf) yükleyiniz.\n                            </div>\n                        </Dropzone>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" style={{\n                        paddingTop: \"0px\",\n                        paddingRight: \"15px\",\n                        paddingLeft: \"15px\",\n                        maxHeight: '500px',\n                        overflow: \"auto\"\n                    }}>\n                        <table className=\"\" style={{textAlign: 'center', paddingBottom: \"5px\"}}>\n                            <thead>\n                            <tr style={{backgroundColor: '#ebedf0'}}>\n                                <th width=\"5%\">#</th>\n                                <th>Dosya Adı</th>\n                                <th>Dosya Boyutu</th>\n                                <th>Durum</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.fileList && this.state.fileList.map((document, index) =>\n                                <tr key={index + \"_\" + document.name + \"_\" + document.size}>\n                                    <td>{index + 1}</td>\n                                    <td style={{margin: \"0px\", textAlign: \"left\"}}>{<TextOverFlowTooltip\n                                        text={document.name || \"-\"}\n                                        maxLength={30}/>}</td>\n                                    <td\n                                        style={{margin: \"0px\"}}>{(new Decimal(new Decimal(document.size / 1024 / 1024).toFixed(2))).toNumber() + \" MB\"}</td>\n                                    <td\n                                        style={{margin: \"0px\"}}>{this.getStatusRender(document.status)}{(document.statusText || \"Gönderim bekliyor\")}</td>\n                                </tr>\n                            )}\n                            {!this.state.processing && (this.state.fileList && this.state.fileList.length === 0) &&\n                                <tr>\n                                    <td colSpan=\"8\">Kayıt bulunamadı</td>\n                                </tr>\n                            }\n                            {this.state.processing &&\n                                <tr>\n                                    <td colSpan=\"8\">Doküman işleniyor...</td>\n                                </tr>\n                            }\n                            </tbody>\n                        </table>\n                    </Col>\n                    <Col sm=\"12\">\n                        <p style={{float: \"right\"}}>Toplam\n                            Adet: {this.state.fileList ? this.state.fileList.length : 0}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\">\n                        <DetailedSearch fields={fields}\n                                        loading={this.state.loading}\n                                        onSearch={this.handleSearch}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\">\n                        <div className=\"col-xs-12\" style={{marginTop: '20px'}}>\n                            <Table columns={columns}\n                                   content={this.state.content}\n                                   loading={this.state.loading}\n                                   total={this.state.total}\n                                   page={this.state.page}\n                                   manual={this.state.manual}\n                                   size={this.state.size}\n                                   options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                                   fetchData={this.fetchData}\n                                   getTrStyles={this.getTrStyles}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n\n            </DefaultModal>\n        );\n    }\n}\n\nexport default UploadBordroFileModalWithoutTckn;\n\n","import React, {Component} from 'react';\nimport {CardBody, CardHeader, CardTitle, Col, Modal, ModalBody, ModalHeader, Nav, Row, Input} from 'reactstrap';\nimport 'react-table/react-table.css'\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport 'react-datetime/css/react-datetime.css'\nimport 'moment/locale/tr'\nimport BordroTable from '../bordro/component/BordroTable';\nimport BordroFileTable from './component/BordroFileTable';\nimport {create_UUID, monthName, showAxiosError} from \"../../../helper/helper\";\nimport ReactLoading from 'react-loading';\nimport Alert from 'react-s-alert';\nimport StickButton from \"../../../components/StickButton\";\nimport moment from \"moment\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport UploadBordroFileModal from \"./component/UploadBordroFileModal\";\nimport {LOADED, LOADERROR, LOADSTARTED, READYTOBESENT, SENT, stateCompare} from \"../common/PeykHelper\";\nimport Joyride from \"react-joyride\";\nimport NavBarKS from \"../../../components/NavBarKS\";\nimport VideoModal from \"../../../components/VideoModal\";\nimport ChangeLocation from \"./component/ChangeLocation\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport UploadBordroFileModalWithoutTckn from \"./component/UploadBordroFileModalWithoutTckn\";\nimport {Decimal} from \"decimal.js\";\nimport Datetime from \"react-datetime\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\n\nclass BordroImportPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = BordroImportPage.newCleanState();\n\n        this.onDrop = this.onDrop.bind(this);\n        this.callback = this.callback.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.changeLocation = this.changeLocation.bind(this);\n        this.sendNextBordroFile = this.sendNextBordroFile.bind(this);\n\n        this.load = this.load.bind(this);\n        this.sign = this.sign.bind(this);\n        this.manualPdfSign = this.manualPdfSign.bind(this);\n        this.showWarning = this.showWarning.bind(this);\n        this.renderMonth = this.renderMonth.bind(this);\n        this.deleteClicked = this.deleteClicked.bind(this);\n        this.downloadMedia = this.downloadMedia.bind(this);\n        this.downloadExcel = this.downloadExcel.bind(this);\n        this.uploadBordroFile = this.uploadBordroFile.bind(this);\n        this.uploadBordroFileWithoutTckn = this.uploadBordroFileWithoutTckn.bind(this);\n        this.waitIfMimeSending = this.waitIfMimeSending.bind(this);\n        this.addSelectionToState = this.addSelectionToState.bind(this);\n        this.uploadBordroSessionFile = this.uploadBordroSessionFile.bind(this);\n        this.checkSessionMonthIsUsed = this.checkSessionMonthIsUsed.bind(this);\n        this.readBordroSessionDateAll = this.readBordroSessionDateAll.bind(this);\n        this.refreshBordroSessionInfo = this.refreshBordroSessionInfo.bind(this);\n        this.sessionAndEmployeeListChecker = this.sessionAndEmployeeListChecker.bind(this);\n        this.refreshBordroSessionDublicateInfo = this.refreshBordroSessionDublicateInfo.bind(this);\n        this.callback = this.callback.bind(this);\n        this.checkCustomerSmsCreditAndSent = this.checkCustomerSmsCreditAndSent.bind(this);\n        this.checkCustomerSmsCreditAndSentManuel = this.checkCustomerSmsCreditAndSentManuel.bind(this);\n    }\n\n    checkCustomerSmsCreditAndSent() {\n        let self = this;\n        let params = {\n            url: `/bordro/checkCustomerSmsCredit`,\n            method: \"post\",\n            data: self.state.selection\n        };\n        requestK(params)\n            .then(function (response) {\n                if (self.isNotEminEczanesi()) {\n                    self.sign()\n                } else {\n                    self.manualPdfSign()\n                }\n                (!self.state.selection || self.state.selection <= 0) &&\n                self.showWarning(\"İletilerinin oluşturulup imzalanması istenen ücret bordrolarını seçiniz.\")\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    checkCustomerSmsCreditAndSentManuel() {\n        let self = this;\n        let params = {\n            url: `/bordro/checkCustomerSmsCredit`,\n            method: \"post\",\n            data: self.state.bordroSession.id\n        };\n        requestK(params)\n            .then(function (response) {\n                self.manualPdfSign();\n                (!self.state.selection || self.state.selection <= 0) &&\n                self.showWarning(\"İletilerinin oluşturulup imzalanması istenen ücret bordrolarını seçiniz.\")\n\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    static newCleanState() {\n        return {\n            monthlyBordros: null,\n            removeMonth: false,\n            bordroSession: null,\n            loading: false,\n            sessionToBeCreated: true,\n            isMimeSending: false,\n            isPdfsParsing: false,\n            bordroSessionInfo: {\n                totalCount: 0,\n                sentCount: 0,\n                signedCount: 0,\n                unpairedCount: 0,\n                dublicatedCount: 0,\n                locaton: \"\",\n            },\n            manual: false,\n            selection: [],\n            conditionalList: [],\n            declineList: [],\n            totalPdfCountIdList: [],\n            isHsmOwner: false,\n            isKepOwner: false,\n            alert: null,\n            index: 0,\n            location:\"\",\n            steps: [\n                {\n                    target: '.content',\n                    content: \"Çalışanlarınıza ücret bordrosu gönderimi yapmak için, toplu veya ayrı ayrı olan ücret bordrolarını pdf veya xlsx uzantılı olarak yükleme yapınız.\",\n                    placement: \"center\",\n                },\n                {\n                    target: '.form-control',\n                    content: \"Bordro dönemini buradan seçebilirsiniz.\",\n                    placement: \"auto\",\n                },\n                {\n                    target: '.dropzoneInnerArea',\n                    content: 'Ücret bordrolarınızı sürükle-bırak veya bu alana tıklayarak yükleyebilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.kaydet',\n                    content: 'Dönem ve yüklenecek dosyalar seçildikten sonra yüklemeyi başlatabilirsiniz.',\n                    placement: \"auto\",\n                }\n            ],\n            steps2: [\n                {\n                    target: '.FormRenk',\n                    content: \"\\\"Ücret Bordrosu Dönem İşlemi\\\" sayfasında bordro gönderim işlemleri yürütülür.\",\n                    placement: \"center\",\n                },\n                {\n                    target: '.Gonder',\n                    content: 'Seçtiğiniz bordroların imzalanıp gönderilmesi buradan sağlanır.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.Yenile',\n                    content: 'Bordrolarınızın son gönderim durumlarını görmek için tıklayabilirsiniz. ',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.show #left-dropdown-menu:nth-child(1)',\n                    content: 'Dönem işlemine daha fazla dosya eklemek için buraya tıklabilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.show #left-dropdown-menu:nth-child(2)',\n                    content: 'Henüz onaylanmamış ve beklemede olan bordrolarınız için alıcılara uyarı iletisi gönderebilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.show #left-dropdown-menu:nth-child(3)',\n                    content: 'Tüm dokümananları zip dosyası halinde bilgisayarınıza indirebilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.show #left-dropdown-menu:nth-child(4)',\n                    content: 'Dönem işlemini ve dosyalarını buradan silebilirsiniz. Gönderilmiş bir dosya var ise dönem işlemi silinemez.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '.show #left-dropdown-menu:nth-child(5)',\n                    content: 'Aşağıda seçili olan bordroları silmek için tıklayabilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '#indirBtn',\n                    content: 'Dönem işleminde bordrosu olmayan çalışanlarınızın listesi için tıklayabilirsiniz.',\n                    placement: \"auto\",\n                },\n\n            ],\n            steps3: [\n                {\n                    target: '#left-dropdown-menu',\n                    content: \"\\\"Ücret Bordrosu Dönem İşlemi\\\" sayfasında bordro gönderim işlemleri yürütülür.\",\n                    placement: \"center\",\n                },\n                {\n                    target: '#left-dropdown-menu:nth-child(1)',\n                    content: 'Dönem işlemine daha fazla dosya eklemek için buraya tıklabilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '#left-dropdown-menu:nth-child(2)',\n                    content: 'Seçtiğiniz bordroların imzalanıp gönderilmesi buradan sağlanır.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '#left-dropdown-menu:nth-child(3)',\n                    content: 'Henüz onaylanmamış ve beklemede olan bordrolarınız için alıcılara uyarı iletisi gönderebilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '#left-dropdown-menu:nth-child(4)',\n                    content: 'Bordrolarınızın son gönderim durumlarını görmek için tıklayabilirsiniz. ',\n                    placement: \"auto\",\n                },\n                {\n                    target: '#left-dropdown-menu:nth-child(5)',\n                    content: 'Tüm dokümananları zip dosyası halinde bilgisayarınıza indirebilirsiniz.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '#left-dropdown-menu:nth-child(6)',\n                    content: 'Dönem işlemini ve dosyalarını buradan silebilirsiniz. Gönderilmiş bir dosya var ise dönem işlemi silinemez.',\n                    placement: \"auto\",\n                },\n                {\n                    target: '#indirBtn',\n                    content: 'Dönem işleminde bordrosu olmayan çalışanlarınızın listesi için tıklayabilirsiniz.',\n                    placement: \"auto\",\n                },\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n                open: 'Devam Et'\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            width: window.innerWidth,\n            flag: 0,\n            showEczaciHelpModal: false,\n            video: null,\n            stop: null,\n            signStatistic: {success: 0, fail: 0}\n        }\n    }\n\n    videos = [\n        {title: \"Ücret bordrosunu nasıl yüklerim?\", id: \"lTjRaQZI4_Y\"},\n    ];\n\n    videos2 = [\n        {title: \"Nasıl dosya yükleyebilirim?\", id: \"lTjRaQZI4_Y\"},\n        {title: \"Belge gönderimini nasıl yaparım?\", id: \"zGgh_nCEWAI\"},\n        {title: \"'Tekrar Gönder' ne işe yarar?\", id: \"KRUBAJDI04A\"},\n        {title: \"Belgelerimin gönderim durumunu nasıl görüntülerim?\", id: \"vRaOsVQZUfE\"},\n    ];\n    switchVideo = (video) => {\n        this.setState({video: video, showEczaciHelpModal: true})\n    };\n    updateDimensions = () => {\n        this.setState({width: window.innerWidth});\n    };\n    deleteBordro = () => {\n        let self = this;\n        self.state.selection.length > 0 ? this.deleteList(self.state.selection, \"disabledDeleteBtn\") :\n            Alert.warning(\"Şeçilmiş olan bir bordro yoktur, Lütfen bordro seçiniz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            }) && self.setState({alert: null});\n    };\n    deleteList = (list, disabledBtnType) => {\n        let self = this;\n        let params = {\n            url: `/bordro/deleteBordroList`,\n            method: \"post\",\n            data: list\n        };\n        self.setState({[disabledBtnType]: true, alert: null});\n\n        requestK(params)\n            .then(function (response) {\n                let message = response.data;\n                self.setState({\n                    selection: [],\n                    selectedAll: false,\n                    manual: true,\n                    [disabledBtnType]: false,\n                    alert: null\n                });\n                Alert.success(response.data, {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({[disabledBtnType]: false});\n        });\n    };\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.removeMonth === true && !!this.state.sessionMonth) {\n            this.setState({sessionMonth: null});\n            this.props.setRemoveMonthOff();\n        }\n    }\n\n    zipAndUploadFiles = () => {\n        let self = this;\n        let fileList = self.state.fileList;\n        const zip = require('jszip')();\n        fileList.forEach(file => {\n            zip.file(file.name, file.content);\n        });\n        zip.generateAsync({\n            type: 'arrayBuffer',\n            compression: 'DEFLATE',\n            compressionOptions: {\n                level: 9\n            }\n        }).then(content => {\n            let file = {\n                content:\n                    new File(\n                        [new Blob([content], {type: \"application/zip\"})],\n                        \"yuklenenDokumanlar.zip\",\n                        {type: \"application/zip\", lastModified: Date.now()}),\n                name: \"zipFile.zip\",\n                size: 1};\n            fileList = [];\n            fileList.push(file);\n            let formData = new FormData();\n            let methodCall;\n\n            if (this.state.sessionToBeCreatedn) {\n                formData.append(\"content\", file.content);\n                formData.append(\"year\", self.state.sessionMonth.year().toString());\n                formData.append(\"month\", (self.state.sessionMonth.month() + 1).toString());\n                formData.append(\"totalCount\", 1);\n                formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n                methodCall = \"/create\";\n\n            } else {\n                formData.append(\"content\", file.content);\n                formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n                formData.append(\"totalCount\", 1);\n                methodCall = \"/sendNextBordroFile\";\n            }\n\n            let params = {\n                url: `/bordrosession${methodCall}`,\n                method: 'post',\n                cancelToken: self._source.token,\n                data: formData\n            };\n            fileList[0] = {\n                status: \"processing\",\n                statusText: \"Gönderim başlatıldı.\",\n                name: file.name,\n                size: file.size,\n                content: file.content,\n            };\n            self.setState({btnDisabled: true, fileList});\n            requestK(params)\n                .then(function (response) {\n                    let document = fileList[0];\n                    fileList[0] = {\n                        status: \"success\",\n                        statusText: \"Gönderim başarılı.\",\n                        name: document.name,\n                        size: document.size,\n                        content: document.content,\n                    };\n                    self.setState({fileList, id: response.data, btnDisabled: false});\n                    self.props.toggleModal(true, true);\n                    if (this.state.sessionToBeCreated) {\n                        self.props.toggleModal(false, true);\n                        self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n                        self.props.loadBordroSession();\n                    }\n                })\n                .catch(function (error) {\n                    if (!axios.isCancel(error)) {\n                        file.status = \"error\";\n                        file.statusText = error.data;\n                        fileList[0] = {\n                            status: \"error\",\n                            statusText: error.data,\n                            name: file.name,\n                            size: file.size,\n                            content: file.content,\n                        };\n                        self.setState({fileList: fileList, btnDisabled: false});\n                        showAxiosError(error);\n                    }\n                });\n\n        });\n    };\n\n    // sendNextBordroFile() {\n    //   if (this.props.newSession && !moment(this.state.sessionMonth, \"YYYY/MM\", true).isValid()) {\n    //     showAxiosError({message: 'Ücret Bordrosu Dönemi alanına YYYY/AA formatında geçerli bir değer giriniz.'});\n    //   } else {\n    //     this._source = axios.CancelToken.source();\n    //     this.zipAndUploadFiles();\n    //   }\n    // }\n\n    sendNextBordroFile = (index, firstCycle, total) => {\n        if (this.state.sessionToBeCreated && !moment(this.state.sessionMonth, \"YYYY/MM\", true).isValid()) {\n            showAxiosError({message: 'Ücret Bordrosu Dönemi alanına YYYY/AA formatında geçerli bir değer giriniz.'});\n        } else {\n            let self = this;\n            this._source = axios.CancelToken.source();\n            let fileList = self.state.fileList;\n            let totalCount;\n            if (total === 0)\n                totalCount = fileList.length;\n            else\n                totalCount = total;\n\n            let allPdf = true;\n            let allXlsx = true;\n            for (let i = 0; i < totalCount; i++) {\n                let fileName = fileList[i].name;\n                if (!fileName.toLowerCase().endsWith(\".pdf\")) {\n                    allPdf = false;\n                }\n                if (!fileName.toLowerCase().endsWith(\".xlsx\")) {\n                    allXlsx = false;\n                }\n            }\n            if (totalCount > 1 && allPdf) {\n                let totalFileSize = 0;\n                fileList.forEach(file => {\n                    totalFileSize += file.size;\n                });\n                if(totalFileSize < 75 * 1024 * 1024){\n                    let formData = new FormData();\n                    fileList.forEach(file => {\n                        formData.append(\"files\", file.content);\n                    });\n                    if (!self.props.id) {\n                        formData.append(\"year\", this.state.sessionMonth.year().toString());\n                        formData.append(\"month\", (this.state.sessionMonth.month() + 1).toString());\n                        formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n                    }else{\n                        formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n                    }\n\n                    let methodCall = \"/createOrSendNextBordroFile\";\n\n                    let params = {\n                        url: `/bordrosession${methodCall}`,\n                        method: 'post',\n                        cancelToken: self._source.token,\n                        data: formData\n                    };\n\n                    fileList.forEach((document, index) => {\n                        fileList[index] = {\n                            status: \"processing\",\n                            statusText: \"Gönderim başlatıldı.\",\n                            name: document.name,\n                            size: document.size,\n                            content: document.content,\n                        };\n                    });\n\n                    self.setState({btnDisabled: true, fileList: fileList});\n                    this.timerStatus(true);\n\n                    requestK(params)\n                        .then(function (response) {\n                            fileList.forEach((document, index) => {\n                                fileList[index] = {\n                                    status: \"success\",\n                                    statusText: \"Gönderim başarılı.\",\n                                    name: document.name,\n                                    size: document.size,\n                                    content: document.content,\n                                };\n                            });\n                            self.setState({fileList});\n                            firstCycle && self.setState({id: response.data});\n                            self.setState({btnDisabled: false});\n                            self.props.history.push(`/${self.props.peykName}/bordroimport/${response.data}`);\n                            self.load();\n                        })\n                        .catch(function (error) {\n                            if (!axios.isCancel(error)) {\n                                fileList.forEach((document, index) => {\n                                    document.status = \"error\";\n                                    document.statusText = error.data;\n                                    fileList[index] = {\n                                        status: \"error\",\n                                        statusText: error.data,\n                                        name: document.name,\n                                        size: document.size,\n                                        content: document.content,\n                                    };\n                                });\n                                self.setState({fileList, btnDisabled: false});\n                                showAxiosError(error);\n                                this.timerStatus(false);\n                            }\n                        });\n                }else {\n                    Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                    this.timerStatus(false);\n                }\n            }else if(totalCount>1 && !allPdf && allXlsx){\n                Alert.warning('.xlsx olarak sadece bir dosya yüklenebilir.', {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                this.timerStatus(false);\n            }else if(totalCount>1 && !allPdf && !allXlsx){\n                Alert.warning('.pdf ve .xlsx dosyaları birlikte yüklenemez.', {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                this.timerStatus(false);\n            } else {\n                if (index < fileList.length) {\n                    let document1 = fileList[index];\n                    if(document1.size< 75 * 1024 * 1024){\n                        let formData = new FormData();\n                        let methodCall;\n\n                        if (this.state.sessionToBeCreated && firstCycle) {\n                            formData.append(\"content\", document1.content);\n                            formData.append(\"year\", this.state.sessionMonth.year().toString());\n                            formData.append(\"month\", (this.state.sessionMonth.month() + 1).toString());\n                            formData.append(\"totalCount\", totalCount);\n                            formData.append(\"location\", !!self.state.location ? self.state.location : \"\");\n                            methodCall = \"/create\";\n\n                        } else {\n                            formData.append(\"content\", document1.content);\n                            formData.append(\"id\", self.props.id ? self.props.id : self.state.id);\n                            formData.append(\"totalCount\", totalCount);\n                            methodCall = \"/sendNextBordroFile\";\n                        }\n\n                        let params = {\n                            url: `/bordrosession${methodCall}`,\n                            method: 'post',\n                            cancelToken: self._source.token,\n                            data: formData\n                        };\n                        fileList[index] = {\n                            status: \"processing\",\n                            statusText: \"Gönderim başlatıldı.\",\n                            name: document1.name,\n                            size: document1.size,\n                            content: document1.content,\n                        };\n                        self.setState({btnDisabled: true, fileList: fileList});\n                        this.timerStatus(true);\n                        requestK(params)\n                            .then(function (response) {\n                                let document = fileList[index];\n                                fileList[index] = {\n                                    status: \"success\",\n                                    statusText: \"Gönderim başarılı.\",\n                                    name: document.name,\n                                    size: document.size,\n                                    content: document.content,\n                                };\n                                self.setState({fileList, index: (index + 1)});\n                                firstCycle && self.setState({id: response.data});\n                                if (index + 1 < fileList.length) {\n                                    if ((index + 1) % 5 === 0) {\n                                        fileList.splice(0, 4);\n                                        self.setState({realIndex: (self.state.realIndex + 4)});\n                                        self.sendNextBordroFile((index + 1) - 4, false, totalCount);\n                                    } else {\n                                        self.sendNextBordroFile(index + 1, false, totalCount);\n                                    }\n                                } else {\n                                    self.setState({btnDisabled: false, index: index + 1});\n                                    if (self.state.sessionToBeCreated) {\n                                        self.props.history.push(`/${self.props.peykName}/bordroimport/${self.state.id}`);\n                                        self.load();\n                                    } else {\n                                        if (fileList[index].status === \"success\")\n                                            self.props.toggleModalWithTimeout(false, true);\n                                    }\n                                }\n                            })\n                            .catch(function (error) {\n                                if (!axios.isCancel(error)) {\n                                    document1.status = \"error\";\n                                    document1.statusText = error.data;\n                                    fileList[index] = {\n                                        status: \"error\",\n                                        statusText: error.data,\n                                        name: document1.name,\n                                        size: document1.size,\n                                        content: document1.content,\n                                    };\n                                    self.setState({fileList: fileList, btnDisabled: false});\n                                    showAxiosError(error);\n                                    this.timerStatus(false);\n                                }\n                            });\n                    }else{\n                        Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n                            position: 'top-right',\n                            effect: 'stackslide',\n                            timeout: 5000\n                        });\n                        this.timerStatus(false);\n                    }\n\n                } else {\n                    Alert.success('Tüm dokümanlar kaydedildi.', {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                    this.timerStatus(false);\n                }\n            }\n        }\n    }\n\n    onCancel() {\n        if (this._source)\n            this._source.cancel();\n\n        if (this.state.index > 0) {\n            this.props.toggleModal(false, true);\n        } else {\n            this.props.toggleModal(false, false);\n        }\n    }\n\n    onDrop(acceptedFiles, rejectedFiles) {\n        let self = this;\n        if (!!acceptedFiles) {\n            self.setState({processing: true, uploadBtnDisabled: true, fileList: []});\n            let fileList = [];\n            for (let i = 0; i < acceptedFiles.length; i++) {\n                fileList.push({content: acceptedFiles[i], name: acceptedFiles[i].name, size: acceptedFiles[i].size});\n            }\n            self.setState({processing: false, uploadBtnDisabled: false, fileList: fileList, index: 0, realIndex: 0});\n        }\n    }\n\n    getStatusRender(status) {\n        let className = (status === \"processing\" ? \"spinner fa-spin\" : (status === \"success\" ? \"check\" : (status === \"error\" ? \"close\" : \"pause\")));\n        let color = (status === \"processing\" ? \"dark\" : (status === \"success\" ? \"green\" : (status === \"error\" ? \"red\" : \"dark\")));\n        return (<i className={\"fas fa-\" + className} style={{color: color, paddingRight: \"4px\"}}></i>);\n    }\n\n    // activeJoyride(){\n    //     this.setState({joyrideActive:true})\n    // }\n\n\n\n    changeLocation(e) {\n        this.setState({location: e.target.value});\n    }\n\n    checkCustomerSmsCreditAndSent() {\n        let self = this;\n        let params = {\n            url: `/bordro/checkCustomerSmsCredit`,\n            method: \"post\",\n            data: self.state.selection\n        };\n        requestK(params)\n            .then(function (response) {\n                if (self.isNotEminEczanesi()) {\n                    self.sign()\n                } else {\n                    self.manualPdfSign()\n                }\n                (!self.state.selection || self.state.selection <= 0) &&\n                self.showWarning(\"İletilerinin oluşturulup imzalanması istenen ücret bordrolarını seçiniz.\")\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    checkCustomerSmsCreditAndSentManuel() {\n        let self = this;\n        let params = {\n            url: `/bordro/checkCustomerSmsCredit`,\n            method: \"post\",\n            data: self.state.bordroSession.id\n        };\n        requestK(params)\n            .then(function (response) {\n                self.manualPdfSign();\n                (!self.state.selection || self.state.selection <= 0) &&\n                self.showWarning(\"İletilerinin oluşturulup imzalanması istenen ücret bordrolarını seçiniz.\")\n\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    hasGrant = (grant) => {\n        return this.props.hasGrant(grant);\n    };\n\n    componentWillMount() {\n        this.setState({isKepOwner: this.props.isKepOwner});\n        requestK({url: 'signer/hsm/hasAccess', method: \"get\"})\n            .then(response => this.setState({isHsmOwner: response.data}))\n            .catch(() => this.setState({isHsmOwner: false}));\n\n    }\n\n    componentDidMount() {\n        let  location = this.props && this.props.history && this.props.history.location;\n        this.readBordroSessionDateAll();\n        if (this.props.match && this.props.match.params.bordroSessionId) {\n            if (location && location.from && location.from === \"sign\"){\n                this.getSignStatistics(this.props.match.params.bordroSessionId, location.signed, location.unsigned);\n            }\n            if (this.props.location && this.props.location.selectedBordroIdList) {\n                this.setState({selection: this.props.location.selectedBordroIdList});\n            }\n            this.setState({bordroSession: {id: this.props.match.params.bordroSessionId}});\n            this.load();\n        }\n\n        window.addEventListener(\"resize\", this.updateDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n\n    getSignStatistics = (sessionId, signed, unsigned) => {\n        let self = this;\n        if (signed !== undefined && unsigned !== undefined){\n            this.showAlertMessage(self,signed, unsigned);\n        } else {\n            let params = {\n                url: '/bordrosession/signStatistic?id=' + sessionId,\n                method: \"get\"\n            };\n            self.setState({loading: true});\n            requestK(params)\n                .then(function (response) {\n                    let signStatistic = {};\n                    let states = response.data;\n                    signStatistic.success = states.filter((state) => {\n                        return stateCompare(state, \">=\", \"PDF_SIGNED\");\n                    }).length;\n                    signStatistic.fail = states.filter((state) => {\n                        return stateCompare(state, \"<\", \"PDF_SIGNED\");\n                    }).length;\n                    self.setState({signStatistic});\n                    self.showAlertMessage(self, undefined, undefined);\n                }).catch(function (error) {\n                self.setState({loading: false});\n                showAxiosError(error);\n            });\n        }\n    }\n\n    showAlertMessage(self, signed, unsigned) {\n        let {signStatistic} = this.state;\n        self.setState({\n            alert: (\n                <SweetAlert\n                    info\n                    confirmBtnText=\"Tamam\"\n                    confirmBtnBsStyle=\"success\"\n                    title=\"Bilgi\"\n                    onConfirm={() => self.setState({alert: null})}\n                >\n                    <label\n                        style={{fontSize: '15px', color: 'green'}}>İmzalanan bordro\n                        sayısı: {signed ? signed : signStatistic.success}</label>\n                    <label\n                        style={{fontSize: '15px', color: 'red'}}> İmzalanamayan bordro\n                        sayısı: {unsigned ? unsigned : signStatistic.fail}</label>\n                </SweetAlert>\n            )\n        });\n    }\n\n    load() {\n        if (this.props.match && this.props.match.params.bordroSessionId) {\n            let sessionId = this.props.match.params.bordroSessionId;\n            this.timerStatus(true);\n            let self = this;\n            let params = {\n                url: '/bordrosession/readBordroSessionById',\n                method: \"post\",\n                data: sessionId\n            };\n            self.setState({loading: true});\n            requestK(params)\n                .then(function (response) {\n                    self.waitIfMimeSending(self, response.data);\n                    self.setState({bordroSession: response.data});\n                    self.refreshBordroSessionInfo(response.data.id);\n                    self.refreshBordroSessionDublicateInfo(response.data.id);\n                    /*if (self.state.alert === null)\n                        self.sessionAndEmployeeListChecker(response.data.id);*/\n                    if (response.data && response.data.errorOccured) {\n                        Alert.error(response.data.error || response.data.errorTrace.toString().substring(0, 80), {\n                            position: 'top-right',\n                            effect: 'stackslide',\n                            timeout: 15000\n                        });\n                        self.timerStatus(false);\n                    }\n                    self.setState({ loading: false }, () => {\n                        self.sessionAndEmployeeListChecker(response.data.id);\n                    });\n                })\n                .catch(function (error) {\n                    self.setState({loading: false});\n                    showAxiosError(error);\n                    self.timerStatus(false);\n                });\n        } else {\n            let newState = BordroImportPage.newCleanState();\n            newState.bordroSession = {state: \"\"};\n            this.setState(newState);\n        }\n    }\n\n    sessionAndEmployeeListChecker(sessionId) {\n        this.timerStatus(true);\n        let self = this;\n        let params = {\n            url: `/employee/sessionChecker`,\n            method: \"post\",\n            data:\n                {\n                    \"sessionId\" : sessionId,\n                    \"type\" : \"bordro\"\n                },\n            timeout: 180000\n        };\n        requestK(params)\n            .then(function (response) {\n                if (typeof response.data !== \"string\") {\n                    self.setState({\n                        unloadedEmployees: response.data\n                    });\n                    this.timerStatus(false);\n                }\n            })\n            .catch(function (error) {\n            });\n    }\n\n    downloadExcel(sessionId) {\n        let self = this;\n        let params = {\n            url: `/employee/downloadUnloadedExcel`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: {\n                \"sessionId\" : sessionId,\n                \"type\" : \"bordro\"\n            }\n        };\n        self.setState({unloadedLoading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({alert: null, unloadedLoading: false});\n                let link = document.createElement('a');\n                link.href = window.URL.createObjectURL(new Blob([response.data], {type: \"application/vnd.ms-excel\"}));\n                let date = new Date();\n                link.download = \"Donem_Bordrosu_Yuklenmeyen_Calisanlar_\" +\n                    date.getFullYear() + \"-\" +\n                    date.getMonth() + \"-\" +\n                    date.getDate() + \"_\" +\n                    date.getHours() + \"-\" +\n                    date.getMinutes() + \"-\" +\n                    date.getSeconds() + \".xlsx\";\n                link.click();\n            })\n            .catch(function (error) {\n                if (error.response === undefined) {\n                    showAxiosError({message: \"Şu an işleminiz gerçekleştirilemiyor.\"});\n                }\n                self.setState({alert: null, unloadedLoading: false});\n            });\n    }\n    timerStatus(status){\n        this.props.onTimerStatus(status);\n    };\n\n\n    waitIfMimeSending(self, bordroSession) {\n        this.timerStatus(true);\n        let sessionId = bordroSession.id;\n        let state = bordroSession.state ? bordroSession.state : LOADED;\n        if (\n            stateCompare(state, \"=\", READYTOBESENT) ||\n            stateCompare(state, \"=\", LOADSTARTED)\n        ) {\n            if (stateCompare(state, \"=\", READYTOBESENT)) {\n                self.setState({isMimeSending: true});\n            }\n            if (stateCompare(state, \"=\", LOADSTARTED)) {\n                self.setState({isPdfsParsing: true});\n            }\n\n            let params = {\n                url: '/bordrosession/waitForBordroSessionUpdate',\n                method: \"post\",\n                data: {\n                    id: sessionId,\n                    currentState: state\n                }\n            };\n            requestK(params)\n                .then(() => {\n                    self.load();\n                })\n                .catch((error) => {\n                    self.setState({ loading: false });\n                    showAxiosError(error);\n                    this.timerStatus(false);\n                });\n\n        }else if (this.state.isPdfsParsing && (stateCompare(state, \"=\", LOADERROR))) {\n            self.setState({isPdfsParsing: false, manual: true}, () => {\n                self.load()\n                this.timerStatus(false);\n            });\n            Alert.error(\"Bordro yüklenirken hata oluştu\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 10000\n            });\n        } else if (this.state.isMimeSending && (stateCompare(state, \">=\", SENT))) {\n            self.setState({isMimeSending: false, manual: true}, () => {\n                self.load()\n                this.timerStatus(false);\n            });\n            Alert.success(\"İletiler gönderildi.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 15000\n            });\n        } else if (this.state.isPdfsParsing && (stateCompare(state, \">=\", LOADED))) {\n            self.setState({isPdfsParsing: false, manual: true}, () => {\n                self.load()\n                this.timerStatus(false);\n            });\n            Alert.info(\"Pdf Dosyaları Yüklendi.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 10000\n            });\n            if (bordroSession.hasFileWithError) {\n                Alert.warning(\"Pdf Dosyaları Yüklemesi işlemi tamamlandı. Hatalı dosyalar var. \" +\n                    \"Lütfen, 'Ücret Bordrosu Dönemi Dosyaları'nı görüntüleyerek hatalı dosyayı inceleyiniz.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 15000\n                });\n                this.timerStatus(false);\n            }\n        } else {\n            self.setState({loading: false});\n            this.timerStatus(false);\n        }\n    }\n\n    refreshBordroSessionInfo(sessionId) {\n        this.timerStatus(true);\n        let self = this;\n        let params = {\n            url: '/bordrosession/readBordroSessionInfo',\n            method: \"post\",\n            data: sessionId\n        };\n        requestK(params)\n            .then(function (response) {\n                let bordroSessionInfo = self.state.bordroSessionInfo;\n                bordroSessionInfo.totalCount = response.data.bordroCount;\n                bordroSessionInfo.sentCount = response.data.sentMimeCount;\n                bordroSessionInfo.signedCount = response.data.signedMimeCount;\n                bordroSessionInfo.unpairedCount = response.data.unPairedCount;\n                bordroSessionInfo.location = response.data.location;\n                self.setState({bordroSessionInfo});\n            })\n            .catch(function (error) {\n                showAxiosError(error);\n                this.timerStatus(false);\n            });\n    }\n\n    refreshBordroSessionDublicateInfo(sessionId) {\n        this.timerStatus(true);\n        let self = this;\n        let params = {\n            url: '/bordrosession/readBordroSessionDublicateInfo',\n            method: \"post\",\n            data: sessionId\n        };\n        requestK(params)\n            .then((response) => {\n                let bordroSessionInfo = { ...this.state.bordroSessionInfo };\n                bordroSessionInfo.dublicatedCount = response.data;\n                this.setState({ bordroSessionInfo });\n            })\n            .catch((error) => {\n                showAxiosError(error);\n                this.timerStatus(false);\n            });\n    }\n\n    readBordroSessionDateAll() {\n        let self = this;\n        let params = {\n            url: '/bordrosession/readBordroSessionDateAll',\n            method: \"get\",\n        };\n        self.setState({loading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({monthlyBordros: response.data, loading: false,});\n            })\n            .catch(function (error) {\n                self.setState({loading: false});\n                showAxiosError(error);\n            });\n    }\n\n    uploadBordroSessionFile() {\n        this.setState({\n            showUploadModal: true,\n            sessionToBeCreated: true\n        });\n    }\n\n    uploadBordroFile() {\n        this.setState({\n            fileLoadSessionId: this.state.bordroSession.id,\n            showUploadModal: true,\n            sessionToBeCreated: false\n        });\n    }\n\n    uploadBordroFileWithoutTckn() {\n        this.setState({\n            fileLoadSessionId: this.state.bordroSession.id,\n            showUploadModalWithoutTckn: true,\n            sessionToBeCreated: false\n        });\n    }\n\n    checkSessionMonthIsUsed(selectedDate) {\n        let loadedBordros = this.state.monthlyBordros;\n        if (moment(selectedDate, \"YYYY/MM\", true).isValid() &&\n            loadedBordros &&\n            loadedBordros.some(function (x) {\n                return (parseInt(moment(x.term, 'YYYY/MM/DD').format('M')) === parseInt(selectedDate.month()) + 1) &&\n                    (parseInt(moment(x.term, 'YYYY/MM/DD').format('YYYY')) === parseInt(selectedDate.year()));\n            })\n        ) {\n            this.setState({\n                alert: (\n                    <SweetAlert showCancel warning\n                                confirmBtnText=\"Evet\"\n                                cancelBtnText=\"Hayır\"\n                                confirmBtnBsStyle=\"success\"\n                                cancelBtnBsStyle=\"default\"\n                                title=\"Emin misiniz?\"\n                                onConfirm={() => this.setState({alert: null})}\n                                onCancel={() => this.setState({removeMonth: true, alert: null})}\n                    >\n                        Daha önce seçilmiş bir ücret bordrosu dönemini seçtiniz.\n                    </SweetAlert>\n                )\n            });\n        }\n    }\n\n    renderMonth(props, month, year) {\n        let loadedBordros = this.state.monthlyBordros;\n        if (loadedBordros && loadedBordros.some(function (x) {\n            return (parseInt(moment(x.term, 'YYYY/MM/DD').format('M')) === parseInt(month) + 1) &&\n                (parseInt(moment(x.term, 'YYYY/MM/DD').format('YYYY')) === parseInt(year));\n        })) {\n            return <td {...props} bgcolor=\"#d3d3d3\">{monthName(month + 1)}</td>;\n        } else {\n            return <td {...props} >{monthName(month + 1)}</td>;\n        }\n\n    }\n\n    arrangeDataSet = (selection) => {\n        let dataSet = {};\n        dataSet.sheetName = \"Dönem_Seçilmiş_Bordrolar\"\n        dataSet.uuid = create_UUID();\n        dataSet.list = selection;\n        dataSet.type = \"zip\";\n        return dataSet;\n    }\n\n    downloadMedia() {\n        let self = this;\n        let data = self.arrangeDataSet(self.state.selection);\n        let params = {\n            url: `/bordro/downloadMedia`,\n            method: \"post\",\n            data: data\n        };\n        self.setState({showModal: true, title: \"\", disabledDownloadBtn: true});\n        requestK(params)\n            .then(function (response) {\n                Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 8000\n                });\n                self.setState({loadingType: null});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({loadingType: null});\n        });\n    }\n\n    deleteClicked() {\n        this.setState({\n            alert: null,\n            loading: true\n        });\n        let self = this;\n        let params = {\n            url: `/bordrosession/deleteBordroSession`,\n            method: \"post\",\n            data: this.state.bordroSession.id\n        };\n        self.setState({disabledDeleteBtn: true});\n        requestK(params)\n            .then(() => {\n                Alert.success(\"Ücret bordrosu dönemi başarıyla silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 15000\n                });\n                self.props.sidebarSelected(\"bordrosessionlist\");\n                self.props.history.push(`/${self.props.peykName}/bordrosessionlist`);\n            }).catch((error) => {\n            if (!self.props.currentUser.pairedEmployeeId) {\n                Alert.error(\"Ücret bordrosu dönemi içinde gönderilmiş bordro bulunduğundan silinemez.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 15000\n                });\n            } else {\n                showAxiosError(error);\n            }\n            self.setState({disabledDeleteBtn: false, loading: false});\n        });\n    }\n\n    renderBordroSessionState() {\n        return <React.Fragment>\n            {this.state.isMimeSending &&\n                <div className=\"row\" style={{marginBottom: \"15px\"}}>\n                    <Col sm={12}>\n                        <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n                            <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={24} width={24}/>\n                        </div>\n                        <div style={{display: \"inline-block\", marginRight: \"8px\", position: \"relative\", top: \"-6px\"}}>\n                            {\"İletiler gönderiliyor...\"}\n                        </div>\n                    </Col>\n                </div>\n            }\n            {this.state.isPdfsParsing &&\n                <div className=\"row\" style={{marginBottom: \"15px\"}}>\n                    <Col sm={12}>\n                        <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n                            <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={24} width={24}/>\n                        </div>\n                        <div style={{display: \"inline-block\", marginRight: \"8px\", position: \"relative\", top: \"-6px\"}}>\n                            {\"Pdf dosyaları yükleniyor...\"}\n                        </div>\n                    </Col>\n                </div>\n            }\n            {(this.state.bordroSession && this.state.bordroSession.errorOccured) &&\n                <div className=\"row\">\n                    <Col sm={12}>\n                        <Alert\n                            color=\"danger\"><span>{this.state.bordroSession.error}</span></Alert>\n                    </Col>\n                </div>\n            }\n        </React.Fragment>\n    }\n\n    renderFileListModal() {\n        return <Modal isOpen={this.state.displayFiles} size=\"lg\" toggle={() => this.setState({displayFiles: false})}>\n            <ModalHeader className=\"justify-content-center\" toggle={() => this.setState({displayFiles: false})}>\n                Ücret Bordrosu Dönemine Yüklenmiş Dosyalar\n            </ModalHeader>\n            <ModalBody>\n                <BordroFileTable bordroSession={this.state.bordroSession} hasGrant={this.hasGrant}/>\n            </ModalBody>\n        </Modal>\n    }\n\n    renderLocationChangeModal() {\n        return <ChangeLocation modal={this.state.displayLocationChangeModal}\n                               location={this.state.bordroSessionInfo.location}\n                               sessionId={this.state.bordroSession.id}\n                               toggleModal={(flag, manual) =>\n                                   this.setState({displayLocationChangeModal: flag, manual: manual}, () => {\n                                       if (manual) {\n                                           this.load()\n                                       }\n                                   })}/>\n    }\n\n    showWarning(text, pretext = \"Seçim Yapılmadı\") {\n        this.setState({\n            alert: (\n                <SweetAlert warning\n                            confirmBtnText=\"Tamam\"\n                            confirmBtnBsStyle=\"warning\"\n                            title={pretext}\n                            onConfirm={() => this.setState({alert: null})}>\n                    {text}\n                </SweetAlert>)\n        });\n    }\n\n\n    renderNavButtons() {\n\n\n        if (!this.state.bordroSession) {\n            return (\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n\n                    <ul className=\"helpfulList\">\n                        <li className=\"helpButtonContainer\">\n                            <button className=\"helpButton\" onClick={() => {\n                                this.activateJoyride()\n                            }}>\n                                <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                                <i className=\"far fa-question-circle helpButtonIcon\"/>\n                            </button>\n                        </li>\n                        {this.state.stop &&\n                            <li className=\"nav-item dropdown  videoIconContainer\">\n                                <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                        aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                    <span className=\"tooltipText\">Yardimci Videolar</span>\n                                    <i className=\"fab fa-youtube videoIcon\"/>\n                                </button>\n                                <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                     aria-labelledby=\"videosLink\">\n                                    {\n                                        this.videos.map((video, i) =>\n                                            <a key={i} className=\"dropdown-item\"\n                                               onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                    }\n                                </div>\n                            </li>\n                        }\n                    </ul>\n                </Nav>\n            );\n        } else {\n            return (\n                <>\n                    {/* {this.state.width > 1195 &&*/}\n                    {/* <div style={{display: 'flex'}}>*/}\n                    {/* <StickButton className=\"zocial Mail Gonder\"*/}\n                    {/*              position= 'leftSide'*/}\n                    {/*              style={{*/}\n                    {/*                fontSize: 'x-small',*/}\n                    {/*                display: 'inline-block',*/}\n                    {/*                marginRight: '6px',*/}\n                    {/*                zIndex: '10001',*/}\n                    {/*                position: 'fixed'*/}\n                    {/*              }}*/}\n                    {/*              label=\"İmzala & Gönder\" title=\"İleti İmzala ve Gönder\"*/}\n                    {/*              disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured)}*/}\n                    {/*              onClick={e => {*/}\n                    {/*                {*/}\n                    {/*                  this.sign()*/}\n                    {/*                }*/}\n                    {/*                {*/}\n                    {/*                  (!this.state.selection || this.state.selection <= 0) &&*/}\n                    {/*                  this.showWarning(\"İletilerinin oluşturulup imzalanması istenen ücret bordrolarını seçiniz.\")*/}\n                    {/*                }*/}\n                    {/*              }}/>*/}\n\n                    {/* <StickButton className=\"zocial Yenile\"*/}\n                    {/*              position= 'leftSide'*/}\n                    {/*              style={{fontSize: 'x-small',*/}\n                    {/*                display: 'inline-block',*/}\n                    {/*                marginRight: '6px',*/}\n                    {/*                zIndex: '10001',*/}\n                    {/*                position: 'fixed',*/}\n                    {/*                marginLeft: '128px'*/}\n                    {/*              }}*/}\n                    {/*              label=\"Sonuç Yenile\" title=\"Sonuç Yenile\"*/}\n                    {/*              disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured)}*/}\n                    {/*              onClick={() => {*/}\n                    {/*                this.props.reload(true, \"sidebar\")*/}\n                    {/*              }}/>*/}\n                    {/*</div>*/}\n                    {/* }*/}\n\n                    <NavBarKS offsetWidth={this.props.offsetWidth} innerWidth={window.innerWidth}\n                              btnDisabled={this.state.btnDisabled} flag={this.state.flag}\n                              name='bordroImport'\n                              sign={this.isNotEminEczanesi() ? this.sign : this.manualPdfSign}\n                              manualSign={this.manualPdfSign}\n                              showWarning={this.showWarning}\n                              selection={this.state.selection}\n                              reload={this.props.reload}\n                              exitsManuelSign={!this.state.isKepOwner && !this.state.isHsmOwner && this.isNotEminEczanesi()}\n                    >\n                        <StickButton position=\"leftSide\" className=\"zocial Yeni\" style={{fontSize: 'x-small'}}\n                                     disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured)}\n                                     label=\"Dosya Ekle\" title=\"Döneme Dosya Ekle\" onClick={this.uploadBordroFile}/>\n                        <StickButton position=\"leftSide\" className=\"zocial Yeni\" style={{fontSize: 'x-small'}}\n                                     disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured)}\n                                     label=\"Dosya Ekle(Tckn içermeyen)\" title=\"Döneme Dosya Ekle\" onClick={this.uploadBordroFileWithoutTckn}/>\n                        {this.state.width <= 1195 &&\n                            <StickButton position=\"leftSide\" className=\"zocial Mail\" style={{fontSize: 'x-small'}}\n                                         label=\"İmzala & Gönder\" title=\"İleti İmzala ve Gönder\"\n                                         disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured)}\n                                         onClick={() => {\n                                             this.checkCustomerSmsCreditAndSent();\n                                         }}/>\n                        }\n                        {!this.state.isKepOwner && !this.state.isHsmOwner && this.state.width <= 1195 && this.isNotEminEczanesi() &&\n                            <StickButton position=\"leftSide\" className=\"zocial Mail\" style={{fontSize: 'x-small'}}\n                                         label=\"Manuel imzala ve gönder\" title=\"Manuel İmzala ve Gönder\"\n                                         disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured)}\n                                         onClick={() => {\n                                             this.checkCustomerSmsCreditAndSentManuel();\n                                         }}/>\n                        }\n                        <StickButton position=\"leftSide\" className=\"zocial Gonder\" style={{fontSize: 'x-small'}}\n                                     label=\"Uyarı Gönder\" title=\"Seçilecek Kişilere Uyarı Bildirisi Gönder\"\n                                     disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured) ||\n                                         !this.state.bordroSessionInfo || this.state.bordroSessionInfo.sentCount === 0}\n                                     onClick={() => {\n                                         {\n                                             {\n                                                 this.state.selection && this.state.selection.length > 0 &&\n                                                 this.props.history.push({\n                                                     pathname: `/${this.props.peykName}/mimerepeat`,\n                                                     bordroSession: this.state.bordroSession,\n                                                     selectedBordroIdList: this.state.selection,\n                                                     isKepOwner: this.state.isKepOwner\n                                                 })\n                                             }\n                                             {\n                                                 (!this.state.selection || this.state.selection <= 0) &&\n                                                 this.showWarning(\"Alıcılarına uyarı gönderilmesi istenen ücret bordrolarını seçiniz.\")\n                                             }\n                                         }\n                                     }}/>\n                        {this.state.width <= 1195 &&\n                            <StickButton position=\"leftSide\" className=\"zocial Yenile\" style={{fontSize: 'x-small'}}\n                                         label=\"Sonuç Yenile\" title=\"Sonuç Yenile\"\n                                         disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured)}\n                                         onClick={() => {\n                                             this.props.reload(true, \"sidebar\")\n                                         }}/>\n                        }\n                        <StickButton position=\"leftSide\" className=\"zocial Kaydet\" style={{fontSize: 'x-small'}}\n                                     label=\"Zip Olarak İndir\" title=\"Seçili Ücret Bordrolarını Zip Olarak İndir\"\n                                     disabled={this.state.disabledDownloadBtn ||\n                                         (this.state.bordroSession && this.state.bordroSession.errorOccured) ||\n                                         (this.state.bordroSessionInfo && this.state.bordroSessionInfo.totalCount <= 0)}\n                                     onClick={() => {\n\n                                         {\n                                             this.state.selection && this.state.selection.length > 0 &&\n                                             this.downloadMedia()\n                                         }\n                                         {\n                                             (!this.state.selection || this.state.selection <= 0) &&\n                                             this.showWarning(\"İndirilmek istenen bordroları seçiniz.\")\n                                         }\n                                     }}/>\n                        <StickButton position=\"leftSide\" className=\"zocial Sil\" style={{fontSize: 'x-small'}}\n                                     label=\"Dönemi Sil\" title=\"Ücret Bordrosu Dönemini Sil\"\n                                     disabled={this.state.isMimeSending || this.state.disabledDeleteBtn}\n                                     onClick={() => {\n                                         {\n                                             !(this.state.bordroSessionInfo && this.state.bordroSessionInfo.signedCount > 0) &&\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert showCancel warning\n                                                                 confirmBtnText=\"Evet\"\n                                                                 cancelBtnText=\"Hayır\"\n                                                                 confirmBtnBsStyle=\"success\"\n                                                                 cancelBtnBsStyle=\"default\"\n                                                                 title=\"Emin misiniz?\"\n                                                                 onConfirm={() => {\n                                                                     this.deleteClicked()\n                                                                 }}\n                                                                 onCancel={() => this.setState({alert: null})}>\n                                                         Açılmış Ücret Bordrosu Dönemi silinecek.\n                                                     </SweetAlert>\n                                                 )\n                                             })\n                                         }\n                                         {\n                                             (this.state.bordroSessionInfo && this.state.bordroSessionInfo.signedCount > 0) &&\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert danger\n                                                                 confirmBtnText=\"Tamam\"\n                                                                 confirmBtnBsStyle=\"danger\"\n                                                                 title=\"Hata\"\n                                                                 onConfirm={() => this.setState({alert: null})}>\n                                                         Gönderilmiş veya gönderilmekte olan ileti içeren ücret\n                                                         bordrosu dönemi silinemez.\n                                                     </SweetAlert>\n                                                 )\n                                             })\n                                         }\n                                     }}/>\n                        <StickButton position=\"leftSide\" className=\"zocial Sil\" label=\"Seçilen Bordroları Sil\"\n                                     title=\"Seçilen Bordroları Sil\"\n                                     disabled={this.state.isMimeSending || this.state.disabledDeleteBtn || !(this.state.selection && this.state.selection.length > 0)}\n                                     style={{fontSize: 'x-small'}}\n                                     onClick={() => {\n                                         this.setState({\n                                             alert: (\n                                                 <SweetAlert showCancel warning\n                                                             confirmBtnText=\"Evet\"\n                                                             cancelBtnText=\"Hayır\"\n                                                             confirmBtnBsStyle=\"danger\"\n                                                             cancelBtnBsStyle=\"default\"\n                                                             title=\"Emin misiniz?\"\n                                                             onConfirm={this.deleteBordro}\n                                                             onCancel={() => this.setState({alert: null})}\n                                                 >\n                                                     Seçilen bordro kayıtları silinecek. Gönderilmiş bordrolar\n                                                     silinemez.\n                                                 </SweetAlert>\n                                             )\n                                         });\n                                     }}/>\n\n                        <div className=\"helpButtonContainer\" position='rightSide'\n                             style={{position: 'relative', top: '15%', right: '-5em'}}>\n                            <button className=\"helpButton\" onClick={() => {\n                                this.activateJoyride()\n                            }}>\n                                <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                                <i className=\"far fa-question-circle helpButtonIcon\"/>\n                            </button>\n                            {this.state.stop &&\n                                <div className=\"nav-item dropdown  videoIconContainer\"\n                                     style={{display: \"inline-block\", paddingRight: \"30px\"}}>\n                                    <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                            aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                        <span className=\"tooltipText\">Yardimci Videolar</span>\n                                        <i className=\"fab fa-youtube videoIcon\"/>\n                                    </button>\n                                    <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                         aria-labelledby=\"videosLink\">\n                                        {\n                                            this.videos2.map((video, i) =>\n                                                <a key={i} className=\"dropdown-item\"\n                                                   onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                        }\n                                    </div>\n                                </div>\n                            }\n                        </div>\n\n\n                        {this.state.isKepOwner &&\n                            <StickButton position=\"leftSide\" className=\"zocial Dokuman\" style={{\n                                float: 'left',\n                                width: '180px',\n                                fontSize: 'xx-small',\n                                position: 'absolute',\n                                right: '304px'\n                            }}\n                                         label=\"PDF Eki İmzala (Opsiyonel)\" title=\"Ücret Bordrosu İmzala (Opsiyonel)\"\n                                         disabled={(this.state.bordroSession && this.state.bordroSession.errorOccured)}\n                                         onClick={() => {\n                                             {\n                                                 this.kepPdfSign();\n                                             }\n                                             {\n                                                 (!this.state.selection || this.state.selection <= 0) &&\n                                                 this.showWarning(\"İmzalanması istenen ücret bordrolarını seçiniz.\")\n                                             }\n                                         }}/>}\n\n                    </NavBarKS>\n                </>\n\n            );\n        }\n    }\n\n    sign() {\n        if (this.state.selection && this.state.selection.length > 0) {\n            let self = this;\n            if (self.state.isKepOwner) {\n                self.mimeSign();\n            } else {\n                if (self.state.isHsmOwner) {\n                    self.hsmSign();\n                } else {\n                    self.mailPdfSign();\n                }\n            }\n            if (this.state.totalPdfCountIdList && this.state.totalPdfCountIdList.length > 0) {\n                const updatedConditionalList = this.state.conditionalList.filter(id =>\n                    this.state.totalPdfCountIdList.includes(id)\n                );\n                const updatedDeclineList = this.state.declineList.filter(id =>\n                    this.state.totalPdfCountIdList.includes(id)\n                );\n\n                let updateConditionalInfoParams = {\n                    url: '/bordro/updateBordroConditionalInfo',\n                    method: \"post\",\n                    data: {\n                        conditionalIdList: updatedConditionalList,\n                        sessionId: this.state.bordroSession.id\n                    }\n                };\n                requestK(updateConditionalInfoParams)\n                    .then(function (response) {\n                    })\n                    .catch(function (error) {\n                        showAxiosError(error);\n                    });\n\n                let updateDeclineInfoParams = {\n                    url: '/bordro/updateBordroDeclineInfo',\n                    method: \"post\",\n                    data: {\n                        declineIdList: updatedDeclineList,\n                        sessionId: this.state.bordroSession.id\n                    }\n                };\n                requestK(updateDeclineInfoParams)\n                    .then(function (response) {\n                    })\n                    .catch(function (error) {\n                        showAxiosError(error);\n                    });\n            }\n        }\n    }\n\n    hsmSign() {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/bordrosign/hsm`,\n            bordroSession: this.state.bordroSession,\n            selectedBordroIdList: this.state.selection\n        })\n    }\n\n    kepPdfSign() {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/bordrosign`,\n            bordroSession: this.state.bordroSession,\n            selectedBordroIdList: this.state.selection\n        })\n    }\n\n    mailPdfSign() {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/bordrosign/mail`,\n            bordroSession: this.state.bordroSession,\n            selectedBordroIdList: this.state.selection\n        })\n    }\n\n    manualPdfSign() {\n        let self = this;\n        self.props.history.push({\n            pathname: `/${self.props.peykName}/bordrosign/manual`,\n            bordroSession: self.state.bordroSession,\n            selectedBordroIdList: self.state.selection\n        })\n    }\n\n    mimeSign() {\n        this.props.history.push({\n            pathname: `/${this.props.peykName}/mimesign`,\n            bordroSession: this.state.bordroSession,\n            selectedBordroIdList: this.state.selection\n        })\n    }\n\n    renderSummary() {\n        const monthNames = [\"Ocak\", \"Şubat\", \"Mart\", \"Nisan\", \"Mayıs\",\n            \"Haziran\", \"Temmuz\", \"Ağustos\", \"Eylül\", \"Ekim\", \"Kasım\", \"Aralık\"\n        ];\n        let totalCount = this.state.bordroSessionInfo ? this.state.bordroSessionInfo.totalCount : \"\";\n        let sentCount = this.state.bordroSessionInfo ? this.state.bordroSessionInfo.sentCount : \"\";\n        let signedCount = this.state.bordroSessionInfo ? this.state.bordroSessionInfo.signedCount : \"\";\n        let unpairedCount = this.state.bordroSessionInfo ? this.state.bordroSessionInfo.unpairedCount : \"\";\n        let dublicatedCount = this.state.bordroSessionInfo ? this.state.bordroSessionInfo.dublicatedCount : \"\";\n        let location = this.state.bordroSessionInfo ? this.state.bordroSessionInfo.location : \"\";\n        let unloadedEmployeesLength = this.state.unloadedEmployees ? this.state.unloadedEmployees : 0;\n\n        return (\n            <div className=\"FormRenk\" style={{marginBottom: '0px', left: '50px'}}>\n                <div className=\"row\">\n                    <div className=\"col-sm-3\"><label>Ücret Bordrosu Dönemi:</label></div>\n                    <div className=\"col-sm-3\">\n                        <label>\n                            {!!this.state.bordroSession.term ?\n                                monthNames[moment(this.state.bordroSession.term, 'YYYY/MM/DD').format('M') - 1] +\n                                \" \" +\n                                moment(this.state.bordroSession.term, 'YYYY/MM/DD').format('YYYY') :\n                                ''}\n                        </label>\n                    </div>\n                    <div className=\"col-sm-3\"><label>Ücret Bordrosu Dönemi Dosyaları:</label></div>\n                    <div className=\"col-sm-3\">\n                        {(this.state.bordroSession && !this.state.bordroSession.hasFileWithError) &&\n                            <button className=\"btn-outline-info\" disabled={this.state.loading}\n                                    onClick={() => this.setState({displayFiles: true})}>\n                                Görüntüle\n                            </button>\n                        }\n                        {(this.state.bordroSession && this.state.bordroSession.hasFileWithError) &&\n                            <button className=\"btn-outline-danger\" id=\"btn-danger\" disabled={this.state.loading}\n                                    data-toggle=\"tooltip\" title=\"yanlış dosya yüklemi işlemi yaptınız.\"\n                                    onClick={() => this.setState({displayFiles: true})}>\n                                Görüntüle\n                            </button>\n                        }\n                    </div>\n                    <div className=\"col-sm-3\"><label>Toplam Ücret Bordrosu Sayısı:</label></div>\n                    <div className=\"col-sm-3\"><label>{totalCount}</label></div>\n                    <div className=\"col-sm-3\"><label>Eşleştirilen Çalışan Sayısı:</label></div>\n                    <div className=\"col-sm-3\"><label>{totalCount - unpairedCount}</label></div>\n                    <div className=\"col-sm-3\"><label>Gönderilmiş İleti Sayısı:</label></div>\n                    <div className=\"col-sm-3\"><label>{sentCount}</label></div>\n                    <div className=\"col-sm-3\"><label>Eşleştirilemeyen Ücret Bordrosu Sayısı:</label></div>\n                    <div className=\"col-sm-3\"><label>{unpairedCount}</label></div>\n                    <div className=\"col-sm-3\"><label>İmzalanmış İleti Sayısı:</label></div>\n                    <div className=\"col-sm-3\"><label>{signedCount}</label></div>\n                    <div className=\"col-sm-3\"><label>Mükerrer Çalışanlı Ücret Bordrosu Sayısı:</label></div>\n                    <div className=\"col-sm-3\"><label>{dublicatedCount}</label></div>\n                    <div className=\"col-sm-3\">{location ? <label>Lokasyon:</label> : \"\"}</div>\n                    <div className=\"col-sm-3\" style={{overflow: 'hidden'}}>\n                        {location && <label style={{marginRight: \"2%\"}}><TextOverFlowTooltip text={location}/></label>}\n                        {location && <button id='location' className=\"btn-outline-info\" disabled={this.state.loading}\n                                             title=\"Lokasyon bilgisini değiştir\"\n                                             onClick={() => this.setState({displayLocationChangeModal: true})}>\n                            Düzenle\n                        </button>}\n                    </div>\n                    <div className=\"col-sm-3\"><label>Bordrosu Yüklenmeyen Çalışan Sayısı:</label></div>\n                    <div className=\"col-sm-3\">\n                        {unloadedEmployeesLength > 0 &&\n                            <label style={{marginRight: \"2%\", color: \"red\"}}>{unloadedEmployeesLength}</label>}\n                        {unloadedEmployeesLength === 0 &&\n                            <label style={{marginRight: \"2%\"}}>{unloadedEmployeesLength}</label>}\n                        <button id='indirBtn' className=\"btn-outline-info\"\n                                disabled={this.state.loading || this.state.unloadedLoading}\n                                onClick={() => this.downloadExcel(this.state.bordroSession.id)}\n                                title=\"Bordrosu yüklenmeyen çalışan listesini indir\">\n                            İndir\n                        </button>\n                    </div>\n                </div>\n            </div>)\n    }\n\n    addSelectionToState(selection) {\n        this.setState({selection: selection});\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true});\n            if (this.state.width > 100) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback(data) {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    }\n\n    render() {\n\n        let steps = this.state.steps;\n        let steps2 = this.state.steps2;\n        let steps3 = this.state.steps3;\n        let locale = this.state.locale;\n\n        return (\n            <div className=\"row baseBackground\">\n                {this.state.alert}\n                {this.renderFileListModal()}\n                {this.state.displayLocationChangeModal && this.renderLocationChangeModal()}\n                {this.renderNavButtons()}\n                <div className=\"col-sm-12 satirBasi\">\n                    <div className=\"app\">\n\n                        {this.state.joyrideActive &&\n                            <Joyride\n                                disableBeacon={false}\n                                autoStart\n                                locale={locale}\n                                steps={!this.state.bordroSession ? steps : (this.state.width < 1000 ? steps3 : steps2)}\n                                continuous={true}\n                                run={this.state.shouldRun}\n                                scrollToFirstStep={true}\n                                showProgress={true}\n                                showSkipButton={true}\n                                scrollToSteps={true}\n                                disableCloseOnEsc={true}\n                                disableOverlay={false}\n                                disableOverlayClicks={false}\n                                keyboardNavigation={true}\n                                hideBackButton={false}\n                                disableOverlayClose={true}\n                                callback={this.callback}\n                                holePadding={0}\n                                shouldRun={this.state.shouldRun}\n                                styles={{\n                                    options: {\n                                        zIndex: 100000,\n                                        primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                                    }\n                                }}\n\n                            />\n                        }\n\n                    </div>\n                    <CardHeader>\n                        <CardTitle tag=\"h4\">\n                            {!this.state.bordroSession ? \"Ücret Bordrosu Yükle\" : \"Ücret Bordrosu Dönem İşlemi\"}\n                        </CardTitle>\n                        {!this.state.bordroSession &&\n                            <label>Çalışanlarınıza ücret bordrosu gönderimi yapmak için, toplu veya ayrı ayrı olan ücret\n                                bordrolarını pdf veya xlsx uzantılı olacak şekilde doğrudan veya zip dosyası halinde\n                                yükleme\n                                yapınız.</label>}\n\n                        <div className=\" col-sm-12 row\" style={{marginTop: \"20px\"}}>\n                            <div className=\"col-sm-8\"/>\n                            <div className=\"col-sm-8 row\">\n                                <div className=\"col-sm-2\">\n                                    Dönem\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    <Datetime timeFormat={false} dateFormat=\"YYYY-MM\" closeOnSelect={true}\n                                              inputProps={{placeholder: 'YIL/AY'}}\n                                              value={this.state.sessionMonth}\n                                              renderMonth={this.props.renderMonth}\n                                              isValidDate={function (current) {\n                                                  return current.startOf('month').isSameOrBefore(Datetime.moment().startOf('month'));\n                                              }}\n                                              onChange={(e) => {\n                                                  this.setState({sessionMonth: e});\n                                                  this.checkSessionMonthIsUsed(e);\n                                              }}/>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-2\"/>\n                        </div>\n\n                        <div className=\" col-sm-12 row\" style={{marginTop: \"15px\"}}>\n                            <div className=\"col-sm-8\"/>\n                            <div className=\"col-sm-8 row\">\n                                <div className=\"col-sm-2\">\n                                    Lokasyon\n                                </div>\n                                <div className=\"col-sm-4\">\n                                    <Input type=\"text\" name=\"location\"\n                                           value={this.state.location}\n                                           onChange={this.changeLocation}/>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-2\"/>\n                        </div>\n\n                    </CardHeader>\n                    <CardBody>\n                        {this.renderBordroSessionState()}\n                    </CardBody>\n                    <CardBody>\n                        {this.state.bordroSession && this.renderSummary()}\n                    </CardBody>\n                    <CardBody>\n                        {this.state.bordroSession &&\n                            <BordroTable\n                                bordroSession={this.state.bordroSession}\n                                bordroSessionInfo={this.state.bordroSessionInfo}\n                                addSelectionToState={this.addSelectionToState}\n                                sidebarMenus={this.props.sidebarMenus} isKepOwner={this.state.isKepOwner}\n                                selection={this.state.selection}\n                                hasGrant={this.props.hasGrant}\n                                manual={this.state.manual}\n                                loading={this.state.loading}\n                                isManual={(manual) => this.setState({manual})}\n                                load={() => this.props.reload(true, \"sidebar\")}\n                                tableLoadingCompleted={() => {\n                                    if (!this.state.isPdfsParsing) {\n                                        this.setState({loading: false})\n                                    }\n                                }}\n                                changeOnConditionalSelection={e => this.setState({conditionalList: e})}\n                                changeOnDeclineSelection={e => this.setState({declineList: e})}\n                                isPdfsParsing={this.state.isPdfsParsing}\n                                flag={this.state.flag}\n                                totalPdfCountIdList={e => this.setState({ totalPdfCountIdList: e })}/>\n                        }\n                    </CardBody>\n\n                    {this.state.showUploadModal &&\n                        <UploadBordroFileModal\n                            id={this.state.fileLoadSessionId} peykName={this.props.peykName}\n                            modal={this.state.showUploadModal}\n                            hasGrant={this.hasGrant}\n                            newSession={this.state.sessionToBeCreated} history={this.props.history}\n                            onMonthChange={(e) => this.checkSessionMonthIsUsed(e)}\n                            renderMonth={this.renderMonth} loadBordroSession={() => this.load()}\n                            toggleModal={(flag, manual) => this.setState({showUploadModal: flag, manual: manual})}\n                            toggleModalWithTimeout={(flag, manual) => this.setState({showUploadModal: flag, manual: manual }, () => this.load())}\n                            removeMonth={this.state.removeMonth}\n                            setRemoveMonthOff={() => this.setState({removeMonth: false})}\n                        />\n                    }\n\n                    {!this.props.match.params.bordroSessionId && (\n                        <Col sm=\"12\" style={{ paddingTop: \"15px\", paddingRight: \"32px\", paddingLeft: \"32px\" }}>\n                            <Dropzone\n                                accept=\".pdf, .xlsx\"\n                                activeClassName=\"dropzoneActiveClass\"\n                                className=\"FormRenk col-sm-12\"\n                                multiple={true}\n                                disabled={this.state.btnDisabled}\n                                onDrop={this.onDrop}\n                            >\n                                <div className=\"dropzoneInnerArea\">\n                                    Ücret Bordrosu dosyalarını (.pdf, .xlsx) yükleyiniz.\n                                </div>\n                            </Dropzone>\n                        </Col>\n                    )}\n\n                    {!this.props.match.params.bordroSessionId && (\n                        <div>\n                            <Row>\n                                <Col sm=\"12\" style={{\n                                    paddingTop: \"0px\",\n                                    paddingRight: \"15px\",\n                                    paddingLeft: \"15px\",\n                                    maxHeight: '500px',\n                                    overflow: \"auto\"\n                                }}>\n                                    <table className=\"\" style={{textAlign: 'center', paddingBottom: \"5px\"}}>\n                                        <thead>\n                                        <tr style={{backgroundColor: '#ebedf0'}}>\n                                            <th width=\"5%\">#</th>\n                                            <th>Dosya Adı</th>\n                                            <th>Dosya Boyutu</th>\n                                            <th>Durum</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.state.fileList && this.state.fileList.map((document, index) =>\n                                            <tr key={index + \"_\" + document.name + \"_\" + document.size}>\n                                                <td>{index + 1}</td>\n                                                <td style={{margin: \"0px\", textAlign: \"left\"}}>\n                                                    {<TextOverFlowTooltip text={document.name || \"-\"} maxLength={30}/>}\n                                                </td>\n                                                <td style={{margin: \"0px\"}}>\n                                                    {(new Decimal(new Decimal(document.size / 1024 / 1024).toFixed(2))).toNumber() + \" MB\"}\n                                                </td>\n                                                <td style={{margin: \"0px\"}}>\n                                                    {this.getStatusRender(document.status)}{(document.statusText || \"Gönderim bekliyor\")}\n                                                </td>\n                                            </tr>\n                                        )}\n                                        {!this.state.processing && (this.state.fileList && this.state.fileList.length === 0) &&\n                                            <tr>\n                                                <td colSpan=\"8\">Kayıt bulunamadı</td>\n                                            </tr>\n                                        }\n                                        {this.state.processing &&\n                                            <tr>\n                                                <td colSpan=\"8\">Doküman işleniyor...</td>\n                                            </tr>\n                                        }\n                                        </tbody>\n                                    </table>\n                                </Col>\n                                <Col sm=\"12\">\n                                    <p style={{float: \"right\"}}>Toplam Adet: {this.state.fileList ? this.state.fileList.length : 0}</p>\n                                </Col>\n                            </Row>\n                            {/*<button className=\"confirmBtnText\"*/}\n                            {/*        onClick={(e) => this.sendNextBordroFile(this.state.index, true, 0)}>*/}\n                            {/*    Doküman(lar)ı Yükle*/}\n                            {/*</button>*/}\n                            <button type=\"button\"\n                                    disabled={this.state.btnDisabled}\n                                    className={\"btn-sm btn-icon TekBtn kaydet\"}\n                                    style={{float: 'right' , padding:'9px 45px 9px 20px'}}\n                                    onClick={() => {this.sendNextBordroFile(this.state.index, true, 0)}}>Dökümanları Yükle\n                            </button>\n                        </div>\n                    )}\n                </div>\n\n\n                {this.state.showUploadModalWithoutTckn &&\n                    <UploadBordroFileModalWithoutTckn\n                        id={this.state.fileLoadSessionId} peykName={this.props.peykName}\n                        selectedList={[]}\n                        modal={this.state.showUploadModalWithoutTckn}\n                        hasGrant={this.hasGrant}\n                        newSession={this.state.sessionToBeCreated} history={this.props.history}\n                        onMonthChange={(e) => this.checkSessionMonthIsUsed(e)}\n                        renderMonth={this.renderMonth} loadBordroSession={() => this.load()}\n                        toggleModal={(flag, manual) => this.setState({showUploadModalWithoutTckn: flag, manual: manual})}\n                        toggleModalWithTimeout={(flag, manual) => this.setState({showUploadModalWithoutTckn: flag, manual: manual }, () => this.load())}\n                        removeMonth={this.state.removeMonth}\n                        setRemoveMonthOff={() => this.setState({removeMonth: false})}\n                    />\n                }\n                {this.state.showEczaciHelpModal &&\n                    <VideoModal video={this.state.video} isOpen={this.state.showEczaciHelpModal}\n                                close={() => this.setState({showEczaciHelpModal: false})}/>\n                }\n            </div>\n\n\n        );\n    }\n\n    isNotEminEczanesi = () => {\n        return !!this.props.currentUser && !!this.props.currentUser.vknTckn && this.props.currentUser.vknTckn !== \"3470304270\";\n    }\n}\n\nexport default BordroImportPage;\n"],"sourceRoot":""}