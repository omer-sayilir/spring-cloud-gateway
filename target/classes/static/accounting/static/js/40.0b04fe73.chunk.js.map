{"version":3,"sources":["accounting/kepik/bordro/BordroReportPage.js"],"names":["dropdownCheckRef","React","createRef","detailedSearchRef","BordroReportPage","Component","constructor","props","super","videos","title","id","switchVideo","video","this","setState","showEczaciHelpModal","filterForCurrentTerm","self","searchQuery","monthly","state","flagForHomePage","location","selectedTerm","Alert","success","position","effect","timeout","arrangeDataSet","type","dataSet","uuid","create_UUID","list","selection","downloadBulkContent","data","length","params","url","method","requestK","then","catch","error","showAxiosError","alert","createElement","SweetAlert","info","confirmBtnText","confirmBtnBsStyle","onConfirm","readDepartmentAll","response","departmentList","callback","action","shouldRun","flag","joyrideActive","activateJoyride","resendMimeRow","row","push","resend","resendMimeList","warning","loading","manual","selectedAll","content","totalIdList","total","page","size","showOnlyMissing","showOnlySents","isKepOwner","disabledDeleteBtn","deleteSelection","displaySelectionList","steps","target","placement","locale","back","close","last","next","skip","width","window","innerWidth","stop","disableEducationQueryButton","fetchData","bind","isSelected","handleSearch","previewContent","setMediaViewer","downloadMedia","downloadContent","toggleCheckboxChange","openBordroSession","deleteSelected","deleteSession","deleteList","deleteRow","sendBordrosAccordingToEducationInformation","previewSignedContent","componentWillMount","jobTitlesData","getJobTitles","componentDidMount","widgetType","accessor","direction","_dropdownCheckRef$cur","_dropdownCheckRef$cur2","sortStr","undefined","correctStateQuery","match","current","selectionTag","searching","reload","_dropdownCheckRef$cur3","_dropdownCheckRef$cur4","checkGrantForFetchResponse","totalElements","selectedIdList","_self$state","sessionId","showCancel","cancelBtnText","cancelBtnBsStyle","disabled","onCancel","disabledBtnType","index","responseType","disabledPreviewBtn","selectedIndex","html","blob","Blob","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","result","mediaModal","selectedRow","URL","createObjectURL","bordroId","disabledOpenSessionBtn","history","peykName","source","disabledDownloadBtn","loadingType","link","document","href","randomNum","Math","floor","random","createdAt","toString","substring","indexOf","fileName","parsedTckn","term","split","download","body","appendChild","timeStamp","formTimeStamp","base64_arraybuffer","decode","linkTs","click","e","_dropdownCheckRef$cur5","_dropdownCheckRef$cur6","checked","items","forEach","item","DocumentState","value","bordroSession","slice","renderMainTable","pageIdList","Array","map","columnList","Header","DropdownCheck","ref","selectionIdList","onChange","_dropdownCheckRef$cur7","_dropdownCheckRef$cur8","_dropdownCheckRef$cur9","_dropdownCheckRef$cur10","selectType","sortable","Cell","moment","format","style","margin","TextOverFlowTooltip","text","maxLength","employee","name","className","surname","department","jobTitle","kepAddress","warningCount","messageType","message","padding","WebkitTextFillColor","data-toggle","aria-labelledby","checkGrantToDisplay","BORDRO_SESSION_WORKS","onClick","pointerEvents","cursor","downloadApproveDocument","stateDetail","columns","renewListForPrivileges","newList","includes","Table","loadingText","options","render","fieldList","label","operator","selectData","stateData","departmentData","statusTypeFilterData","fields","Row","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","zIndex","primaryColor","Nav","paddingLeft","height","NavBarKS","offsetWidth","btnDisabled","StickButton","fontSize","BORDROS_ARCHIVE","disabledDeleteSelectedBtn","currentUser","customerCheckEducationState","top","right","display","paddingRight","aria-haspopup","aria-expanded","i","key","CardHeader","CardTitle","tag","CardBody","paddingBottom","marginTop","marginBottom","DetailedSearch","onSearch","Col","sm","md","lg","Input","Label","marginLeft","color","ApproveDocumentViewer","modal","closeModal","canvas","StateDetail","detail","documentType","toggle","VideoModal","isOpen"],"mappings":"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","file":"static/js/40.0b04fe73.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Table from \"../../../components/Table/Table\";\nimport 'react-table/react-table.css'\nimport {CardBody, CardHeader, CardTitle, Col, Input, Label, Nav, Row} from 'reactstrap';\nimport moment from 'moment';\nimport 'moment/locale/tr';\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport {checkGrantForFetchResponse, checkGrantToDisplay, create_UUID, showAxiosError} from \"../../../helper/helper\";\nimport StickButton from \"../../../components/StickButton\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {\n    correctStateQuery,\n    departmentData,\n    downloadApproveDocument,\n    getJobTitles,\n    renewListForPrivileges,\n    stateData,\n    statusTypeFilterData\n} from \"../common/PeykHelper\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport \"../../../helper/explorer_support\";\nimport Alert from \"react-s-alert\";\nimport ApproveDocumentViewer from \"../approval/helper/ApproveDocumentViewer\";\nimport DocumentState from \"../common/DocumentState\";\nimport StateDetail from \"../common/StateDetail\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport DropdownCheck from \"../../../components/Table/DropdownCheck\";\nimport NavBarKS from \"../../../components/NavBarKS\";\nimport VideoModal from \"../../../components/VideoModal\";\nimport Joyride from \"react-joyride\";\nimport {BORDRO_SESSION_WORKS, BORDROS_ARCHIVE} from \"../../../common/authorities/GrantDef\";\nimport base64_arraybuffer from \"base64-arraybuffer\";\nconst dropdownCheckRef = React.createRef();\nconst detailedSearchRef = React.createRef();\nclass BordroReportPage extends Component {\n\n    videos = [\n        {title: \"ucret bordrolari?\", id: \"lTjRaQZI4_Y\"},\n    ];\n    switchVideo = (video) => {\n        this.setState({video: video, showEczaciHelpModal: true})\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selection: [],\n            selectedAll: false,\n            content: [],\n            totalIdList: [],\n            total: 0,\n            page: 0,\n            size: 10,\n            departmentList: [],\n            loading: false,\n            manual: false,\n            showOnlyMissing: false,\n            showOnlySents: false,\n            isKepOwner: false,\n            flagForHomePage: true,\n            disabledDeleteBtn: false,\n            deleteSelection: [],\n            displaySelectionList: false,\n            steps: [\n                {\n                    target: '.form-control',\n                    content: \"Tüm ücret bordroları burada görüntülenir. Her biri için 'Seçiniz' münüleri altından 'Durum Detayı' butonuna tıklanarak onaylanma durumu görüntülenir. \",\n                    placement: \"center\",\n                },\n\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            width: window.innerWidth,\n            flag: 0,\n            showEczaciHelpModal: false,\n            video: null,\n            stop: null,\n            disableEducationQueryButton: false\n        };\n\n        this.fetchData = this.fetchData.bind(this);\n        this.isSelected = this.isSelected.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.previewContent = this.previewContent.bind(this);\n        this.setMediaViewer = this.setMediaViewer.bind(this);\n        this.downloadMedia = this.downloadMedia.bind(this);\n        this.downloadContent = this.downloadContent.bind(this);\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n        this.openBordroSession = this.openBordroSession.bind(this);\n        this.deleteSelected = this.deleteSelected.bind(this);\n        this.deleteSession = this.deleteSession.bind(this);\n        this.deleteList = this.deleteList.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n        this.sendBordrosAccordingToEducationInformation = this.sendBordrosAccordingToEducationInformation.bind(this);\n        this.previewSignedContent = this.previewSignedContent.bind(this);\n    }\n    sendBordrosAccordingToEducationInformation() {\n        let self = this;\n        let params = {\n            url: `/bordro/sendBordrosAccordingToEducationInformation`,\n            method: 'get'\n        };\n        self.setState({disableEducationQueryButton: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    disableEducationQueryButton: false,\n                    alert: (\n                        <SweetAlert success\n                                    confirmBtnText=\"Tamam\"\n                                    confirmBtnBsStyle=\"success\"\n                                    onConfirm={() => {\n                                        self.setState({alert: null});\n                                    }}\n                        >\n                            {response.data}\n                        </SweetAlert>\n                    )\n                });\n\n            }).catch(function (error) {\n            self.setState({disableEducationQueryButton: false});\n            showAxiosError(error);\n        });\n    }\n\n    componentWillMount() {\n        this.setState({isKepOwner: this.props.isKepOwner, jobTitlesData: getJobTitles()});\n        this.readDepartmentAll();\n    }\n\n    componentDidMount() {\n        if (this.props.location && this.props.location.widgetType) {\n            if (this.props.location.widgetType === \"unsigned\") {\n                this.handleSearch(\"state=PDF_CREATED&state=MIME_DEFERRED_SIGNED\");\n            } else if (this.props.location.widgetType === \"unsent\") {\n                this.handleSearch(\"state=MIME_SIGNED\");\n            } else if (this.props.location.widgetType === \"sent\") {\n                this.handleSearch(\"state>MIME_SIGNED\");\n            }\n        }\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=id,desc';\n        let searchQuery = correctStateQuery(!self.state.searchQuery ? '' : '&' + self.state.searchQuery);\n        searchQuery = this.filterForCurrentTerm(self, searchQuery);\n        let url = '/bordro/readBordroAll?';\n        if (this.props.match && this.props.match.params.id) {\n            url += 'employee_id=' + this.props.match.params.id\n        } else {\n            url += 'employee_id=' + \"\";\n        }\n        if (dropdownCheckRef.current?.state?.selectionTag === 'selectAll') {\n            url += '&bringAllBordroIds=true'\n        } else {\n            url += '&bringAllBordroIds=false'\n        }\n        let params = {\n            url: url + '&showOnlyMissing=' + self.state.showOnlyMissing + '&showOnlySents=' + self.state.showOnlySents +\n                '&page=' + page + '&size=' + size + searchQuery + sortStr,\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        self.props.reload(true);\n        requestK(params)\n            .then(function (response) {\n                checkGrantForFetchResponse(self, response.data);\n                let total = (response.data && response.data.page) ? response.data.page.totalElements : 0;\n                let content = (response.data && response.data.page) ? response.data.page.content : [];\n                let totalIdList = response.data ? response.data.selectedIdList : [];\n                self.setState({\n                    page: page,\n                    size: size,\n                    total,\n                    content,\n                    totalIdList,\n                    loading: false,\n                    searching: false,\n                    flagForHomePage: true\n                });\n                if (dropdownCheckRef.current?.state?.selectionTag === 'selectAll') {\n                    self.setState({selection: totalIdList});\n                    if (self.state?.selectedAll === false) {\n                        self.setState({selectedAll: true});\n                        dropdownCheckRef.current.setState({\n                            alert: (\n                                <SweetAlert info\n                                            confirmBtnText=\"Tamam\"\n                                            confirmBtnBsStyle=\"success\"\n                                            title=\"Tümü Seçildi\"\n                                            onConfirm={() => dropdownCheckRef.current.setState({alert: null})}\n                                >\n                                    {totalIdList.length + \" adet seçim yapıldı.\"}\n                                </SweetAlert>\n                            )\n                        });\n                    }\n                } else {\n                    self.setState({selectedAll: false})\n                }\n\n                self.props.reload(false);\n            })\n            .catch(function (error) {\n                self.setState({loading: false, searching: false});\n                self.props.reload(false);\n                showAxiosError(error);\n            });\n    }\n\n    filterForCurrentTerm = (self, searchQuery) => {\n        if (this.props.monthly && this.state.flagForHomePage) {\n            if (this.props.location) {\n                if (this.props.location.selectedTerm) {\n                    let selectedTerm = this.props.location.selectedTerm;\n                    self.setState({flagForHomePage: false});\n                    let start = selectedTerm + '-01';\n                    let end = selectedTerm + '-31';\n                    searchQuery = `&term=${start} 00:00:00&term=${end} 23:59:59`;\n                    Alert.success(\"Seçilen dönemde oluşturulan bordrolar listelenmektedir.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                }\n            }\n        }\n        return searchQuery;\n    };\n\n    handleSearch(searchQuery) {\n        this.setState({\n            searchQuery,\n            searching: true\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    }\n\n    deleteRow(row) {\n        let self = this;\n        let params = {\n            url: `/bordro/deleteBordro`,\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({disabledDeleteBtn: true});\n        requestK(params)\n            .then(function (response) {\n                let sessionId = response.data;\n                self.setState({alert: null, disabledDeleteBtn: false});\n                Alert.success(\"Bordro başarıyla silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                if (sessionId > 0) {\n                    self.setState({\n                        alert: (\n                            <SweetAlert showCancel warning\n                                        confirmBtnText=\"Evet\"\n                                        cancelBtnText=\"Hayır\"\n                                        confirmBtnBsStyle=\"danger\"\n                                        cancelBtnBsStyle=\"default\"\n                                        title=\"Emin misiniz?\"\n                                        disabled={self.state.disabledDeleteBtn}\n                                        onConfirm={() => self.deleteSession(sessionId)}\n                                        onCancel={() => self.setState({alert: null})}>\n                                Dönem İşlem kaydında başka bordro kalmamıştır, Dönem İşlemleri altındaki bu dönem işlemi\n                                silinsin mi?\n                            </SweetAlert>\n                        )\n                    });\n                } else {\n                    self.setState({\n                        manual: true,\n                        selection: [],\n                        selectedAll: false,\n                    });\n                    self.props.reload(true, \"sidebar\");\n                }\n            }).catch(function (error) {\n            showAxiosError({error});\n            self.setState({disabledDeleteBtn: false, alert: null});\n        });\n    }\n\n    deleteSession(sessionId) {\n        let self = this;\n        let params = {\n            url: `/bordrosession/deleteBordroSession`,\n            method: \"post\",\n            data: sessionId\n        };\n        self.setState({disabledDeleteBtn: true});\n        requestK(params)\n            .then(() => {\n                Alert.success(\"Dönem İşlemi başarıyla silindi.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                self.setState({\n                    disabledDeleteBtn: false,\n                    manual: true,\n                    alert: null,\n                    selection: [],\n                    selectedAll: false,\n                });\n                self.props.reload(true, \"sidebar\");\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDeleteBtn: false, alert: null});\n        });\n\n    }\n\n    deleteSelected() {\n        this.deleteList(this.state.selection, \"disabledDeleteSelectedBtn\");\n    }\n\n    deleteList(list, disabledBtnType) {\n        let self = this;\n        let params = {\n            url: `/bordro/deleteBordroList`,\n            method: \"post\",\n            data: list\n        };\n        self.setState({[disabledBtnType]: true, alert: null});\n        requestK(params)\n            .then(() => {\n                self.setState({\n                    selection: [],\n                    selectedAll: false,\n                    manual: true,\n                    [disabledBtnType]: false,\n                    alert: null\n                });\n                Alert.success(\"Seçilen kayıtlar silindi. Gönderilmiş olanlar silinemez.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({[disabledBtnType]: false});\n        });\n    }\n\n    previewContent(row, index) {\n        let self = this;\n        let params = {\n            url: `/bordro/previewBordroContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({\n            disabledPreviewBtn: true,\n            selectedIndex: index,\n            title: \"Ücret Bordrosu Önizleme\",\n            html: false\n        });\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                let base64Data = \"\";\n                if (blob != undefined) {\n                    let reader = new FileReader();\n                    reader.readAsDataURL(blob);\n                    reader.onloadend = function () {\n                        base64Data = reader.result;\n                        self.setState({url: base64Data});\n                    }\n                }\n                self.setState({mediaModal: true, disabledPreviewBtn: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({mediaModal: false, title: null, disabledPreviewBtn: false});\n        });\n    }\n\n    previewSignedContent(row, index) {\n        let self = this;\n        let params = {\n            url: `/bordro/previewBordroReportContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({\n            disabledPreviewBtn: true,\n            selectedIndex: index,\n            title: \"Ücret Bordrosu Önizleme\",\n            html: true,\n            type: \"bordro\",\n        });\n        self.setState({ mediaModal: true, selectedRow: row }, () => {\n            requestK(params)\n                .then(function (response) {\n                    let blob = new Blob([response.data], { type: 'text/html' });\n                    if (blob !== undefined) {\n                        let url = URL.createObjectURL(blob);\n                        self.setState({ url: url, html: true });\n                    }\n                    self.setState({ mediaModal: true, disabledPreviewBtn: false });\n                }).catch(function (error) {\n                showAxiosError(error);\n                self.setState({ mediaModal: false, title: null, disabledPreviewBtn: false });\n            });\n        });\n    }\n\n    setMediaViewer() {\n        this.setState({url: null, mediaModal: false});\n    }\n\n    openBordroSession(bordroId, index) {\n        let self = this;\n        let params = {\n            url: `/bordro/readBordroSessionIdByBordroId`,\n            method: \"post\",\n            data: bordroId\n        };\n        self.setState({disabledOpenSessionBtn: true, selectedIndex: index});\n        requestK(params)\n            .then(function (response) {\n                self.setState({disabledOpenSessionBtn: false});\n                self.props.history.push(`/${self.props.peykName}/bordroimport/${response.data}`)\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledOpenSessionBtn: false});\n        });\n    }\n\n    arrangeDataSet = (type) => {\n        let self = this;\n        let dataSet = {};\n        dataSet.sheetName = \"Bordro_Arşiv_Raporu\"\n        dataSet.uuid = create_UUID();\n        dataSet.list = self.state.selection\n        dataSet.type = type;\n        return dataSet;\n    }\n\n    downloadMedia(type) {\n        let self = this;\n        let data = self.arrangeDataSet(type);\n        data.source = \"bordroreports\";\n        let params = {\n            url: `/bordro/downloadReport`,\n            method: \"post\",\n            data: data\n        };\n        requestK(params)\n            .then(() => {\n                Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 8000\n                });\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    downloadContent(row, index) {\n        let self = this;\n        let params = {\n            url: `/bordro/previewBordroContent`,\n            responseType: 'arraybuffer',\n            method: \"post\",\n            data: row.id\n        };\n        self.setState({disabledDownloadBtn: true, loadingType: \"downlaod\", selectedIndex: index});\n        requestK(params)\n            .then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                var link = document.createElement('a');\n                link.href = window.URL.createObjectURL(blob);\n                let randomNum = Math.floor(Math.random() * 100000);\n                let createdAt = !!row.createdAt ? (\"_\" + row.createdAt.toString().substring(0, row.createdAt.indexOf(\"T\"))) : \"\";\n                let fileName = \"Bordro\" +\n                    (row.parsedTckn ? (\"_\" + row.parsedTckn + \"_\") : \"_\") +\n                    row.term.split(\"-\")[0] + \"_\" +\n                    row.term.split(\"-\")[1] + \"_\" + createdAt + \"_\" + randomNum + \".pdf\";\n                link.download = fileName;\n                document.body.appendChild(link);\n                if (row.timeStamp != null && row.timeStamp != \"\") {\n                    let formTimeStamp = new Blob([base64_arraybuffer.decode(row.timeStamp)], {type: 'application/octet-stream'});\n                    let linkTs = document.createElement('a');\n                    linkTs.href = window.URL.createObjectURL(formTimeStamp);\n                    linkTs.download = fileName + \".zd\";\n                    document.body.appendChild(linkTs);\n                    linkTs.click();\n                }\n                link.click();\n                self.setState({disabledDownloadBtn: false, loadingType: null});\n                self.setState({loading: false});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({disabledDownloadBtn: false, title: null, loadingType: null});\n        });\n    }\n\n    downloadBulkContent = (type) => {\n        let self = this;\n        let data = self.arrangeDataSet(type);\n        if (self.state.selection.length <= 100) {\n            let params = {\n                url: `/bordro/downloadBulkContent`,\n                method: \"post\",\n                data: data\n            };\n            requestK(params)\n                .then(() => {\n                    Alert.success(\"İndirme talebiniz işleme alındı. 'Bekleyen İndirmeler'den' takip edebilirsiniz.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 8000\n                    });\n                }).catch(function (error) {\n                showAxiosError(error);\n            });\n        } else {\n            this.setState({\n                alert: (\n                    <SweetAlert info\n                                confirmBtnText=\"Tamam\"\n                                confirmBtnBsStyle=\"warning\"\n                                title=\"UYARI\"\n                                onConfirm={() => {\n                                    this.setState({alert: null});\n                                }}\n                    >\n                        Tek seferde en fazla 100 bordro indirme işlemi\n                        yapabilirsiniz!\n                    </SweetAlert>\n                )\n            });\n        }\n    }\n\n    readDepartmentAll = () => {\n        let self = this;\n        let params = {\n            url: '/department/readDepartment',\n            method: \"get\",\n        };\n        requestK(params)\n            .then(function (response) {\n                let departmentList = response.data;\n                self.setState({departmentList});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    toggleCheckboxChange(e, row, id) {\n        let self = this;\n        let checked = e.target.checked;\n        let items = self.state.content;\n        let selection = self.state.selection;\n        let deleteSelection = self.state.deleteSelection;\n        if (checked === false && dropdownCheckRef.current?.state?.selectionTag === \"selectAll\") {\n            dropdownCheckRef.current.setState({selectionTag: \"await\",})\n        }\n        if (row === \"all\") {\n            let selection = [];\n            if (checked) {\n                items.forEach(item => {\n                    selection.push(item[id]);\n                    if (DocumentState[item.state].value < 300) {\n                        deleteSelection.push(item.bordroSession[id]);\n                    }\n                });\n            }\n            self.setState({selection: selection, deleteSelection: deleteSelection, selectedAll: checked});\n        } else {\n            let index = selection.indexOf(row[id]);\n            let deleteIndex = deleteSelection.indexOf(row.bordroSession[id]);\n            if (deleteIndex >= 0) {\n                deleteSelection = [\n                    ...deleteSelection.slice(0, index),\n                    ...deleteSelection.slice(index + 1)\n                ];\n            }\n            if (index >= 0) {\n                selection = [\n                    ...selection.slice(0, index),\n                    ...selection.slice(index + 1)\n                ];\n            } else {\n                selection.push(row[id]);\n                if (DocumentState[row.state].value < 300) {\n                    deleteSelection.push(row.bordroSession[id]);\n                }\n            }\n            self.setState({\n                deleteSelection: deleteSelection,\n                selection: selection,\n                selectedAll: ((selection.length > 0) ? (selection.length === self.state.content.length) : false)\n            });\n        }\n    }\n\n    isSelected(id) {\n        return (this.state.selection.indexOf(id) !== -1);\n    }\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true});\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback = (data) => {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    };\n\n    renderMainTable() {\n        let pageIdList = [];\n        if (this.state.content && this.state.content instanceof Array) {\n            this.state.content.map(e => {\n                pageIdList.push(e.id);\n            });\n        }\n        let columnList = [\n            {\n                Header: (this.state.content &&\n                    <DropdownCheck\n                        ref={dropdownCheckRef}\n                        selectionIdList={this.state.selection}\n                        totalIdList={this.state.totalIdList}\n                        pageIdList={pageIdList}\n                        onChange={e => {\n                            if (dropdownCheckRef.current?.state?.selectionTag === 'unselectAll') {\n                                this.setState({selection: [], selectedAll: false});\n                            } else if (dropdownCheckRef.current?.state?.selectionTag === 'selectAll') {\n                                dropdownCheckRef.current.setState({alert: null});\n                                detailedSearchRef.current.handleSearch();\n                            } else {\n                                this.setState({selection: e})\n                            }\n                        }}/>),\n                accessor: \"id\",\n                selectType: \"checkbox\",\n                sortable: false,\n                Cell: (row, index) => (this.state.content &&\n                    <input type=\"checkbox\" checked={this.isSelected(row.id)}\n                           onChange={(e) => this.toggleCheckboxChange(e, row, \"id\", index)}/>)\n            },\n            {\n                Header: \"Dönem\",\n                accessor: \"term\",\n                Cell: row => (\n                    <div>\n                        {!!row.term && moment(row.term, 'YYYY/MM/DD').format('YYYY/MM')}\n                    </div>\n                )\n            },\n            {\n                Header: \"Lokasyon\",\n                accessor: \"location\",\n                Cell: row => (\n                    <div style={{margin: 0}}><TextOverFlowTooltip text={row.location} maxLength={15}/></div>\n                )\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"parsedTckn\",\n                Cell: row => (\n                    <div>\n                        {(row.employee && row.employee.name) && <span className=\"text-success\">{row.parsedTckn}</span>}\n                        {!(row.employee && row.employee.name) && <span className=\"text-danger\">{row.parsedTckn}</span>}\n                    </div>\n                )\n            },\n            {\n                Header: \"Adı\",\n                accessor: \"employee_name\",\n                Cell: row => (\n                    <div>\n                        {row.employee && row.employee.name}\n                    </div>\n                )\n            },\n            {\n                Header: \"Soyadı\",\n                accessor: \"employee_surname\",\n                Cell: row => (\n                    <div>\n                        {row.employee && row.employee.surname}\n                    </div>\n                )\n            },\n            {\n                Header: \"Departman\",\n                accessor: \"employee_department\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.employee && row.employee.department &&\n                        <TextOverFlowTooltip text={row.employee.department.name} maxLength={15}/>}</div>\n                )\n            },\n            {\n                Header: \"Görev\",\n                accessor: \"employee_jobTitle\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.employee &&\n                        <TextOverFlowTooltip text={row.employee.jobTitle} maxLength={15}/>}</div>\n                )\n            },\n            {\n                Header: \"Kep Adresi\",\n                accessor: \"employee_kepAddress\",\n                Cell: row => (\n                    <div style={{margin: 0}}>{row.employee &&\n                        <TextOverFlowTooltip text={row.employee.kepAddress} maxLength={20}/>}</div>\n                )\n            },\n            {\n                Header: \"Uyarı Sayısı\",\n                accessor: \"warningCount\",\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.warningCount}\n                    </div>\n                )\n            },\n            {\n                Header: \"Durumu\",\n                accessor: \"state\",\n                Cell: row => (\n                    <div>\n                        {row.error && <span className=\"text-danger\">{row.error}</span>}\n                        {!row.error &&\n                            <span\n                                className={\"text-\" + DocumentState[row.state].messageType}>{DocumentState[row.state].message}</span>}\n                    </div>\n                )\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                Cell: (row, index) => (\n                    <div className=\"btn-group\" style={{padding: 0, margin: 0}}>\n                        <div className=\"dropdown\" style={{padding: 0, margin: 0}}>\n                            <button className=\"MenuBtn2 listt btn btn-default\"\n                                    style={{WebkitTextFillColor: 'white'}}\n                                    type=\"button\" data-toggle=\"dropdown\">Seçİnİz\n                            </button>\n                            <div className=\"dropdown-menu\" aria-labelledby={\"dropdownMenuButton_\" + row.id}>\n                                {!(this.state.disabledOpenSessionBtn && index === this.state.selectedIndex) && checkGrantToDisplay(this, BORDRO_SESSION_WORKS) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => {\n                                           this.openBordroSession(row.id, index)\n                                       }}>\n                                        <i className=\"fa fa-eye\"/>Dönem İşlemini Aç\n                                    </a>}\n                                {!(this.state.disabledPreviewBtn && index === this.state.selectedIndex) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.previewContent(row, index)}>\n                                        <i className=\"fa fa-search\"/>Ücret Bordrosu Görüntüle\n                                    </a>}\n                                {/*{!(this.state.disabledPreviewBtn && index === this.state.selectedIndex) &&*/}\n                                {/*    <a className=\"dropdown-item\"*/}\n                                {/*       onClick={() => this.previewSignedContent(row, index)}>*/}\n                                {/*        <i className=\"fa fa-search\"/>İmzalı Ücret Bordrosu Görüntüle*/}\n                                {/*    </a>}*/}\n                                {(DocumentState[row.state].value === 600 || DocumentState[row.state].value === 611 || DocumentState[row.state].value === 620) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.resendMimeRow(row)}>\n                                        <i className=\"fa fa-bell\"/>Uyarı Gönder\n                                    </a>}\n                                {<a className=\"dropdown-item\"\n                                    style={(this.state.index === index && this.state.loadingType === \"download\") ? {\n                                        pointerEvents: 'none',\n                                        cursor: 'none'\n                                    } : {}}\n                                    onClick={() => this.downloadContent(row)}>\n                                    <i\n                                        className={(this.state.index === index && this.state.loadingType === \"downloadApproveDoc\" ? \"fas fa-spinner fa-spin\" : \"fa fa-download\")}/>Bordro\n                                    İndir\n                                </a>}\n                                {(DocumentState[row.state].value === 610 || (DocumentState[row.state].value >= 630 && DocumentState[row.state].value <= 660)) &&\n                                    <a className=\"dropdown-item\"\n                                       style={(this.state.index === index && this.state.loadingType === \"downloadApproveDoc\") ? {\n                                           pointerEvents: 'none',\n                                           cursor: 'none'\n                                       } : {}}\n                                       onClick={() => downloadApproveDocument(this, row, index, \"BORDRO\")}>\n                                        <i\n                                            className={(this.state.index === index && this.state.loadingType === \"downloadApproveDoc\" ? \"fas fa-spinner fa-spin\" : \"fa fa-download\")}/>Onay\n                                        Belgesini İndir\n                                    </a>}\n                                {row.employee && row.employee.name &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => this.setState({stateDetail: row})}>\n                                        <i className=\"fa fa-info-circle\"/>Durum Detayı\n                                    </a>}\n                                {DocumentState[row.state].value < 300 && checkGrantToDisplay(this, BORDRO_SESSION_WORKS) &&\n                                    <a className=\"dropdown-item\"\n                                       onClick={() => {\n                                           {\n                                               this.setState({\n                                                   alert: (\n                                                       <SweetAlert showCancel\n                                                                   warning\n                                                                   disabled={this.state.disabledDeleteBtn}\n                                                                   confirmBtnText=\"Evet\"\n                                                                   cancelBtnText=\"Hayır\"\n                                                                   confirmBtnBsStyle=\"danger\"\n                                                                   cancelBtnBsStyle=\"default\"\n                                                                   title=\"Emin misiniz?\"\n                                                                   onConfirm={() => {\n                                                                       this.deleteRow(row)\n                                                                   }}\n                                                                   onCancel={() => this.setState({alert: null})}>\n                                                           Bordro silinecek.\n                                                       </SweetAlert>\n                                                   )\n                                               });\n                                           }\n                                       }}>\n                                        <i className=\"fas fa-trash-alt\"/>Bordro Sil\n                                    </a>}\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        ];\n        let columns = renewListForPrivileges(this, columnList, \"accessor\", this.state.isKepOwner);\n        if (this.props.match && this.props.match.params.id) {\n            let newList = [];\n            columns.forEach(item => {\n                if (!item[\"accessor\"].includes(\"department\") && !item[\"accessor\"].includes(\"jobTitle\")) {\n                    newList.push(item);\n                }\n            });\n            columns = newList;\n        }\n\n        return <Table columns={columns}\n                      content={this.state.content}\n                      loading={this.state.loading}\n                      loadingText=\"Kayıtlar getiriliyor...\"\n                      total={this.state.total}\n                      page={this.state.page}\n                      size={this.state.size}\n                      manual={this.state.manual}\n                      options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                      fetchData={this.fetchData}/>\n    }\n\n    resendMimeRow = (row) => {\n        let self = this;\n        let list = [];\n        list.push(row.id);\n        self.resend(list);\n    }\n\n    resendMimeList = () => {\n        let self = this;\n        let list = self.state.selection;\n        this.resend(list);\n    }\n    resend = (list) => {\n        let self = this;\n        let params = {\n            url: `/bordro/resendMimeArchive`,\n            method: \"post\",\n            data: list\n        };\n        Alert.warning(\"Uyarı gönderme işlemi başlatılıyor...\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 4000\n        });\n        self.setState({loading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({manual: true, loading: false});\n                Alert.success(response.data, {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 4000\n                });\n            })\n            .catch(function (error) {\n                self.setState({loading: false});\n                showAxiosError(error);\n            });\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let locale = this.state.locale;\n\n        const fieldList = [\n            {\n                label: \"Dönem Tarihi (Başlangıç)\",\n                accessor: \"min_term\",\n                type: \"month\",\n                operator: \">=\",\n            },\n            {\n                label: \"Dönem Tarihi (Bitiş)\",\n                accessor: \"max_term\",\n                type: \"month\",\n                operator: \"<=\",\n            },\n            {\n                label: \"Çalışan TCKN\",\n                accessor: \"parsedTckn\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n            {\n                label: \"Durum\",\n                accessor: \"state\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: stateData(this.state.isKepOwner)\n            },\n            {\n                label: \"Çalışan Adı\",\n                accessor: \"employee_name\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Çalışan Soyadı\",\n                accessor: \"employee_surname\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Çalışan KEP Adresi\",\n                accessor: \"employee_kepAddress\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Çalışan Departmanı\",\n                accessor: \"employee_department_name\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: departmentData(this.state.departmentList),\n            },\n            {\n                label: \"Çalışan Durumu\",\n                accessor: \"employee_statusType\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: statusTypeFilterData()\n            },\n            {\n                label: \"Çalışan Görevi\",\n                accessor: \"employee_jobTitle\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.jobTitlesData\n            },\n            {\n                label: \"Lokasyon Bilgisi\",\n                accessor: \"location\",\n                type: \"text\",\n                operator: \"=\",\n            },\n            {\n                label: \"Uyarı Sayısı\",\n                accessor: \"warningCount\",\n                type: \"numericText\",\n                operator: \"=\",\n            },\n        ];\n        let fields = renewListForPrivileges(this, fieldList, \"accessor\", this.state.isKepOwner);\n        if (this.props.match && this.props.match.params.id) {\n            let newList = [];\n            fields.forEach(item => {\n                if (!item[\"accessor\"].includes(\"employee_\") && !item[\"accessor\"].includes(\"parsedTckn\")) {\n                    newList.push(item);\n                }\n            });\n            fields = newList;\n        }\n\n        return (\n            <Row className=\"baseBackground\">\n                {this.state.joyrideActive &&\n                    <Joyride\n                        disableBeacon={false}\n                        autoStart\n                        locale={locale}\n                        steps={steps}\n                        continuous={true}\n                        run={this.state.shouldRun}\n                        scrollToFirstStep={true}\n                        showProgress={true}\n                        showSkipButton={true}\n                        scrollToSteps={true}\n                        disableCloseOnEsc={true}\n                        disableOverlay={false}\n                        disableOverlayClicks={false}\n                        keyboardNavigation={true}\n                        hideBackButton={false}\n                        disableOverlayClose={true}\n                        callback={this.callback}\n                        holePadding={0}\n                        shouldRun={this.state.shouldRun}\n                        styles={{\n                            options: {\n                                zIndex: 100000,\n                                primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                            }\n                        }}/>\n                }\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    <NavBarKS offsetWidth={this.props.offsetWidth} innerWidth={window.innerWidth}\n                              btnDisabled={this.state.btnDisabled}\n                              selection={this.state.selection} name='archiveInvoiceList'>\n                        {<StickButton position=\"leftSide\" className=\"zocial Excel\" style={{fontSize: 'x-small'}}\n                                      label=\"Rapor Excel İndir\"\n                                      title=\"Seçilen Ücret Bordroların Raporunu Excel Olarak İndir\"\n                                      disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                      onClick={() => this.state.selection && this.state.selection.length > 0 && this.downloadMedia(\"excel\")}/>}\n                        {<StickButton position=\"leftSide\" className=\"zocial Pdf\" style={{fontSize: 'x-small'}}\n                                      label=\"Rapor PDF İndir\"\n                                      title=\"Seçilen Ücret Bordroların Raporunu PDF Olarak İndir\"\n                                      disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                      onClick={() => this.state.selection && this.state.selection.length > 0 && this.downloadMedia(\"pdf\")}/>}\n                        {checkGrantToDisplay(this, BORDROS_ARCHIVE) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Folder\" style={{fontSize: 'x-small'}}\n                                         label=\"Bordroları İndir\" title=\"Seçilen Ücret Bordrolarını ZIP olarak İndir\"\n                                         disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                         onClick={() => this.state.selection && this.state.selection.length > 0 && this.downloadBulkContent(\"zip\")}/>}\n                        {checkGrantToDisplay(this, BORDROS_ARCHIVE) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Gonder\" style={{fontSize: 'x-small'}}\n                                         disabled={this.state.loading || !(this.state.selection && this.state.selection.length > 0)}\n                                         label=\"Uyarı Gönder\" title=\"Seçilen Dokümanlar İçin Uyarı Gönder\"\n                                         onClick={() => {\n                                             {\n                                                 this.setState({\n                                                     alert: (\n                                                         <SweetAlert showCancel warning\n                                                                     confirmBtnText=\"Evet\"\n                                                                     cancelBtnText=\"Hayır\"\n                                                                     confirmBtnBsStyle=\"success\"\n                                                                     cancelBtnBsStyle=\"default\"\n                                                                     title=\"Emin misiniz?\"\n                                                                     onConfirm={() => {\n                                                                         this.setState({alert: null});\n                                                                         this.resendMimeList()\n                                                                     }}\n                                                                     onCancel={() => this.setState({alert: null})}\n                                                         >\n                                                             Seçilen Dokümanlar İçin Uyarı Gönderilecektir.\n                                                         </SweetAlert>\n                                                     )\n                                                 });\n                                             }\n                                         }}/>}\n                        {checkGrantToDisplay(this, BORDROS_ARCHIVE) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Sil\" label=\"Seçilenleri Sil\"\n                                         title=\"Seçilen Bordroları Sil\"\n                                         disabled={this.state.disabledDeleteSelectedBtn || !(this.state.selection && this.state.selection.length > 0)}\n                                         style={{fontSize: 'x-small'}}\n                                         onClick={() => {\n                                             this.setState({\n                                                 alert: (\n                                                     <SweetAlert showCancel warning\n                                                                 confirmBtnText=\"Evet\"\n                                                                 cancelBtnText=\"Hayır\"\n                                                                 confirmBtnBsStyle=\"danger\"\n                                                                 cancelBtnBsStyle=\"default\"\n                                                                 title=\"Emin misiniz?\"\n                                                                 onConfirm={this.deleteSelected}\n                                                                 onCancel={() => this.setState({alert: null})}\n                                                     >\n                                                         Sadece seçilen bordro kayıtları silinecek.\n                                                     </SweetAlert>\n                                                 )\n                                             });\n                                         }}/>}\n\n                        {this.props.currentUser.customerCheckEducationState != null && this.props.currentUser.customerCheckEducationState == true && checkGrantToDisplay(this, BORDROS_ARCHIVE) &&\n                            <StickButton position=\"leftSide\" className=\"zocial Güncelle\" label=\"Eğitimini Tamamlayanların Bordrolarını Gönder\"\n                                         title=\"Eğitimini Tamamlayanların Bordrolarını Gönder\"\n                                         style={{fontSize: 'x-small'}}\n                                         disabled = {this.state.disableEducationQueryButton}\n                                         onClick={() => {\n                                           this.sendBordrosAccordingToEducationInformation();\n                                         }}/>}\n\n                        <div className=\"helpButtonContainer\" position='rightSide'\n                             style={{position: 'relative', top: '60%', right: '-5em'}}>\n                            <button className=\"helpButton\" onClick={() => {\n                                this.activateJoyride()\n                            }}>\n                                <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                                <i className=\"far fa-question-circle helpButtonIcon\"/>\n                            </button>\n                            {this.state.stop &&\n                                <div className=\"nav-item dropdown  videoIconContainer\"\n                                     style={{display: \"inline-block\", paddingRight: \"30px\"}}>\n                                    <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                            aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                        <span className=\"tooltipText\">Yardimci Videolar</span>\n                                        <i className=\"fab fa-youtube videoIcon\"/>\n                                    </button>\n                                    <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                         aria-labelledby=\"videosLink\">\n                                        {\n                                            this.videos.map((video, i) =>\n                                                <a key={i} className=\"dropdown-item\"\n                                                   onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                        }\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    </NavBarKS>\n                </Nav>\n                {this.state.alert &&\n                    <div className=\"row satirBasi\">\n                        {this.state.alert}\n                    </div>\n                }\n                <div className=\"row satirBasi\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">Ücret Bordroları Arşiv</CardTitle>\n                            </CardHeader>\n                            <CardBody style={{paddingBottom: '0px'}}>\n                                <div className=\"\">\n                                    <div className=\"\" style={{marginTop: '10px', marginBottom: '0px'}}>\n                                        <DetailedSearch ref={detailedSearchRef}\n                                                        fields={fields}\n                                                        loading={this.state.searching}\n                                                        onSearch={this.handleSearch}/>\n                                    </div>\n                                </div>\n                            </CardBody>\n                            {checkGrantToDisplay(this, [BORDROS_ARCHIVE]) &&\n                                <CardBody>\n                                    <Col sm={12} md={4} lg={4} style={{padding: '10px 20px'}}>\n                                        <Input type=\"checkbox\" checked={this.state.showOnlyMissing}\n                                               onChange={(e) => {\n                                                   this.setState({\n                                                       showOnlyMissing: e.target.checked,\n                                                       manual: true\n                                                   });\n                                               }}/>\n                                        <Label id=\"showListOfFeeOfPayroll\">Sadece sahibi bulunamayan ücret bordrolarını\n                                            göster</Label>\n                                    </Col>\n                                </CardBody>}\n                            <CardBody>\n                                {checkGrantToDisplay(this, BORDROS_ARCHIVE) &&\n                                    <Col sm={12} md={4} lg={4} style={{padding: '10px 20px'}}>\n                                        <Input type=\"checkbox\" checked={this.state.showOnlySents}\n                                               onChange={(e) => {\n                                                   this.setState({\n                                                       showOnlySents: e.target.checked,\n                                                       manual: true\n                                                   });\n                                               }}/>\n                                        <Label id=\"showOnlySentPayroll\">Sadece tüm gönderilmiş bordroları göster</Label>\n                                    </Col>}\n                            </CardBody>\n                            <CardBody>\n                                <div className=\"row\" style={{marginLeft: '10px', color: 'red'}}>\n                                   <span>\n                                      {(this.state.selection.length !== 0 ? \"Seçilen satır sayısı \" + this.state.selection.length : \"\")}\n                                   </span>\n                                </div>\n                                {this.renderMainTable()}\n                            </CardBody>\n                        </div>\n                    </div>\n                </div>\n                {this.state.mediaModal &&\n                    <ApproveDocumentViewer url={this.state.url}\n                                           modal={this.state.mediaModal}\n                                           closeModal={this.setMediaViewer}\n                                           canvas={true}\n                                           row={this.state.selectedRow}\n                                           html={this.state.html}\n                                           type={this.state.type}\n                    />}\n                {this.state.stateDetail &&\n                    <StateDetail detail={this.state.stateDetail} documentType={\"Bordro\"}\n                                 toggle={() => this.setState({stateDetail: undefined})}\n                    />}\n                {this.state.showEczaciHelpModal &&\n                    <VideoModal video={this.state.video} isOpen={this.state.showEczaciHelpModal}\n                                close={() => this.setState({showEczaciHelpModal: false})}/>\n                }\n\n            </Row>\n        );\n    }\n}\n\nexport default BordroReportPage;\n"],"sourceRoot":""}