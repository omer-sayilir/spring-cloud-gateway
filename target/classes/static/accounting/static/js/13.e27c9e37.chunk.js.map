{"version":3,"sources":["accounting/kepik/formbuilder/core.js","accounting/kepik/formbuilder/rjsf-patch/utils.js","accounting/kepik/formbuilder/default/settings.js","accounting/kepik/formbuilder/default/menu.js","accounting/kepik/formbuilder/rjsf-patch/ArrayField.jsx","accounting/kepik/formbuilder/rjsf-patch/BooleanField.jsx","accounting/kepik/formbuilder/rjsf-patch/StringField.jsx","accounting/kepik/formbuilder/rjsf-patch/SchemaField.jsx","accounting/kepik/formbuilder/reducers.js","accounting/kepik/formbuilder/store.js","accounting/kepik/formbuilder/InlineEditor.jsx","accounting/kepik/formbuilder/Tree/Menu.jsx","accounting/kepik/formbuilder/Tree/TreeNodeTitle.jsx","accounting/kepik/formbuilder/Tree/Tree.jsx","accounting/kepik/formbuilder/Tree/index.js","accounting/kepik/formbuilder/rjsf-patch/Form.jsx","accounting/kepik/formbuilder/Template/Template.jsx","accounting/kepik/formbuilder/Template/connectors.jsx","accounting/kepik/formbuilder/Template/index.jsx","accounting/kepik/formbuilder/views/FormView.jsx","accounting/kepik/formbuilder/JsonEditor.jsx","accounting/kepik/formbuilder/views/SchemaView.jsx","accounting/kepik/formbuilder/views/UiSchemaView.jsx","accounting/kepik/formbuilder/views/FormDataView.jsx","accounting/kepik/formbuilder/Editor/JsonEditor.jsx","accounting/kepik/formbuilder/Editor/BasicEditor.jsx","accounting/kepik/formbuilder/Editor/index.jsx","accounting/kepik/formbuilder/Toolbar.jsx","accounting/kepik/formbuilder/Settings.jsx","accounting/kepik/formbuilder/FormBuilder.jsx"],"names":["isEmptyObject","obj","i","undefined","isLeaf","node","schema2tree","name","schema","uiSchema","schema2node","forceChange","FORCE_CHANGE_KEY","Date","now","process","e","path","key","join","length","type","children","properties","child","push","Array","isArray","items","nextPath","map","a","toString","additionalItems","getNodeByPath","tree","find","getNode","split","updateParentKey","parentKey","Object","assign","getNodeParentKey","substring","updateNodeParentKeyAndName","newKey","updateNodeByNewChildren","oldNode","newChildren","newSchema","newProperties","newItemsNode","newAdditionalItemsNode","updateSchema","newUiSchema","startsWith","empty","updateUiSchema","newNode","updateArrayIndex","_removeNodeByPath","_ref","head","tail","arrayItemsFlag","arguments","removed","newTree","filter","required","newRequired","removeNodeByPath","removeNode","_addNodeByPath","_ref2","position","node2Add","added","cn","newNodeChildren","addNodeByPath","_ref3","addNode","targetKey","_moveNodeByPath","_ref4","_ref5","sh","st","th","tt","updated","node2move","tmpTree","moveNodeByPath","sourceNode","targetNode","moveNode","sourceKey","allowedUpdatedTypes","updateNodeByPath","nodeUpdate","_updateNodeByPath","_ref6","includes","nu","typeUpdated","oldSchema","oldUiSchema","updateNode","getNodeByRjsfId","rjsfId","slice","indexOf","index","isNaN","rest","n","Error","msg","React","createElement","Alert","message","showIcon","getWidget","_getWidget","TitleField","props","id","title","getDefaultRegistry","fields","require","default","ArrayField","StringField","BooleanField","SchemaField","widgets","definitions","formContext","module","exports","leftSiderWidth","rightSiderWidth","formWidth","isInlineMode","subViews","basic","metinsatırı","seçimkutusu","seçimkutuları","enum","uniqueItems","açılırliste","enumNames","sayı","metinalanı","tarih","dosya","resim","accept","ArrayFieldPatched","renderMultiSelect","idSchema","formData","disabled","readonly","autofocus","onBlur","onFocus","registry","rawErrors","this","itemsSchema","retrieveSchema","enumOptions","optionsList","widget","options","getUiOptions","Widget","$id","multiple","onChange","onSelectChange","value","oneOf","option","const","label","DescriptionField","defaultProps","format","isSelect","defaultWidget","hasWidget","placeholder","PatchedSchemaField","componentDidCatch","error","info","notification","description","duration","defaultMenu","defaultMenuSchema","emptyTree","reducer","combineReducers","state","action","newState","history","removeUnnecessaryHistory","undoable","payload","targetNodeKey","node2add","source","target","includeAction","activeNodeKey","settings","defaultSettings","menu","menuOpenKeys","persistConfig","storage","stateReconciler","hardSet","throttle","initTree","firstName","lastName","age","bio","password","minLength","telephone","classNames","date","inputType","persistedReducer","persistReducer","present","store","createStore","past","future","persistor","persistStore","InlineEditor","Component","constructor","super","setState","onCompleteEditing","editing","newValue","trim","onStartEditing","stopPropagation","preventDefault","input","focus","onCancelEditing","componentWillReceiveProps","nextProps","renderEditing","Input","ref","r","onKeyUp","keyCode","renderView","EditOutlined","onClick","render","SubMenu","Item","Menu","AddItemMenu","onAddNode","occupied","newName","nameGen","menuTree","menuOpenChange","mode","theme","openKeys","onOpenChange","b","connect","dispatch","keys","TreeNodeTitle","PureComponent","updateNodeName","searchValue","isRoot","indexBefore","toLowerCase","indexAfter","style","display","color","className","Dropdown","placement","trigger","overlay","PlusCircleOutlined","Popconfirm","onConfirm","okText","cancelText","CloseCircleFilled","TreeNode","Tree","Search","Demo","onDrop","dropKey","eventKey","dragKey","dragNode","dropPos","pos","dropPosition","Number","onExpand","expandedKeys","searchExpanded","newSearchExpanded","loop","data","item","parents","setActiveNode","selectedKeys","draggable","onDragEnter","onSelect","selected","blockNode","height","defaultExpandAll","selectedKey","updateNodeTitle","updateMode","imageFileChooserWidget","ImageUpload","fileChooserWidget","FileChooserWidget","FormPatch","Form","getRegistry","ArrayFieldTemplate","ObjectFieldTemplate","FieldTemplate","Label","htmlFor","TextArea","ACTIVE_STYLE","backgroundColor","ExtendedInlineEditor","InlineTextAreaEditor","autoSize","ButtonGroup","select","remove","Tooltip","href","SelectOutlined","DeleteOutlined","errors","help","hidden","displayLabel","active","updateTitle","updateDescription","updateHelp","labelElement","descriptionElement","helpElement","_label","_description","_help","prop","content","_ref7","titleElement","_title","FormView","setFormData","liveValidate","margin","idPrefix","isLiveValidate","JsonEditor","JSON","parse","string","onClickPrettify","stringify","objA","objB","hasOwnProperty","shallowEqual","shouldComponentUpdate","nextState","renderErrorMessage","errorMessage","matched","exec","textAreaRef","selectionStart","selectionEnd","setTree","json2schema","charAt","toUpperCase","name2title","isInteger","s","genForm","Button","NodeJsonEditor","schemaJsonString","uiSchemaJsonString","rschema","Option","Select","FormItemTemplate","List","actions","size","shape","icon","CloseOutlined","Meta","TimeThrottle","timer","clearTimeout","setTimeout","onSubmitValue","onRemove","componentWillUnmount","TimeThrottleInput","TimeThrottleTextArea","TimeThrottleRange","min","max","InputNumber","width","textAlign","borderLeft","pointerEvents","lodash","boolean","checkbox","radio","text","uri","textarea","datetime","file","number","updown","range","integer","array","checkboxes","files","toPairs","flatMap","groupBy","types","t","_ref8","_ref9","_ref11","update","_ref12","_ref17","_ref22","rangeMeta","match","minp","maxp","_ref23","itemRange","_ref24","Switch","defaultChecked","enumKey","enumName","_ref25","_ref26","values","formatOptions","_ref27","BasicEditor","l","f","addable","editable","PlusOutlined","itemLayout","dataSource","renderItem","_render","TabPane","Tabs","Editor","editorList","isSuperAdmin","updateUiOptions","uiOptionsUpdate","uiOptions","newUiOptions","filteredEditors","defaultActiveKey","tab","schemaUpdate","uiSchemaUpdate","buttonStyle","marginLeft","Toolbar","save","self","survey","selectedSurveyForm","isActive","personalInfo","setSavingStateTrue","params","url","method","disabledSaveBtn","isLoading","requestK","then","response","setSavingStateFalse","displayCreateUpdateDialog","manual","Swal","confirmButtonText","result","catch","showAxiosError","open","bind","onChangeState","onChangeIsPerinfoForm","componentDidMount","newForm","jsonContent","checked","undo","redo","updateSettings","Row","Col","UndoOutlined","RedoOutlined","StickButton","ActionTypes","UNDO","REDO","confirm","Modal","tipFormatter","flag","window","innerWidth","Settings","siderWidth","Slider","included","left","right","inlineMode","v","rootNode","setMenu","listItems","Header","Sider","Content","Layout","FormBuilder","toggle","collapsed","currentUser","isSaving","collapsible","background","padding","overflow","boxShadow","ReactLoading","fill","minHeight","Card","bordered","verticalAlign","SchemaView","UiSchemaView","FormDataView","NodeEditor","AppContainer","Provider","PersistGate","loading","location"],"mappings":"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","file":"static/js/13.e27c9e37.chunk.js","sourcesContent":["function isEmptyObject(obj) {\n  if (!obj) return true;\n  for (const i in obj) {\n    if (obj[i] !== undefined) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isLeaf(node) {\n  return node.isLeaf;\n}\n\nfunction schema2tree(name, schema, uiSchema) {\n  return [schema2node([name], schema, uiSchema)];\n}\n\nlet forceChange = ((FORCE_CHANGE_KEY) => (obj) => {\n  // workaround for forcing rjsf to rerender because the schema still deep equal to after reordering properties.\n  if (FORCE_CHANGE_KEY in obj) {\n    delete obj[FORCE_CHANGE_KEY];\n  } else {\n    obj[FORCE_CHANGE_KEY] = undefined;\n  }\n})(`__${Date.now()}__`);\n\ntry {\n  if (process.env.NODE_ENV === 'test') {\n    forceChange = (a) => a;\n  }\n} catch (e) {}\n\nfunction schema2node(path, schema, uiSchema) {\n  if (!schema) return null;\n  const key = path.join('.');\n  const name = path[path.length - 1];\n  if (schema.type === 'object') {\n    let children = [];\n    for (const i in schema.properties) {\n      const nextPath = [...path, i];\n      const child = schema2node(nextPath, schema.properties[i], uiSchema && uiSchema[i]);\n      if (child) children.push(child);\n    }\n    return {\n      key,\n      name,\n      //path,\n      schema,\n      uiSchema,\n      children,\n    };\n  }\n  if (schema.type === 'array') {\n    let children;\n    if (Array.isArray(schema.items)) {\n      const nextPath = [...path, '[items]'];\n      children = [\n        {\n          key: key + '.[items]',\n          name: '[items]',\n          //path: nextPath,\n          children: schema.items.map((a, i) =>\n            schema2node([...nextPath, i.toString()], schema.items[i], uiSchema && uiSchema.items && uiSchema.items[i])\n          ),\n        },\n      ];\n      if ('additionalItems' in schema) {\n        const nextPath = [...path, 'additionalItems'];\n        children.push(schema2node(nextPath, schema.additionalItems, uiSchema && uiSchema.additionalItems));\n      }\n    } else {\n      children = [schema2node([...path, 'items'], schema.items, uiSchema && uiSchema.items)];\n    }\n\n    return {\n      key,\n      name,\n      schema,\n      uiSchema,\n      children,\n      //path,\n    };\n  }\n  return {\n    key,\n    name,\n    //path,\n    schema,\n    uiSchema,\n    isLeaf: true,\n  };\n}\n\nfunction getNodeByPath(tree, path) {\n  let node;\n  let children = tree;\n  for (const i of path) {\n    node = children.find((a) => a.name === i);\n    if (!node) return null;\n    children = node.children;\n  }\n  return node;\n}\n\nfunction getNode(tree, key) {\n  return getNodeByPath(tree, key.split('.'));\n}\n\nfunction updateParentKey(tree, parentKey) {\n  return tree.map((node) => {\n    const key = parentKey + '.' + node.name;\n    return Object.assign(\n      {},\n      node,\n      {\n        key: parentKey + '.' + node.name,\n      },\n      node.children && {\n        children: updateParentKey(node.children, key),\n      }\n    );\n  });\n}\n\nfunction getNodeParentKey(node) {\n  return node.key.substring(0, node.key.length - node.name.length - 1);\n}\n\nfunction updateNodeParentKeyAndName(node, parentKey, name) {\n  if (!name) {\n    name = node.name;\n  }\n  if (!parentKey) {\n    parentKey = getNodeParentKey(node);\n  }\n  const newKey = parentKey ? parentKey + '.' + name : name;\n  if (node.key === newKey) return node;\n  return Object.assign(\n    {},\n    node,\n    {\n      name,\n      key: newKey,\n    },\n    node.children && {\n      children: updateParentKey(node.children, newKey),\n    }\n  );\n}\n\nfunction updateSchema(node, newChildren) {\n  let newSchema = Object.assign({}, node.schema);\n  if (node.schema.type === 'object') {\n    let newProperties = {};\n    for (const child of newChildren) {\n      newProperties[child.name] = child.schema;\n    }\n    newSchema.properties = newProperties;\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      newSchema = Object.assign({}, node.schema);\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          newSchema.items = newItemsNode.children.map((a) => a.schema);\n        } else {\n          delete newSchema.items;\n        }\n      } else {\n        // additionalItems field updated\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newSchema.additionalItems = newAdditionalItemsNode.schema;\n        } else {\n          delete newSchema.additionalItems;\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode) {\n        newSchema.items = newItemsNode.schema;\n      } else {\n        delete newSchema.items;\n      }\n    }\n  }\n  return newSchema;\n}\n\nfunction updateUiSchema(node, newChildren) {\n  let newUiSchema = {};\n  for (const i in node.uiSchema) {\n    if (i.startsWith('ui:') || i === 'classNames') {\n      newUiSchema[i] = node.uiSchema[i];\n    }\n  }\n  if (node.schema.type === 'object') {\n    for (const child of newChildren) {\n      if (child.uiSchema) {\n        newUiSchema[child.name] = child.uiSchema;\n      }\n    }\n  } else if (node.schema.type === 'array') {\n    if (Array.isArray(node.schema.items)) {\n      // items is array\n      const newItemsNode = newChildren.find((a) => a.name === '[items]');\n      const oldItemsNode = node.children.find((a) => a.name === '[items]');\n      if (newItemsNode !== oldItemsNode) {\n        // items field updated\n        if (newItemsNode) {\n          let empty = true;\n          newUiSchema.items = newItemsNode.children.map((a) => {\n            empty = empty && !a.uiSchema;\n            return a.uiSchema || null;\n          });\n          if (empty) {\n            delete newUiSchema.items;\n          }\n        }\n        if ('additionalItems' in node.uiSchema) {\n          newUiSchema.additionalItems = node.uiSchema.additionalItems;\n        }\n      } else {\n        // additionalItems field updated\n        if ('items' in node.uiSchema) {\n          newUiSchema.items = node.uiSchema.items;\n        }\n        const newAdditionalItemsNode = newChildren.find((a) => a.name === 'additionalItems');\n        if (newAdditionalItemsNode) {\n          newUiSchema.additionalItems = newItemsNode.children.map((a) => a.schema);\n        }\n      }\n    } else {\n      // items is not array\n      const newItemsNode = newChildren.find((a) => a.name === 'items');\n      if (newItemsNode && newItemsNode.uiSchema) {\n        newUiSchema.items = newItemsNode.uiSchema;\n      }\n    }\n  }\n  return newUiSchema;\n}\n\nfunction updateNodeByNewChildren(oldNode, newChildren) {\n  if (!oldNode.schema) {\n    return { ...oldNode, children: newChildren };\n  }\n  const schema = updateSchema(oldNode, newChildren);\n  const uiSchema = updateUiSchema(oldNode, newChildren);\n  const newNode = Object.assign({}, oldNode, {\n    schema,\n    uiSchema,\n    children: newChildren,\n  });\n  if (isEmptyObject(uiSchema)) {\n    delete newNode.uiSchema;\n  }\n  return newNode;\n}\n\nfunction updateArrayIndex(tree) {\n  return tree.map((node, i) =>\n    node.name === i.toString() ? node : updateNodeParentKeyAndName(node, null, i.toString())\n  );\n}\n\nfunction _removeNodeByPath(tree, [head, ...tail], arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let removed = false;\n  let newTree = [];\n  if (!tail.length) {\n    let newTree = tree.filter((a) => a.name !== head);\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return newTree.length === tree.length ? tree : newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    const newChildren = _removeNodeByPath(node.children, tail, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    removed = true;\n    let newNode = updateNodeByNewChildren(node, newChildren);\n    let newSchema = null;\n    if (tail.length === 1 && (newSchema = newNode.schema) && newSchema.required) {\n      const newRequired = newSchema.required.filter((a) => a !== tail[0]);\n      if (newRequired.length !== newSchema.required.length) {\n        newNode.schema = Object.assign({}, newSchema, {\n          required: newRequired.length ? newRequired : undefined,\n        });\n      }\n    }\n    newTree.push(newNode);\n  }\n  return removed ? newTree : tree;\n}\n\nfunction removeNodeByPath(tree, path) {\n  return _removeNodeByPath(tree, path);\n}\n\nfunction removeNode(tree, key) {\n  return _removeNodeByPath(tree, key.split('.'));\n}\n\nfunction _addNodeByPath(tree, [head, ...tail], position, node2Add, arrayItemsFlag = 0) {\n  if (!head && head !== 0) {\n    return tree;\n  }\n  let added = false;\n  let newTree = [];\n  if (!tail.length) {\n    tree = tree || [];\n    let added = false;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name !== head) {\n        newTree.push(cn);\n        continue;\n      }\n      added = true;\n      if (position < 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n      if (position === 0) {\n        if (isLeaf(cn)) return tree;\n        if (!arrayItemsFlag && cn.children.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n\n        let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2Add, cn.key)];\n        if (arrayItemsFlag === 1) {\n          newNodeChildren = updateArrayIndex(newNodeChildren);\n        }\n        newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n      } else {\n        newTree.push(cn);\n      }\n      if (position > 0) {\n        if (!arrayItemsFlag && tree.find((a) => a.name === node2Add.name)) {\n          // name already exists;\n          return tree;\n        }\n        newTree.push(updateNodeParentKeyAndName(node2Add, getNodeParentKey(cn)));\n      }\n    }\n    if (!added) return tree;\n    if (arrayItemsFlag === 2) {\n      return updateArrayIndex(newTree);\n    }\n    return newTree;\n  }\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n      arrayItemsFlag = 1;\n    } else if (arrayItemsFlag === 1 && head === '[items]') {\n      arrayItemsFlag = 2;\n    } else {\n      arrayItemsFlag = 0;\n    }\n    const newChildren = _addNodeByPath(node.children, tail, position, node2Add, arrayItemsFlag);\n    if (newChildren === node.children) {\n      // no change\n      return tree;\n    }\n    added = true;\n    newTree.push(updateNodeByNewChildren(node, newChildren));\n  }\n  return added ? newTree : tree;\n}\n\nfunction addNodeByPath(tree, [head, ...tail], position, newNode) {\n  return _addNodeByPath(tree, [head, ...tail], position, newNode);\n}\n\nfunction addNode(tree, targetKey, position, newNode) {\n  return _addNodeByPath(tree, targetKey.split('.'), position, newNode);\n}\n\nfunction _moveNodeByPath(tree, [sh, ...st], [th, ...tt], position, arrayItemsFlag = 0) {\n  if (!sh) return tree;\n  if (sh === th && tt.length) {\n    let newTree = [];\n    let updated = false;\n    for (const node of tree) {\n      if (node.name !== sh) {\n        newTree.push(node);\n        continue;\n      }\n      if (isLeaf(node)) return tree;\n      if (node.schema && node.schema.type === 'array' && Array.isArray(node.schema.items)) {\n        arrayItemsFlag = 1;\n      } else if (arrayItemsFlag === 1 && sh === '[items]') {\n        arrayItemsFlag = 2;\n      } else {\n        arrayItemsFlag = 0;\n      }\n      const newChildren = _moveNodeByPath(node.children, st, tt, position, arrayItemsFlag);\n      if (newChildren === node.children) {\n        // no change\n        return tree;\n      }\n      updated = true;\n      if (tt.length === 1 && st.length === 1 && node.schema && node.schema.type === 'object') {\n        // reorder object properties\n        let properties = {};\n        for (const child of newChildren) {\n          properties[child.name] = child.schema;\n        }\n        let schema = Object.assign({}, node.schema, {\n          properties,\n        });\n        forceChange(schema);\n        newTree.push(\n          Object.assign({}, node, {\n            schema,\n            children: newChildren,\n          })\n        );\n      } else {\n        newTree.push(updateNodeByNewChildren(node, newChildren));\n      }\n    }\n    return updated ? newTree : tree;\n  }\n\n  if (!st.length && !tt.length) {\n    let newTree = [];\n    let updated = false;\n    const node2move = tree.find((a) => a.name === sh);\n    if (!node2move) return tree;\n    for (const i in tree) {\n      const cn = tree[i];\n      if (cn.name === sh) continue;\n      if (cn.name === th) {\n        updated = true;\n        if (position < 0) newTree.push(node2move);\n        if (position === 0) {\n          if (isLeaf(cn)) return tree;\n          let newNodeChildren = [...(cn.children || []), updateNodeParentKeyAndName(node2move, cn.key)];\n          if (arrayItemsFlag === 1) {\n            newNodeChildren = updateArrayIndex(newNodeChildren);\n          }\n          newTree.push(updateNodeByNewChildren(cn, newNodeChildren));\n        } else {\n          newTree.push(cn);\n        }\n        if (position > 0) newTree.push(node2move);\n      } else {\n        newTree.push(cn);\n      }\n    }\n    if (arrayItemsFlag === 2) {\n      newTree = updateArrayIndex(newTree);\n    }\n    return updated ? newTree : tree;\n  }\n\n  const node2move = getNodeByPath(tree, [sh, ...st]);\n  if (!node2move) return tree;\n  const tmpTree = _removeNodeByPath(tree, [sh, ...st], arrayItemsFlag);\n  const newTree = _addNodeByPath(tmpTree, [th, ...tt], position, node2move, arrayItemsFlag);\n  return newTree === tmpTree ? tree : newTree;\n}\n\nfunction moveNodeByPath(tree, sourceNode, targetNode, position) {\n  return _moveNodeByPath(tree, sourceNode, targetNode, position);\n}\nfunction moveNode(tree, sourceKey, targetKey, position) {\n  return _moveNodeByPath(tree, sourceKey.split('.'), targetKey.split('.'), position);\n}\n\nvar allowedUpdatedTypes = ['string', 'number', 'integer', 'boolean'];\n\nfunction _updateNodeByPath(tree, [head, ...tail], nodeUpdate) {\n  let newTree = [];\n  let updated = false;\n  for (const node of tree) {\n    if (node.name !== head) {\n      newTree.push(node);\n      continue;\n    }\n    let newNode = Object.assign({}, node);\n    if (!tail.length) {\n      const { schema, uiSchema, name } = nodeUpdate;\n      let nu = Object.assign({}, nodeUpdate);\n      delete nu.schema;\n      delete nu.uiSchema;\n      delete nu.name;\n      delete nu.children;\n      delete nu.key;\n      newNode = Object.assign(newNode, nu);\n      let typeUpdated = false;\n      if (schema) {\n        updated = true;\n        const oldSchema = node.schema;\n        let newSchema = Object.assign({}, schema);\n        if (!newSchema.type) {\n          newSchema.type = oldSchema.type;\n        } else {\n          if (newSchema.type !== oldSchema.type) {\n            if (allowedUpdatedTypes.includes(newSchema.type) && allowedUpdatedTypes.includes(oldSchema.type)) {\n              typeUpdated = true;\n              for (const i in newSchema) {\n                if (!['type', 'title', 'description'].includes(i)) {\n                  delete newSchema[i];\n                }\n              }\n            } else {\n              return tree;\n            }\n          }\n        }\n\n        if (newSchema.type === 'object') {\n          newSchema.properties = oldSchema.properties;\n        }\n        if (newSchema.type === 'array') {\n          newSchema.items = oldSchema.items;\n          newSchema.additionalItems = oldSchema.items;\n        }\n        newNode.schema = newSchema;\n      }\n      if (uiSchema) {\n        updated = true;\n        const oldUiSchema = node.uiSchema;\n        const newUiSchema = {};\n        for (const i in uiSchema) {\n          if (i.startsWith('ui:') || i === 'classNames') {\n            newUiSchema[i] = uiSchema[i];\n          }\n        }\n        if (typeUpdated) delete newUiSchema['ui:widget'];\n        for (const i in node.uiSchema) {\n          if (!(i.startsWith('ui:') || i === 'classNames')) {\n            newUiSchema[i] = oldUiSchema[i];\n          }\n        }\n        if (isEmptyObject(newUiSchema)) {\n          delete newNode.uiSchema;\n        } else {\n          newNode.uiSchema = newUiSchema;\n        }\n      }\n      if (name && name !== newNode.name) {\n        if (tree.find((a) => a.name === name)) return tree;\n        updated = true;\n        newNode = updateNodeParentKeyAndName(newNode, null, name);\n      }\n      newTree.push(newNode);\n    } else {\n      if (node.children) {\n        const newChildren = _updateNodeByPath(node.children, tail, nodeUpdate);\n        if (newChildren === node.children) {\n          return tree;\n        }\n        updated = true;\n        let newNode = updateNodeByNewChildren(node, newChildren);\n        // update required\n        let newSchema = null;\n        if (\n          tail.length === 1 &&\n          nodeUpdate.name &&\n          (newSchema = newNode.schema) &&\n          newSchema.required &&\n          newSchema.required.includes(tail[0])\n        ) {\n          newNode.schema = Object.assign({}, newSchema, {\n            required: newSchema.required.map((a) => (a === tail[0] ? nodeUpdate.name : a)),\n          });\n        }\n        newTree.push(newNode);\n      } else {\n        return tree;\n      }\n    }\n  }\n  return updated ? newTree : tree;\n}\n\nfunction updateNodeByPath(tree, path, nodeUpdate) {\n  return _updateNodeByPath(tree, path, nodeUpdate);\n}\n\nfunction updateNode(tree, targetKey, nodeUpdate) {\n  return updateNodeByPath(tree, targetKey.split('.'), nodeUpdate);\n}\n\nvar SEPERATOR = '_';\nfunction getNodeByRjsfId(tree, rjsfId) {\n  for (const node of tree) {\n    if (node && node.name === rjsfId) {\n      return node;\n    }\n    if (rjsfId.startsWith(node.name) && rjsfId[node.name.length] === SEPERATOR) {\n      if (node.schema.type === 'array') {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const i = rjsfId.indexOf(SEPERATOR);\n        const index = i > 0 ? rjsfId.slice(0, i) : rjsfId;\n        if (isNaN(index)) return null;\n        const rest = i > 0 ? rjsfId.slice(i + 1) : null;\n        if (Array.isArray(node.schema.items)) {\n          if (+index < node.schema.items.length) {\n            let n = node.children.find((a) => a.name === '[items]');\n            n = n && n.children.find((a) => a.name === index);\n            return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n          } else {\n            let n = node.children.find((a) => a.name === 'additionalItems');\n            return rest ? n && getNodeByRjsfId(n.children, rest) : n;\n          }\n        } else {\n          let n = node.children.find((a) => a.name === 'items');\n          return rest ? n && getNodeByRjsfId(n.children, rjsfId.slice(i + 1)) : n;\n        }\n      }\n\n      if (node.children) {\n        rjsfId = rjsfId.slice(node.name.length + 1);\n        const n = getNodeByRjsfId(node.children, rjsfId);\n        if (n) return n;\n      }\n    }\n  }\n  return null;\n}\n\nexport {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n\nexport default {\n  schema2tree,\n  removeNodeByPath,\n  addNodeByPath,\n  moveNodeByPath,\n  updateNodeByPath,\n\n  getNode,\n  removeNode,\n  addNode,\n  moveNode,\n  updateNode,\n  schema2node,\n  getNodeByRjsfId,\n};\n","import React from 'react';\nimport { Alert } from 'antd';\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport StringField from './StringField';\nimport SchemaField from './SchemaField';\nimport { getWidget as _getWidget } from 'react-jsonschema-form/lib/utils';\nexport * from 'react-jsonschema-form/lib/utils';\n\nfunction Error(msg) {\n  return () => <Alert message={msg} type=\"error\" showIcon />;\n}\n\nexport function getWidget(...args) {\n  try {\n    return _getWidget(...args);\n  } catch (e) {\n    return Error(e.toString());\n  }\n}\n\nfunction TitleField(props) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required ? '*' : null}\n    </legend>\n  );\n}\n\nexport function getDefaultRegistry() {\n  const fields = {\n    ...require('react-jsonschema-form/lib/components/fields').default,\n    ArrayField,\n    StringField,\n    BooleanField,\n    TitleField,\n    SchemaField,\n  };\n  return {\n    fields,\n    widgets: require('react-jsonschema-form/lib/components/widgets').default,\n    definitions: {},\n    formContext: {},\n  };\n}\n","module.exports = {\n  leftSiderWidth: 300,\n  rightSiderWidth: 360,\n  formWidth: 600,\n  isInlineMode: true,\n  subViews: ['schema', 'uiSchema', 'formData'],\n};\n","const basic = {\n  schema: {\n    type: 'object',\n    title: 'Bileşenler',\n    properties: {\n      metinsatırı: { type: 'string', title: 'Metin Satırı' },\n      seçimkutusu: { type: 'boolean', title: 'Seçim Kutusu' },\n      seçimkutuları: {\n        type: 'array',\n        title: 'Çoklu Seçim Kutusu',\n        items: {\n          type: 'string',\n          enum: ['seçenek-1', 'seçenek-2', 'seçenek-3']\n        },\n        uniqueItems: true,\n      },\n      açılırliste: {\n        type: 'string',\n        title: 'Açılır Liste',\n        enum: ['seçenek-1', 'seçenek-2', 'seçenek-3'],\n        enumNames: ['Seçenek 1', 'Seçenek 2', 'Seçenek 3'],\n      },\n      sayı: { type: 'number', title: 'Sayı' },\n      metinalanı: { type: 'string', title: 'Metin Alanı' },\n      tarih: { type: 'string', title: 'Tarih' },\n      dosya: {\n        \"type\": \"string\",\n        \"format\": \"data-url\",\n        \"title\": \"Dosya Ekle\"\n      },\n      resim: {\n        \"type\": \"string\",\n        \"format\": \"data-url\",\n        \"title\": \"Resim Ekle\"\n      }\n    },\n  },\n  uiSchema: {\n    metinalanı: { 'ui:widget': 'textarea' },\n    tarih: { 'ui:widget': 'date' },\n    dosya: {\n      'ui:widget': 'fileChooserWidget',\n      \"ui:options\": {\n        accept: \".pdf, .xlsx, .doc, .docx\"\n      }\n    },\n    resim: {\n      'ui:widget': 'imageFileChooserWidget'\n    },\n    seçimkutuları: {\n      'ui:widget': 'checkboxes',\n    },\n  },\n};\n\nmodule.exports = {\n  schema: {\n    type: 'object',\n    properties: {\n      basic: basic.schema,\n    },\n  },\n  uiSchema: {\n    basic: basic.uiSchema,\n  },\n};\n","import React from 'react';\nimport ArrayField from 'react-jsonschema-form/lib/components/fields/ArrayField';\n\nimport { getWidget, getUiOptions, optionsList, retrieveSchema, getDefaultRegistry } from './utils';\n\nclass ArrayFieldPatched extends ArrayField {\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData,\n      disabled,\n      readonly,\n      autofocus,\n      onBlur,\n      onFocus,\n      registry = getDefaultRegistry(),\n      rawErrors,\n    } = this.props;\n    const items = this.props.formData;\n    const { widgets, definitions, formContext } = registry;\n    const itemsSchema = retrieveSchema(schema.items, definitions, formData);\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', ...options } = {\n      ...getUiOptions(uiSchema),\n      enumOptions,\n    };\n    const Widget = getWidget(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema && idSchema.$id}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n}\n\nexport default ArrayFieldPatched;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as types from 'react-jsonschema-form/lib/types';\n\nimport { getWidget, getUiOptions, optionsList, getDefaultRegistry } from './utils';\n\nfunction BooleanField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry = getDefaultRegistry(),\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, fields } = registry;\n  const { widget = 'checkbox', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  let enumOptions;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList({\n      oneOf: schema.oneOf.map((option) => ({\n        ...option,\n        title: option.title || (option.const === true ? 'Yes' : 'No'),\n      })),\n    });\n  } else {\n    enumOptions = optionsList({\n      enum: schema.enum || [true, false],\n      enumNames: schema.enumNames || (schema.enum && schema.enum[0] === false ? ['No', 'Yes'] : ['Yes', 'No']),\n    });\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n      DescriptionField={fields.DescriptionField}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  BooleanField.propTypes = types.fieldProps;\n}\n\nBooleanField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default BooleanField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getWidget, getUiOptions, isSelect, optionsList, getDefaultRegistry, hasWidget } from './utils';\n\nfunction StringField(props) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    registry = getDefaultRegistry(),\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext } = registry;\n  const enumOptions = isSelect(schema) && optionsList(schema);\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', ...options } = getUiOptions(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      id={idSchema && idSchema.$id}\n      label={title === undefined ? name : title}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  StringField.propTypes = {\n    schema: PropTypes.object.isRequired,\n    uiSchema: PropTypes.object.isRequired,\n    idSchema: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    formData: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    registry: PropTypes.shape({\n      widgets: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])).isRequired,\n      fields: PropTypes.objectOf(PropTypes.func).isRequired,\n      definitions: PropTypes.object.isRequired,\n      formContext: PropTypes.object.isRequired,\n    }),\n    formContext: PropTypes.object.isRequired,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    autofocus: PropTypes.bool,\n    rawErrors: PropTypes.arrayOf(PropTypes.string),\n  };\n}\n\nStringField.defaultProps = {\n  uiSchema: {},\n  disabled: false,\n  readonly: false,\n  autofocus: false,\n};\n\nexport default StringField;\n","import SchemaField from 'react-jsonschema-form/lib/components/fields/SchemaField';\nimport { notification } from 'antd';\n\nexport default class PatchedSchemaField extends SchemaField {\n  componentDidCatch(error, info) {\n    notification.error({\n      message: `Error: ${this.props.idSchema.$id}`,\n      description: error.toString(),\n      duration: 0,\n    });\n  }\n}\n","import { schema2tree, schema2node, removeNode, addNode, moveNode, updateNode, getNodeByRjsfId } from './core';\nimport defaultSettings from './default/settings';\nimport defaultMenuSchema from './default/menu';\nimport undoable from 'redux-undo';\nimport { includeAction } from 'redux-undo';\nimport { combineReducers } from 'redux';\n\nconst defaultMenu = schema2node(['menu'], defaultMenuSchema.schema, defaultMenuSchema.uiSchema);\nconst DEFAULT_TREE_NAME = 'Form';\n\nconst emptyTree = schema2tree(DEFAULT_TREE_NAME, { type: 'object', properties: {} });\n\nfunction tree(state = emptyTree, action) {\n  switch (action.type) {\n    case 'TREE_CLEAR':\n      return emptyTree;\n    case 'TREE_SET_TREE': {\n      const { name, schema, uiSchema } = action.payload;\n      return schema2tree(\n        name || (state[0] && state[0].name) || DEFAULT_TREE_NAME,\n        schema || state[0].schema,\n        uiSchema || state[0].uiSchema\n      );\n    }\n    case 'TREE_ADD_NODE': {\n      const { targetNodeKey, position, node2add } = action.payload;\n      return addNode(state, targetNodeKey, position, node2add);\n    }\n    case 'TREE_REMOVE_NODE':\n      const newState = removeNode(state, action.payload);\n      return newState.length ? newState : emptyTree;\n    case 'TREE_MOVE_NODE': {\n      const { source, target, position } = action.payload;\n      return moveNode(state, source, target, position);\n    }\n    case 'TREE_UPDATE_NODE': {\n      const { target, nodeUpdate } = action.payload;\n      const newState = updateNode(state, target, nodeUpdate);\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction activeNodeKey(state = null, action) {\n  switch (action.type) {\n    case 'ACTIVE_NODE_KEY_SET':\n      return action.payload || null;\n    case 'TREE_UPDATE_NODE':\n      const { target, nodeUpdate } = action.payload;\n      if (state === target && nodeUpdate.name) {\n        const path = state.split('.');\n        if (path[path.length - 1] !== nodeUpdate.name) {\n          return path.slice(0, -1).join('.') + '.' + nodeUpdate.name;\n        }\n      }\n      return state;\n    case 'TREE_SET_TREE':\n    case 'TREE_CLEAR':\n      return null;\n    default:\n      return state;\n  }\n}\n\nfunction formData(state = {}, action) {\n  switch (action.type) {\n    case 'FORM_DATA_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction settings(state = defaultSettings, action) {\n  switch (action.type) {\n    case 'SETTINGS_UPDATE':\n      return Object.assign({}, state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction menu(state = defaultMenu, action) {\n  switch (action.type) {\n    case 'MENU_SET': {\n      const { schema, uiSchema } = action.payload;\n      return schema2node(['menu'], schema, uiSchema);\n    }\n    case 'MENU_DEFAULT': {\n      return defaultMenu;\n    }\n    default:\n      return state;\n  }\n}\n\nfunction menuOpenKeys(state = [], action) {\n  switch (action.type) {\n    case 'MENU_OPEN_KEYS_SET':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nfunction removeUnnecessaryHistory(reducer) {\n  return (state, action) => {\n    let newState = reducer(state, action);\n    delete newState.history;\n    return newState;\n  };\n}\n\nvar reducer = combineReducers({\n  tree: removeUnnecessaryHistory(\n    undoable(tree, {\n      filter: includeAction([\n        'TREE_UPDATE_NODE',\n        'TREE_SET_TREE',\n        'TREE_CLEAR',\n        'TREE_ADD_NODE',\n        'TREE_REMOVE_NODE',\n        'TREE_MOVE_NODE',\n      ]),\n    })\n  ),\n  activeNodeKey,\n  settings,\n  menu,\n  formData,\n  menuOpenKeys,\n});\n\nexport default function (state, action) {\n  switch (action.type) {\n    case 'TREE_REMOVE_NODE_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'TREE_REMOVE_NODE',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID': {\n      const target = getNodeByRjsfId(state.tree.present, action.payload);\n      if (!target) return state;\n      action = {\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: target.key,\n      };\n      break;\n    }\n    case 'TREE_UPDATE_NODE_BY_RJSF_ID': {\n      const { rjsfId } = action.payload;\n      const target = getNodeByRjsfId(state.tree.present, rjsfId);\n      if (!target) return state;\n      action = {\n        type: 'TREE_UPDATE_NODE',\n        payload: { ...action.payload, target: target.key },\n      };\n      break;\n    }\n    default:\n      break;\n  }\n  return reducer(state, action);\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\nvar persistConfig = {\n  key: 'react-jsonschema-formbuilder',\n  storage,\n  stateReconciler: hardSet,\n  throttle: 15,\n};\n\nvar { schema2tree } = require('./core');\n\nvar form = {\n  schema: {\n    title: 'A registration form',\n    description: 'A simple form example.',\n    type: 'object',\n    required: ['firstName', 'lastName'],\n    properties: {\n      firstName: {\n        type: 'string',\n        title: 'First name',\n      },\n      lastName: {\n        type: 'string',\n        title: 'Last name',\n      },\n      age: {\n        type: 'integer',\n        title: 'Age',\n        description: '(earthian year)',\n      },\n      bio: {\n        type: 'string',\n        title: 'Bio',\n      },\n      password: {\n        type: 'string',\n        title: 'Password',\n        minLength: 3,\n      },\n      telephone: {\n        type: 'string',\n        title: 'Telephone',\n        minLength: 10,\n      },\n    },\n  },\n  uiSchema: {\n    firstName: {\n      classNames: '',\n      'ui:emptyValue': '',\n    },\n    age: {\n      'ui:widget': 'updown',\n    },\n    bio: {\n      'ui:widget': 'textarea',\n    },\n    password: {\n      'ui:widget': 'password',\n      'ui:help': 'Hint: Make it strong!',\n    },\n    date: {\n      'ui:widget': 'alt-datetime',\n    },\n    telephone: {\n      'ui:options': {\n        inputType: 'tel',\n      },\n    },\n  },\n};\n\nvar initTree = schema2tree('root', form.schema, form.uiSchema);\n\nvar persistedReducer = persistReducer(persistConfig, reducer);\n\nvar store = createStore(persistedReducer, {\n  tree: {\n    past: [],\n    present: initTree,\n    future: [],\n  },\n});\n\nvar persistor = persistStore(store);\n\nexport { store, persistor };\nexport default { store, persistor };\n","import React, { Component } from 'react';\nimport { Input } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\n\nexport default class InlineEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      value: this.props.value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ value: nextProps.value });\n  }\n\n  onChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n  onCompleteEditing = () => {\n    this.setState({ editing: false });\n    const newValue = this.state.value.trim();\n    if (newValue !== this.props.value) {\n      this.props.onChange && this.props.onChange(newValue);\n    }\n  };\n  onStartEditing = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState({ editing: true }, () => this.input && this.input.focus());\n  };\n\n  onCancelEditing = () => {\n    this.setState({\n      editing: false,\n      value: this.props.value,\n    });\n  };\n\n  renderEditing() {\n    return (\n      <Input\n        ref={(r) => (this.input = r)}\n        value={this.state.value}\n        onBlur={this.onCompleteEditing}\n        onChange={this.onChange}\n        onKeyUp={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (e.keyCode === 13) {\n            this.onCompleteEditing();\n          } else if (e.keyCode === 27) {\n            this.onCancelEditing();\n          }\n        }}\n      />\n    );\n  }\n\n  renderView() {\n    return (\n      <span>\n        {this.props.children}\n        <EditOutlined onClick={this.onStartEditing} />\n      </span>\n    );\n  }\n\n  render() {\n    if (this.state.editing) {\n      return this.renderEditing();\n    } else {\n      return this.renderView();\n    }\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Menu } from 'antd';\nconst { SubMenu, Item } = Menu;\n\nfunction nameGen(name, occupied) {\n  let n = 1;\n  let newName = name;\n  while (occupied && occupied.includes(newName)) {\n    newName = name + '_' + n;\n    n += 1;\n  }\n  return newName;\n}\n\nclass AddItemMenu extends React.Component {\n  onAddNode = (node2add) => {\n    const { addNode } = this.props;\n    const name = nameGen(\n      node2add.name,\n      this.props.node.children.map((a) => a.name)\n    );\n    addNode({ ...node2add, name });\n  };\n  render() {\n    const {\n      menu: { children: menuTree },\n      menuOpenKeys,\n      menuOpenChange,\n    } = this.props;\n    return (\n      <Menu mode=\"inline\" theme=\"dark\" openKeys={menuOpenKeys} onOpenChange={menuOpenChange}>\n        {menuTree.map((a) =>\n          a.schema && a.schema.type === 'object' && a.children && a.children.length ? (\n            <SubMenu key={a.key} title={a.schema.title || a.name}>\n              {a.children.map((b) => (\n                <Item key={b.key} onClick={() => this.onAddNode(b)}>\n                  {b.schema.title || b.name}\n                </Item>\n              ))}\n            </SubMenu>\n          ) : (\n            <Item key={a.key} onClick={() => this.onAddNode(a)}>\n              {a.schema.title || a.name}\n            </Item>\n          )\n        )}\n      </Menu>\n    );\n  }\n}\n\nexport default connect(\n  ({ menu, menuOpenKeys }) => ({ menu, menuOpenKeys }),\n  (dispatch, { node }) => ({\n    addNode: (node2add) =>\n      dispatch({\n        type: 'TREE_ADD_NODE',\n        payload: {\n          targetNodeKey: node.key,\n          position: 0,\n          node2add,\n        },\n      }),\n    menuOpenChange: (keys) =>\n      dispatch({\n        type: 'MENU_OPEN_KEYS_SET',\n        payload: keys,\n      }),\n  })\n)(AddItemMenu);\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Popconfirm } from 'antd';\nimport { PlusCircleOutlined, CloseCircleFilled } from '@ant-design/icons';\nimport InlineEditor from '../InlineEditor';\nimport { Dropdown } from 'antd';\nimport AddItemMenu from './Menu';\n\nclass TreeNodeTitle extends PureComponent {\n  render() {\n    const { node, removeNode, updateNodeName, searchValue } = this.props;\n    const { name, key } = node;\n    const isLeaf = node.isLeaf;\n    const isRoot = node.name === node.key;\n    const isArray = node.schema.type === 'array';\n    const indexBefore = node.name.toLowerCase().indexOf(searchValue);\n    const indexAfter = indexBefore + searchValue.length;\n    return (\n      <span style={{ display: 'block' }}>\n        {searchValue && indexBefore >= 0 ? (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name.slice(0, indexBefore)}\n            <span style={{ color: '#f50' }}>{name.slice(indexBefore, indexAfter)}</span>\n            {name.slice(indexAfter)}\n          </InlineEditor>\n        ) : (\n          <InlineEditor value={node.name} onChange={(name) => updateNodeName(key, name)}>\n            {name}\n          </InlineEditor>\n        )}\n        <span className=\"pull-right\">\n          {!(isLeaf || isArray) ? (\n            <span className=\"form-builder-add-item-menu\" onClick={(e) => e.stopPropagation()}>\n              <Dropdown placement=\"bottomLeft\" trigger={['click']} overlay={<AddItemMenu node={node} />}>\n                <PlusCircleOutlined />\n              </Dropdown>\n            </span>\n          ) : null}\n          {!isRoot ? (\n            <span className=\"tree-node-delete\" onClick={(e) => e.stopPropagation()}>\n              <Popconfirm\n                placement=\"rightTop\"\n                title={`Sil \"${key}\"?`}\n                onConfirm={() => removeNode(key)}\n                okText=\"Evet\"\n                cancelText=\"Hayır\"\n              >\n                <CloseCircleFilled />\n              </Popconfirm>\n            </span>\n          ) : null}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default connect(null, (dispatch) => ({\n  removeNode: (key) =>\n    dispatch({\n      type: 'TREE_REMOVE_NODE',\n      payload: key,\n    }),\n  updateNodeName: (key, name) =>\n    dispatch({\n      type: 'TREE_UPDATE_NODE',\n      payload: { target: key, nodeUpdate: { name } },\n    }),\n}))(TreeNodeTitle);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tree, Input } from 'antd';\nimport TreeNodeTitle from './TreeNodeTitle';\nconst { TreeNode } = Tree;\nconst { Search } = Input;\n\nclass Demo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: ['root'],\n      searchValue: '',\n      searchExpanded: [],\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeNodeKey && nextProps.activeNodeKey !== this.props.activeNodeKey) {\n      let path = nextProps.activeNodeKey.split('.');\n      let expandedKeys = [...this.state.expandedKeys];\n      const n = path.length;\n      for (var i = 1; i < n; i++) {\n        path[i] = path[i - 1] + '.' + path[i];\n        if (!expandedKeys.includes(path[i - 1])) {\n          expandedKeys.push(path[i - 1]);\n        }\n      }\n      this.setState({\n        expandedKeys,\n      });\n    }\n  }\n\n  onDrop = (info) => {\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    this.props.moveNode(dragKey, dropKey, dropPosition);\n  };\n\n  onExpand = (expandedKeys) => {\n    this.setState({\n      expandedKeys,\n    });\n  };\n\n  onChange = (e) => {\n    const { expandedKeys } = this.state;\n    const searchValue = e.target.value.trim().toLowerCase();\n    if (!searchValue) {\n      this.setState({\n        searchValue,\n        searchExpanded: [],\n      });\n      return;\n    }\n\n    let newSearchExpanded = [];\n    const loop = (data) => {\n      if (!data) return;\n      for (const item of data) {\n        if (item.name.toLowerCase().includes(searchValue)) {\n          let parents = item.key.split('.');\n          const n = parents.length;\n          for (let i = 1; i < n; i++) {\n            if (!(expandedKeys.includes(parents[i - 1]) || newSearchExpanded.includes(parents[i - 1]))) {\n              newSearchExpanded.push(parents[i - 1]);\n            }\n            parents[i] = parents[i - 1] + '.' + parents[i];\n          }\n        }\n        loop(item.children);\n      }\n    };\n    loop(this.props.tree);\n    this.setState({\n      searchValue,\n      searchExpanded: newSearchExpanded,\n    });\n  };\n\n  onBlur = () => {\n    this.setState({\n      expandedKeys: [...this.state.expandedKeys, ...this.state.searchExpanded],\n      searchExpanded: [],\n    });\n  };\n\n  render() {\n    const { tree, setActiveNode, activeNodeKey } = this.props;\n    const { searchValue, expandedKeys, searchExpanded } = this.state;\n    const loop = (data) =>\n      data.map((item) => {\n        if (item.children && item.children.length) {\n          return (\n            <TreeNode\n              key={item.key}\n              title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n              isLeaf={item.isLeaf}\n            >\n              {loop(item.children)}\n            </TreeNode>\n          );\n        }\n        return (\n          <TreeNode\n            key={item.key}\n            title={<TreeNodeTitle node={item} searchValue={searchValue} />}\n            isLeaf={item.isLeaf}\n          />\n        );\n      });\n    const children = loop(tree);\n    return (\n      <div>\n        <Search placeholder=\"Ara\" onChange={this.onChange} onBlur={this.onBlur} />\n        <Tree\n          className=\"form-builder-draggable-tree\"\n          expandedKeys={searchExpanded.length ? [...expandedKeys, ...searchExpanded] : expandedKeys}\n          selectedKeys={[activeNodeKey]}\n          draggable\n          onDragEnter={this.onDragEnter}\n          onDrop={this.onDrop}\n          onExpand={this.onExpand}\n          onSelect={([selected]) => setActiveNode(selected)}\n          blockNode\n          height={600}\n          defaultExpandAll\n        >\n          {children}\n        </Tree>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    tree: present,\n    activeNodeKey,\n  }),\n  (dispatch) => ({\n    moveNode: (source, target, position) =>\n      dispatch({\n        type: 'TREE_MOVE_NODE',\n        payload: {\n          source,\n          target,\n          position,\n        },\n      }),\n    removeNode: (target) =>\n      dispatch({\n        type: 'TREE_REMOVE_NODE',\n        payload: target,\n      }),\n    setActiveNode: (selectedKey) =>\n      dispatch({\n        type: 'ACTIVE_NODE_KEY_SET',\n        payload: selectedKey,\n      }),\n    updateNodeTitle: (target, name) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target: target,\n          node: { name },\n          updateMode: 1,\n        },\n      }),\n  })\n)(Demo);\n","import Tree from './Tree';\nexport default Tree;\n","import Form from 'react-jsonschema-form/lib';\nimport { getDefaultRegistry } from './utils';\nimport ImageUpload from \"../ImageUpload\";\nimport FileChooserWidget from \"../FileChooserWidget\";\n\nconst imageFileChooserWidget = ImageUpload;\nconst fileChooserWidget = FileChooserWidget;\nexport default class FormPatch extends Form {\n  getRegistry() {\n    const { fields, widgets } = getDefaultRegistry();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      widgets: { ...widgets, ...this.props.widgets,imageFileChooserWidget,fileChooserWidget},\n      ArrayFieldTemplate: this.props.ArrayFieldTemplate,\n      ObjectFieldTemplate: this.props.ObjectFieldTemplate,\n      FieldTemplate: this.props.FieldTemplate,\n      definitions: this.props.schema.definitions || {},\n      formContext: this.props.formContext || {},\n    };\n  }\n}\n","import React from 'react';\n\nconst REQUIRED_FIELD_SYMBOL = '*';\n\nfunction Label(props) {\n  const { label, required, id } = props;\n  if (!label) {\n    // See #312: Ensure compatibility with old versions of React.\n    return <div />;\n  }\n  return (\n    <label className=\"control-label\" htmlFor={id}>\n      {label}\n      {required && <span className=\"required\">{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n\nexport function DefaultTemplate(props) {\n  const { id, classNames, label, children, errors, help, description, hidden, required, displayLabel } = props;\n  if (hidden) {\n    return children;\n  }\n\n  return (\n    <div className={classNames}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </div>\n  );\n}\n\nexport function DefaultObjectFieldTemplate(props) {\n  const { TitleField, DescriptionField } = props;\n  return (\n    <fieldset>\n      {(props.uiSchema['ui:title'] || props.title) && (\n        <TitleField\n          id={`${props.idSchema.$id}__title`}\n          title={props.title || props.uiSchema['ui:title']}\n          required={props.required}\n          formContext={props.formContext}\n        />\n      )}\n      {props.description && (\n        <DescriptionField\n          id={`${props.idSchema.$id}__description`}\n          description={props.description}\n          formContext={props.formContext}\n        />\n      )}\n      {props.properties.map((prop) => prop.content)}\n    </fieldset>\n  );\n}\n","import React from 'react';\nimport InlineEditor from '../InlineEditor';\nimport {connect} from 'react-redux';\nimport {Input, Popconfirm, Tooltip} from 'antd';\nimport {SelectOutlined, DeleteOutlined} from '@ant-design/icons';\n\nconst {getNodeByRjsfId} = require('../core');\nconst {TextArea} = Input;\n\nconst ACTIVE_STYLE = {backgroundColor: '#bae7ff'};\n\nclass ExtendedInlineEditor extends InlineEditor {\n    renderView() {\n        return (\n            <span className=\"fb-test\" onClick={this.onStartEditing}>\n        {this.props.children}\n      </span>\n        );\n    }\n}\n\nclass InlineTextAreaEditor extends ExtendedInlineEditor {\n    renderEditing() {\n        return (\n            <TextArea\n                ref={(r) => (this.input = r)}\n                value={this.state.value}\n                onBlur={this.onCompleteEditing}\n                onChange={this.onChange}\n                autoSize\n                onKeyUp={(e) => {\n                    if (e.keyCode === 27) {\n                        this.onCancelEditing();\n                    }\n                }}\n            />\n        );\n    }\n}\n\nconst ButtonGroup = connect(null, (dispatch, {id}) => ({\n    select: () => dispatch({type: 'ACTIVE_NODE_KEY_SET_BY_RJSF_ID', payload: id}),\n    remove: () => dispatch({type: 'TREE_REMOVE_NODE_BY_RJSF_ID', payload: id}),\n}))((props) => {\n    const {select, remove, id} = props;\n    return (\n        <Tooltip title={id} placement=\"right\">\n            <a href=\"#!\">\n                <SelectOutlined onClick={select}/>\n            </a>\n            <Popconfirm title={`Sil ${id}?`} onConfirm={remove} okText=\"Evet\"  cancelText=\"Hayır\">\n                <a href=\"#!\">\n                    <DeleteOutlined/>\n                </a>\n            </Popconfirm>\n        </Tooltip>\n    );\n});\n\nexport function fieldTemplateConnector(FieldTemplate) {\n    return connect(\n        ({tree: {present}, activeNodeKey, settings: {isInlineMode}}, {id}) => {\n            const n = getNodeByRjsfId(present, id);\n            const active = n && n.key === activeNodeKey;\n            return {tree: present, active, isInlineMode};\n        },\n        (dispatch, {id, schema, uiSchema}) => ({\n            updateTitle: (title) =>\n                dispatch({\n                    type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n                    payload: {rjsfId: id, nodeUpdate: {schema: {...schema, title}}},\n                }),\n            updateDescription: (description) =>\n                dispatch({\n                    type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n                    payload: {rjsfId: id, nodeUpdate: {schema: {...schema, description}}},\n                }),\n            updateHelp: (help) =>\n                dispatch({\n                    type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n                    payload: {rjsfId: id, nodeUpdate: {uiSchema: {...uiSchema, 'ui:help': help}}},\n                }),\n        })\n    )((props) => {\n        const {\n            id,\n            label,\n            description,\n            help,\n            schema,\n            updateTitle,\n            updateDescription,\n            updateHelp,\n            active,\n            classNames,\n            isInlineMode,\n        } = props;\n        if (!isInlineMode) return <FieldTemplate {...props} />;\n        const labelElement = label && (\n            <ExtendedInlineEditor value={label} onChange={updateTitle}>\n                {label}\n            </ExtendedInlineEditor>\n        );\n        const descriptionElement = description && (\n            <InlineTextAreaEditor value={description.props.description} onChange={updateDescription}>\n                {description}\n            </InlineTextAreaEditor>\n        );\n        const helpElement = help && (\n            <ExtendedInlineEditor value={help.props.help} onChange={updateHelp}>\n                {help}\n            </ExtendedInlineEditor>\n        );\n        return (\n            <div className={classNames} style={active ? ACTIVE_STYLE : null}>\n                {['object', 'array'].includes(schema.type) ? null : (\n                    <div className=\"pull-right\">\n                        {' '}\n                        <ButtonGroup id={id}/>{' '}\n                    </div>\n                )}\n                <FieldTemplate\n                    _label={label}\n                    _description={description}\n                    _help={help}\n                    {...props}\n                    classNames={null}\n                    label={labelElement}\n                    description={descriptionElement}\n                    help={helpElement}\n                />\n            </div>\n        );\n    });\n}\n\nexport function objectFieldTemplateConnector(ObjectFieldTemplate) {\n    return connect(\n        ({tree: {present}, activeNodeKey, settings: {isInlineMode}}, {idSchema}) => {\n            const n = idSchema && idSchema.$id && getNodeByRjsfId(present, idSchema.$id);\n            const active = n && n.key === activeNodeKey;\n            return {tree: present, active, isInlineMode};\n        },\n        (dispatch, {idSchema, schema}) => ({\n            updateTitle: (title) =>\n                dispatch({\n                    type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n                    payload: {rjsfId: idSchema.$id, nodeUpdate: {schema: {...schema, title}}},\n                }),\n            updateDescription: (description) =>\n                dispatch({\n                    type: 'TREE_UPDATE_NODE_BY_RJSF_ID',\n                    payload: {rjsfId: idSchema.$id, nodeUpdate: {schema: {...schema, description}}},\n                }),\n        })\n    )((props) => {\n        const {idSchema, title, description, updateTitle, updateDescription, active, isInlineMode} = props;\n        if (!isInlineMode) return <ObjectFieldTemplate {...props} />;\n        const titleElement = title && (\n            <span>\n        <ExtendedInlineEditor value={title} onChange={updateTitle}>\n          {title}\n        </ExtendedInlineEditor>\n        <span className=\"pull-right\">\n          {' '}\n            <ButtonGroup id={idSchema.$id}/>{' '}\n        </span>\n      </span>\n        );\n        const descriptionElement = description && (\n            <InlineTextAreaEditor value={description} onChange={updateDescription}>\n                {description}\n            </InlineTextAreaEditor>\n        );\n\n        return (\n            <div style={active ? ACTIVE_STYLE : null}>\n                <ObjectFieldTemplate\n                    _title={title}\n                    _description={description}\n                    {...props}\n                    title={titleElement}\n                    description={descriptionElement}\n                />\n            </div>\n        );\n    });\n}\n","import { DefaultTemplate, DefaultObjectFieldTemplate } from './Template';\nimport { fieldTemplateConnector, objectFieldTemplateConnector } from './connectors';\n\nexport const FieldTemplate = fieldTemplateConnector(DefaultTemplate);\nexport const ObjectFieldTemplate = objectFieldTemplateConnector(DefaultObjectFieldTemplate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Form from '../rjsf-patch/Form';\nimport { FieldTemplate, ObjectFieldTemplate } from '../Template';\nimport {Card} from \"antd\";\n\nclass FormView extends React.Component {\n  render() {\n    if (!this.props.schema) {\n      return null;\n    }\n    const { name, schema, uiSchema, formData, setFormData, liveValidate } = this.props;\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\" style={{margin: '0px 16px 16px 16px'}}>\n                <Form\n                    schema={schema}\n                    uiSchema={uiSchema}\n                    formData={formData}\n                    liveValidate={liveValidate}\n                    FieldTemplate={FieldTemplate}\n                    ObjectFieldTemplate={ObjectFieldTemplate}\n                    idPrefix={name}\n                    onChange={setFormData}\n                    children={<br/>}\n                />\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ name, schema, uiSchema }],\n    },\n    formData,\n    settings: { isLiveValidate },\n  }) => ({\n    name,\n    schema,\n    uiSchema,\n    formData,\n    liveValidate: isLiveValidate,\n  }),\n  (dispatch) => ({\n    setFormData: ({ formData }) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n  })\n)(FormView);\n","import React from 'react';\nimport { Input, Alert } from 'antd';\nconst { TextArea } = Input;\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  if (!objA || !objB) {\n    return false;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) && (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B'a keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default class JsonEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      string: JSON.stringify(value, null, 2),\n      value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!shallowEqual(nextProps.value, this.state.value)) {\n      this.setState({\n        value: nextProps.value,\n        string: JSON.stringify(nextProps.value, null, 2),\n        error: null,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.string !== this.state.string;\n  }\n\n  onChange = (e) => {\n    const value = e.target.value;\n    try {\n      const obj = value ? JSON.parse(value) : null;\n      this.setState(\n        {\n          value: obj,\n          string: value,\n          error: null,\n        },\n        () => this.props.onChange(obj)\n      );\n    } catch (error) {\n      this.setState({\n        string: value,\n        error,\n      });\n    }\n  };\n\n  renderErrorMessage() {\n    const { error } = this.state;\n    if (!error) return null;\n    const errorMessage = error.toString();\n    const message = (\n      <a\n        href=\"#!\"\n        onClick={() => {\n          const matched = /position ([0-9]+)/.exec(errorMessage);\n          const position = matched ? matched[1] : -1;\n          const input = this.input.textAreaRef;\n          input.selectionStart = position;\n          input.selectionEnd = position;\n          input.focus();\n        }}\n      >\n        {error.toString()}\n      </a>\n    );\n    return <Alert message={message} type=\"error\" showIcon />;\n  }\n\n  onClickPrettify = () => {\n    let { error } = this.state;\n    if (!error) {\n      this.setState({\n        string: JSON.stringify(this.props.value, null, 2),\n      });\n    }\n  };\n\n  render() {\n    const { string } = this.state;\n    return (\n      <div>\n        {this.renderErrorMessage() || (\n          <Alert\n            message={\n              <a href=\"#!\" onClick={this.onClickPrettify}>\n                Prettify\n              </a>\n            }\n            type=\"success\"\n            showIcon\n          />\n        )}\n        <TextArea {...this.props} ref={(ref) => (this.input = ref)} value={string} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ schema }],\n    },\n  }) => ({ schema }),\n  (dispatch) => ({\n    setTree: (schema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          schema,\n        },\n      }),\n  })\n)(({ schema, setTree }) => <JsonEditor value={schema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport JsonEditor from '../JsonEditor';\n\nexport default connect(\n  ({\n    tree: {\n      present: [{ uiSchema }],\n    },\n  }) => ({ uiSchema }),\n  (dispatch) => ({\n    setTree: (uiSchema) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          uiSchema,\n        },\n      }),\n  })\n)(({ uiSchema, setTree }) => <JsonEditor value={uiSchema} onChange={(value) => setTree(value)} autoSize />);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport JsonEditor from '../JsonEditor';\n\nfunction name2title(name) {\n  if (!name) return name;\n  const words = name.indexOf('_') >= 0 ? name.split('_') : name.split(/(?=[A-Z])/);\n  return words.map((a) => a.charAt(0).toUpperCase() + a.slice(1)).join(' ');\n}\n\nfunction json2schema(data, name) {\n  const title = name ? name2title(name) : undefined;\n  if (typeof data === 'number') {\n    return {\n      type: Number.isInteger(data) ? 'integer' : 'number',\n      title,\n    };\n  }\n  if (typeof data === 'string') {\n    return {\n      type: 'string',\n      title,\n    };\n  }\n  if (typeof data === 'boolean') {\n    return {\n      type: 'boolean',\n      title,\n    };\n  }\n  if (typeof data === 'object') {\n    if (Array.isArray(data)) {\n      return {\n        type: 'array',\n        title,\n        items: json2schema(data[0]),\n      };\n    }\n    let properties = {};\n    for (const i in data) {\n      const s = json2schema(data[i], i);\n      if (s) {\n        properties[i] = s;\n      }\n    }\n    return {\n      type: 'object',\n      title,\n      properties,\n    };\n  }\n  return undefined;\n}\n\nexport default connect(\n  ({ formData }) => ({ formData }),\n  (dispatch) => ({\n    setFormData: (formData) =>\n      dispatch({\n        type: 'FORM_DATA_SET',\n        payload: formData,\n      }),\n    genForm: (formData) =>\n      dispatch({\n        type: 'TREE_SET_TREE',\n        payload: {\n          name: 'root',\n          schema: json2schema(formData, 'form'),\n          uiSchema: {},\n        },\n      }),\n  })\n)(({ formData, setFormData, genForm }) => (\n  <div>\n    <JsonEditor value={formData} onChange={(value) => setFormData(value)} autoSize />\n    <Button type=\"primary\" onClick={() => genForm(formData)}>\n      Gen Form\n    </Button>\n    <Button onClick={() => setFormData({})}>Clear</Button>\n  </div>\n));\n","import React from 'react';\nimport JsonEditor from '../JsonEditor';\nimport { Input } from 'antd';\n\nexport default class NodeJsonEditor extends React.Component {\n  static get key() {\n    return 'json-editor';\n  }\n  static get name() {\n    return 'Json';\n  }\n  static filter(node) {\n    return true;\n  }\n\n  constructor(props) {\n    super(props);\n    const { schema, uiSchema } = props;\n    this.state = {\n      schemaJsonString: JSON.stringify(schema, null, 2),\n      uiSchemaJsonString: JSON.stringify(schema, null, 2),\n      schema,\n      uiSchema,\n    };\n  }\n\n  render() {\n    const { node, updateNode } = this.props;\n    const { schema, uiSchema } = node;\n    const { properties, items, additionalItems, ...rschema } = schema;\n    return (\n      <div>\n        <Input value={node.name} onChange={(e) => updateNode({ name: e.target.value })} />\n        <JsonEditor value={rschema} onChange={(schema) => updateNode({ schema })} autoSize />\n        <JsonEditor value={uiSchema} onChange={(uiSchema) => updateNode({ uiSchema })} autoSize />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Input, InputNumber, Select, Row, Col, Button, List, Dropdown, Menu, Switch, Slider } from 'antd';\nimport { EditOutlined, CaretDownOutlined, CloseOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport lodash from 'lodash';\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nexport function _FormItemTemplate({ title, children }) {\n  return (\n    <Row className=\"ant-form-item\">\n      <Col className=\"ant-form-item-label\">\n        <label>{title}</label>\n      </Col>\n      <Col className=\"ant-form-item-control-wrapper\">{children}</Col>\n    </Row>\n  );\n}\n\nexport function FormItemTemplate({ title, children, remove }) {\n  return (\n    <List.Item\n      actions={\n        remove ? [<Button onClick={remove} size=\"small\" type=\"danger\" shape=\"circle\" icon={<CloseOutlined />} />] : null\n      }\n    >\n      <List.Item.Meta title={title} description={children} />\n    </List.Item>\n  );\n}\n\nclass TimeThrottle extends React.Component {\n  throttle = 1000;\n  editing = (<EditOutlined />);\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: null,\n      value: props.value,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n      this.setState({ timer: null });\n      this.onSubmitValue(this.state.value);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n\n  onChange = (value) => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      value: value,\n      timer: setTimeout(() => {\n        this.setState({ timer: null });\n        this.onSubmitValue(this.state.value);\n      }, this.throttle),\n    });\n  };\n\n  onSubmitValue(value) {\n    this.props.onChange(value);\n  }\n\n  onBlur = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(this.state.value);\n  };\n\n  onRemove = () => {\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n    this.setState({\n      timer: null,\n    });\n    this.onSubmitValue(undefined);\n  };\n\n  render() {\n    return null;\n  }\n}\n\nclass TimeThrottleInput extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    return (\n      <FormItemTemplate\n        title={\n          <span>\n            {title}\n            {this.state.timer ? this.editing : null}\n          </span>\n        }\n        remove={this.onRemove}\n      >\n        <Input\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleTextArea extends TimeThrottle {\n  render() {\n    const { title, ...rest } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {this.state.timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <TextArea\n          {...rest}\n          value={this.state.value}\n          onChange={(e) => this.onChange(e.target.value)}\n          onBlur={this.onBlur}\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nclass TimeThrottleRange extends TimeThrottle {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value[0] !== this.state.value[0] || nextProps.value[1] !== this.state.value[1]) {\n      if (this.state.timer) {\n        clearTimeout(this.state.timer);\n        // this.props.onChange(this.state.value);\n      }\n      this.setState({\n        value: nextProps.value,\n        timer: null,\n      });\n    }\n  }\n  onSubmitValue(value) {\n    if (!value) {\n      this.props.onChange(value);\n    }\n    let [min, max] = value;\n    if (typeof min === 'string') {\n      if (min) {\n        min = this.props.value[0];\n      } else {\n        min = undefined;\n      }\n    }\n    if (typeof max === 'string') {\n      if (max) {\n        max = this.props.value[1];\n      } else {\n        max = undefined;\n      }\n    }\n    this.props.onChange([min, max]);\n  }\n  render() {\n    const {\n      value: [min, max],\n      timer,\n    } = this.state;\n    const { title } = this.props;\n    const titleElement = (\n      <span>\n        {title}\n        {timer ? this.editing : null}\n      </span>\n    );\n    return (\n      <FormItemTemplate title={titleElement} remove={this.onRemove}>\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([typeof n === 'string' && !n ? undefined : n, max]);\n          }}\n          value={min === 0 && max === undefined ? '' : min}\n          style={{ width: 100, textAlign: 'center' }}\n          placeholder=\"Minimum\"\n        />\n        <Input\n          style={{ width: 30, borderLeft: 0, pointerEvents: 'none', backgroundColor: '#fff' }}\n          placeholder=\"~\"\n          disabled\n        />\n        <InputNumber\n          onChange={(n) => {\n            this.onChange([min, typeof n === 'string' && !n ? undefined : n]);\n          }}\n          value={max}\n          style={{ width: 100, textAlign: 'center', borderLeft: 0 }}\n          placeholder=\"Maximum\"\n        />\n      </FormItemTemplate>\n    );\n  }\n}\n\nconst widgetMap = {\n  boolean: {\n    checkbox: 'CheckboxWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    hidden: 'HiddenWidget',\n  },\n  string: {\n    text: 'TextWidget',\n    password: 'PasswordWidget',\n    // email: \"EmailWidget\",\n    // hostname: \"TextWidget\",\n    // ipv4: \"TextWidget\",\n    // ipv6: \"TextWidget\",\n    uri: 'URLWidget',\n    'data-url': 'FileWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    textarea: 'TextareaWidget',\n    hidden: 'HiddenWidget',\n    date: 'DateWidget',\n    datetime: 'DateTimeWidget',\n    // \"date-time\": \"DateTimeWidget\",\n    'alt-date': 'AltDateWidget',\n    'alt-datetime': 'AltDateTimeWidget',\n    color: 'ColorWidget',\n    file: 'FileWidget',\n    resim:'imageFileChooserWidget'\n  },\n  number: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  integer: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  array: {\n    select: 'SelectWidget',\n    checkboxes: 'CheckboxesWidget',\n    files: 'FileWidget',\n  },\n};\n\nconst widgets = lodash(widgetMap)\n  .toPairs()\n  .flatMap(([type, widgets]) =>\n    lodash(widgets)\n      .toPairs()\n      .map(([widget]) => [widget, type])\n      .value()\n  )\n  .groupBy('0')\n  .toPairs()\n  .map(([widget, types]) => [widget, types.map((a) => a[1])])\n  .map(([widget, types]) => [\n    types.length > 1 ? ({ type }) => types.includes(type) : ((t) => ({ type }) => type === t)(types[0]),\n    widget,\n  ])\n  .map(([filter, widget]) => {\n    switch (widget) {\n      case 'select':\n      case 'radio':\n        return [(schema, uiSchema) => schema.enum && filter(schema, uiSchema), widget];\n\n      default:\n        return [filter, widget];\n    }\n  })\n  .value();\n\nfunction type({ node: { schema }, updateSchema: update }) {\n  const key = 'type';\n  const title = 'Tip';\n  const availableTypes = ['string', 'number', 'integer', 'boolean'];\n  if (!availableTypes.includes(schema.type)) return [];\n  const value = (schema || {})[key];\n  return [\n    null,\n    <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n      <Select onChange={(value) => update({ [key]: value })} value={value} style={{ width: '100%' }}>\n        {availableTypes.map((key) => (\n          <Option key={key}>{key}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nfunction title({ node: { schema }, updateSchema: update }) {\n  const key = 'title';\n  const title = 'Başlık';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction description({ node: { schema }, updateSchema: update }) {\n  const key = 'description';\n  const title = 'Açıklama';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleTextArea\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n        autoSize\n      />,\n    ];\n  }\n}\n\nclass ClassNamesEditor extends React.Component {\n  colSizes = ['sm', 'md', 'lg', 'xl'];\n  style = { width: '100%' };\n\n  constructor(props) {\n    super(props);\n    const value = [...new Set(this.props.value.split(' ').filter((a) => a))];\n\n    const cols = this.extractCol(value);\n    this.state = {\n      col: cols.length ? cols[0][0] : 'md',\n      value: value,\n      options: value,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      const value = nextProps.value.split(' ').filter((a) => a);\n      const { options } = this.state;\n      const newOptions = value.filter((a) => !options.includes(a));\n      this.setState({\n        value,\n        options: newOptions, //[...options, ...newOptions]\n      });\n    }\n  }\n\n  extractCol(classNames) {\n    return classNames\n      .filter((a) => a.startsWith('col-'))\n      .map((a) => a.split('-'))\n      .filter((a) => a.length === 3 && Number.isInteger(+a[2]) && this.colSizes.includes(a[1]))\n      .map(([a, b, c]) => [b, +c]);\n  }\n\n  renderMenu() {\n    return (\n      <Menu onClick={({ key }) => this.setState({ col: key })}>\n        {this.colSizes.map((a) => (\n          <Menu.Item key={a}>col-{a}-</Menu.Item>\n        ))}\n      </Menu>\n    );\n  }\n\n  sliderValue() {\n    const { value, col } = this.state;\n    return (this.extractCol(value).find((a) => a[0] === col) || [0, 0])[1];\n  }\n\n  onSliderChange = (value) => {\n    const { value: classNames, col } = this.state;\n\n    let found = false;\n    let newClassNames = classNames\n      .map((a) => {\n        let [perfix, b, v] = a.split('-');\n        if (perfix === 'col' && b === col && Number.isInteger(+v)) {\n          found = true;\n          return value ? `col-${b}-${value}` : '';\n        }\n        return a;\n      })\n      .filter((a) => a);\n    if (!found && value) {\n      newClassNames.push(`col-${col}-${value}`);\n    }\n    this.props.onChange(newClassNames.join(' '));\n  };\n\n  render() {\n    const { title, ...rest } = this.props;\n    const { options, value, col } = this.state;\n    return (\n      <FormItemTemplate title={title} remove={() => this.props.onChange(undefined)}>\n        <Row type=\"flex\" align=\"middle\">\n          <Col xs={4}>\n            <Dropdown overlay={this.renderMenu()}>\n              <a>\n                {col} <CaretDownOutlined />\n              </a>\n            </Dropdown>\n          </Col>\n          <Col xs={20}>\n            <Slider min={0} max={12} value={this.sliderValue()} onChange={this.onSliderChange} />\n          </Col>\n        </Row>\n        <Select\n          style={this.style}\n          mode=\"tags\"\n          tokenSeparators={[' ']}\n          {...rest}\n          value={value}\n          onChange={(value) => this.props.onChange(value.join(' '))}\n          onBlur={this.onBlur}\n        >\n          {options.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>\n    );\n  }\n}\n\nfunction classNames({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'classNames';\n  const title = 'Class Names';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <ClassNamesEditor key={key} title={title} value={value} onChange={(value) => update({ classNames: value })} />,\n    ];\n  }\n}\n\nfunction placeholder({ node: { schema, uiSchema }, updateUiOptions: update }) {\n  if (schema.type === 'object' || schema.type === 'array') {\n    return [];\n  }\n  const key = 'placeholder';\n  const title = 'Placeholder';\n  const uiOptions = (uiSchema || {})['ui:options'];\n  const value = (uiOptions || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction help({ node: { uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:help';\n  const title = 'Yardım';\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput key={key} title={title} value={value} onChange={(value) => update({ [key]: value })} />,\n    ];\n  }\n}\n\nfunction widget({ node: { schema, uiSchema }, updateUiSchema: update }) {\n  const key = 'ui:widget';\n  const title = 'Widget';\n  const availableWidgets = widgets.filter(([f]) => f(schema || {}, uiSchema || {}));\n  if (!availableWidgets.length) return [];\n  const value = (uiSchema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          onChange={(value) => update({ [key]: value || null })}\n          value={value}\n          style={{ width: '100%' }}\n          showSearch\n        >\n          {availableWidgets.map(([_, key]) => (\n            <Option key={key}>{key}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\nfunction pattern({ node: { schema }, updateSchema: update }) {\n  if (schema.type !== 'string') return [];\n  const key = 'pattern';\n  const title = 'Pattern';\n  const value = (schema || {})[key];\n  if (value === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: '' })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <TimeThrottleInput\n        key={key}\n        title={title}\n        value={value}\n        onChange={(value) => update({ [key]: value || undefined })}\n      />,\n    ];\n  }\n}\n\nfunction required({ node: { schema }, updateSchema: update }) {\n  const key = 'required';\n  const title = 'Doldurulması Zorunlu Alanlar';\n  if (schema.type !== 'object') return [];\n  if (!schema.required) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <FormItemTemplate key={key} title=\"Doldurulması Zorunlu Alanlar\" remove={() => update({ [key]: undefined })}>\n      <Select\n        mode=\"multiple\"\n        style={{ width: '100%' }}\n        onChange={(required) => update({ required })}\n        value={schema.required}\n      >\n        {Object.keys(schema.properties || {}).map((a) => (\n          <Option key={a}>{a}</Option>\n        ))}\n      </Select>\n    </FormItemTemplate>,\n  ];\n}\n\nconst rangeMeta = (match, key, title, minp, maxp) => ({ node: { schema }, updateSchema: update }) => {\n  if (!match(schema)) return [];\n  if (schema[minp] === undefined && schema[maxp] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [minp]: 0 })}>\n        {title}\n      </Menu.Item>,\n    ];\n  }\n  return [\n    null,\n    <TimeThrottleRange\n      key={key}\n      title={title}\n      value={[schema[minp], schema[maxp]]}\n      onChange={(value) => {\n        if (!value) {\n          update({ [minp]: undefined, [maxp]: undefined });\n        } else {\n          const [min, max] = value;\n          update({\n            [minp]: min ? min : max === undefined ? 0 : undefined,\n            [maxp]: max,\n          });\n        }\n      }}\n    />,\n  ];\n};\nconst length = rangeMeta((a) => a.type === 'string', 'length', 'Uzunluk', 'minLength', 'maxLength');\nconst range = rangeMeta((a) => a.type === 'number' || a.type === 'integer', 'range', 'Range', 'minimum', 'maximum');\nconst itemRange = rangeMeta((a) => a.type === 'array', 'itemRange', 'Item Range', 'minItems', 'maxItems');\n\nfunction uniqueItems({ node: { schema }, updateSchema: update }) {\n  const key = 'uniqueItems';\n  const title = 'Unique Items';\n  if (schema.type !== 'array') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: true })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <List.Item\n        actions={[\n          <Button onClick={() => update({ [key]: undefined })} size=\"small\" type=\"danger\" icon={<CloseOutlined />} />,\n        ]}\n      >\n        <List.Item.Meta title={title} />\n        <Switch defaultChecked onChange={(value) => update({ [key]: value })} />\n      </List.Item>,\n    ];\n  }\n}\n\nconst [enumKey, enumName] = [\n  ['enum', 'Liste Elemanları'],\n  ['enumNames', 'Liste Eleman İsimleri'],\n].map(([key, title]) => ({ node: { schema }, updateSchema: update }) => {\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select\n          mode=\"tags\"\n          style={{ width: '100%' }}\n          onChange={(values) => update({ [key]: values })}\n          value={schema[key]}\n        >\n          {schema[key].map((a) => (\n            <Select.Option key={a}>{a}</Select.Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n});\n\nconst formatOptions = ['date-time', 'email', 'hostname', 'ipv4', 'ipv6', 'uri'];\nfunction format({ node: { schema }, updateSchema: update }) {\n  const key = 'format';\n  const title = 'Format';\n  if (schema.type !== 'string') return [];\n  if (schema[key] === undefined) {\n    return [\n      <Menu.Item key={key} onClick={() => update({ [key]: [] })}>\n        {title}\n      </Menu.Item>,\n    ];\n  } else {\n    return [\n      null,\n      <FormItemTemplate key={key} title={title} remove={() => update({ [key]: undefined })}>\n        <Select style={{ width: '100%' }} onChange={(value) => update({ [key]: value })} value={schema[key]}>\n          {formatOptions.map((a) => (\n            <Option key={a}>{a}</Option>\n          ))}\n        </Select>\n      </FormItemTemplate>,\n    ];\n  }\n}\n\nexport default class BasicEditor extends React.Component {\n  static get key() {\n    return 'basic-editor';\n  }\n\n  static get name() {\n    return 'Özellikler';\n  }\n\n  static filter(node) {\n    return node.schema;\n  }\n\n  name() {\n    return null;\n  }\n\n  render() {\n    const l = [\n      // type,\n      title,\n      description,\n      required,\n     //widget,\n     //classNames,\n      help,\n     // placeholder,\n       enumKey,\n       enumName,\n     // pattern,\n      length,\n     // range,\n      itemRange,\n      uniqueItems,\n      format,\n    ].map((f) => f(this.props));\n\n    const addable = l.map((a) => a[0]).filter((a) => a);\n    const editable = l.map((a) => a[1]).filter((a) => a);\n\n    if (addable.length) {\n      editable.push(\n        <List.Item key=\"addButton\">\n          <Dropdown trigger={['click']} overlay={<Menu>{addable}</Menu>}>\n            <Button style={{ width: '100%' }} type=\"primary\" icon={<PlusOutlined />} />\n          </Dropdown>\n        </List.Item>\n      );\n    }\n\n    return <List itemLayout=\"horizontal\" dataSource={editable} renderItem={(a) => a} />;\n  }\n\n  _render() {\n    return (\n      <form className=\"ant-form ant-form-horizontal\">\n        {this.name()}\n        <fieldset>\n          <legend>Schema</legend>\n          {this.title()}\n          {this.description()}\n        </fieldset>\n        <fieldset>\n          <legend>uiSchema</legend>\n          {this.widgets()}\n          {this.classNames()}\n          {this.help()}\n        </fieldset>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs } from 'antd';\nimport JsonEditor from './JsonEditor';\nimport BasicEditor from './BasicEditor';\n\nconst { getNode } = require('../core');\nconst { TabPane } = Tabs;\n\n\n\nclass Editor extends React.Component {\n  editorList =this.props.isSuperAdmin?[BasicEditor, JsonEditor]:[BasicEditor];\n  updateUiOptions = (uiOptionsUpdate) => {\n    const { uiSchema = {}, key } = this.props.node;\n    const uiOptions = uiSchema['ui:options'] || {};\n    const newUiOptions = { ...uiOptions, ...uiOptionsUpdate };\n    for (const i in newUiOptions) {\n      if (newUiOptions[i] !== undefined) {\n        this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': { ...uiOptions, ...newUiOptions } } });\n        return;\n      }\n    }\n    this.props.updateNode(key, { uiSchema: { ...uiSchema, 'ui:options': undefined } });\n  };\n\n  render() {\n    const { node, updateNode } = this.props;\n    if (!(node && node.schema)) return null;\n    const filteredEditors = this.editorList.filter((a) => a.filter(node));\n    return (\n      <Tabs defaultActiveKey={filteredEditors[0].key} type=\"card\">\n        {filteredEditors.map((Editor) => (\n          <TabPane tab={Editor.name} key={Editor.key}>\n            <div style={{ margin: '0px 16px' }}>\n              <Editor\n                key={node.key}\n                node={node}\n                updateNode={(nodeUpdate) => updateNode(node.key, nodeUpdate)}\n                updateSchema={(schemaUpdate) => updateNode(node.key, { schema: { ...node.schema, ...schemaUpdate } })}\n                updateUiSchema={(uiSchemaUpdate) =>\n                  updateNode(node.key, { uiSchema: { ...node.uiSchema, ...uiSchemaUpdate } })\n                }\n                updateUiOptions={this.updateUiOptions}\n              />\n            </div>\n          </TabPane>\n        ))}\n      </Tabs>\n    );\n  }\n}\n\nexport default connect(\n  ({ tree: { present }, activeNodeKey }) => ({\n    node: activeNodeKey && getNode(present, activeNodeKey),\n  }),\n  (dispatch) => ({\n    updateNode: (target, nodeUpdate) =>\n      dispatch({\n        type: 'TREE_UPDATE_NODE',\n        payload: {\n          target,\n          nodeUpdate,\n        },\n      }),\n  })\n)(Editor);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Button, Col, message, Row, Select, Tooltip} from 'antd';\nimport {RedoOutlined, UndoOutlined} from '@ant-design/icons';\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {ActionTypes} from 'redux-undo';\nimport {showAxiosError} from \"../../../helper/helper\";\nimport Swal from \"sweetalert2\";\nimport StickButton from \"../../../components/StickButton\";\n\nconst buttonStyle = {marginLeft: 10};\n\nclass Toolbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedSurveyForm: props.selectedSurveyForm,\n            isActive: 'AKTİF',\n            isLoading: false,\n            personalInfo: 0\n        };\n        this.open = this.open.bind(this);\n        this.onChangeState = this.onChangeState.bind(this);\n        this.onChangeIsPerinfoForm = this.onChangeIsPerinfoForm.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.selectedSurveyForm === undefined) {\n            this.props.newForm();\n        } else {\n            this.setState({\n                isActive: this.state.selectedSurveyForm.state,\n                personalInfo: this.state.selectedSurveyForm.personalInfo\n            });\n            this.open(this.state.selectedSurveyForm.jsonContent);\n        }\n    }\n\n    onChangeState(e) {\n        this.setState({isActive: e});\n    }\n\n    onChangeIsPerinfoForm(e) {\n        this.setState({personalInfo: e.target.checked});\n    }\n\n    save = () => {\n        const {name} = this.props.tree.present[0];\n        let self = this;\n        let survey = this.state.selectedSurveyForm !== undefined ? this.state.selectedSurveyForm : {};\n        survey['jsonContent'] = JSON.stringify(this.props.tree.present[0]);\n        survey['name'] = name;\n        survey['state'] = self.state.isActive;\n        survey['personalInfo'] = self.state.personalInfo;\n        self.props.setSavingStateTrue();\n        let params = {\n            url: `/survey/saveSurveyForm`,\n            method: \"post\",\n            data: survey\n        };\n        self.setState({disabledSaveBtn: true, isLoading: true});\n        requestK(params)\n            .then(function (response) {\n                self.props.setSavingStateFalse();\n                self.setState({\n                    selected: null,\n                    displayCreateUpdateDialog: false,\n                    manual: true,\n                    disabledSaveBtn: false,\n                    isLoading: false\n                });\n                Swal({\n                    title: 'Başarılı ! ',\n                    text: (\"Kaydetme işlemi başarıyla gerçekleştirildi.\"),\n                    type: 'success',\n                    confirmButtonText: 'Tamam'\n                }).then((result) => {\n                });\n            }).catch(function (error) {\n            self.props.setSavingStateFalse();\n            showAxiosError(error);\n            self.setState({disabledSaveBtn: false, isLoading: false});\n        });\n    };\n\n    open(s) {\n        try {\n            const {name, schema, uiSchema} = JSON.parse(s);\n            this.props.setTree({name, schema, uiSchema});\n        } catch (e) {\n            message.error('Invalid json file!');\n        }\n    };\n\n    render() {\n        const {tree, undo, redo, settings, updateSettings} = this.props;\n        const {past, future} = tree;\n        return (\n            <div>\n                <Row>\n                    <Col>\n                        <Tooltip title=\"Geri Al\">\n                            <Button style={buttonStyle} onClick={undo} disabled={!past.length} icon={<UndoOutlined/>}/>\n                        </Tooltip>\n                    </Col>\n                    <Col>\n                        <Tooltip title=\"İleri Al\">\n                            <Button style={buttonStyle} onClick={redo} disabled={!future.length}\n                                    icon={<RedoOutlined/>}/>\n                        </Tooltip>\n                    </Col>\n                    <Col>\n                        {this.props.isSuperAdmin && <Select\n                            mode=\"multiple\"\n                            style={{width: 290, marginLeft: 10}}\n                            value={settings.subViews}\n                            onChange={updateSettings}\n                            placeholder=\"Alt Görünümü Seçin...\">\n                            <Select.Option key=\"schema\">Schema</Select.Option>\n                            <Select.Option key=\"uiSchema\">Ui Schema</Select.Option>\n                            <Select.Option key=\"formData\">Data</Select.Option>\n                        </Select>}\n                    </Col>\n                    <Col>\n                        <Tooltip title=\"Durum\">\n                            <Select\n\n                                style={{width: 100, marginLeft: 10}}\n                                value={this.state.isActive}\n                                onChange={e => this.onChangeState(e)}\n                            >\n                                <Select.Option key=\"AKTİF\">Aktif</Select.Option>\n                                <Select.Option key=\"PASİF\">Pasif</Select.Option>\n                            </Select>\n                        </Tooltip>\n                    </Col>\n                    <Col>\n                        <Tooltip title=\"Özlük\">\n                            <label style={{marginLeft: 10}}>Özlük formu mu?\n                                <input\n                                    type='checkbox'\n                                    name='personalInfo'\n                                    checked={this.state.personalInfo}\n                                    id='personalInfo'\n                                    onChange={this.onChangeIsPerinfoForm}\n                                    style={{marginLeft: 5}}\n                                />\n                            </label>\n                        </Tooltip>\n                    </Col>\n                    <Col>\n                        <Tooltip>\n                            <StickButton position=\"leftSide\"\n                                         className=\"zocial Kaydet\"\n                                         style={buttonStyle}\n                                         label=\"Kaydet\"\n                                         title=\"Kaydet\"\n                                         onClick={this.save}/>\n                        </Tooltip>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    ({tree, settings}) => ({tree, settings}),\n    (dispatch) => ({\n        newForm: () =>\n            dispatch({\n                type: 'TREE_CLEAR',\n            }),\n        setTree: (payload) =>\n            dispatch({\n                type: 'TREE_SET_TREE',\n                payload,\n            }),\n        undo: () => dispatch({type: ActionTypes.UNDO}),\n        redo: () => dispatch({type: ActionTypes.REDO}),\n        updateSettings: (subViews) =>\n            dispatch({\n                type: 'SETTINGS_UPDATE',\n                payload: {subViews},\n            }),\n    })\n)(Toolbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Slider, Switch, Button, List, Modal } from 'antd';\nconst { confirm } = Modal;\n\nconst tipFormatter = ((flag = false) => (number) => {\n  flag = !flag;\n  return flag ? number : window.innerWidth - number;\n})();\n\nclass Settings extends React.Component {\n  siderWidth() {\n    const { leftSiderWidth, rightSiderWidth } = this.props.settings;\n    return {\n      key: 'sider-width',\n      title: 'Kenar Çubuğu Genişliği',\n      description: (\n          <Slider\n              included\n              min={0}\n              max={window.innerWidth}\n              tipFormatter={tipFormatter}\n              range\n              value={[leftSiderWidth, window.innerWidth - rightSiderWidth]}\n              onChange={([left, right]) => {\n                this.props.updateSettings({\n                  leftSiderWidth: left > 200 ? left : 200,\n                  rightSiderWidth: window.innerWidth - right,\n                });\n              }}\n          />\n      ),\n    };\n  }\n\n  formWidth() {\n    return {\n      key: 'form-item',\n      title: 'Form Genişliği',\n      description: (\n          <Slider\n              min={0}\n              max={window.innerWidth}\n              value={this.props.settings.formWidth}\n              onChange={(value) => {\n                this.props.updateSettings({\n                  formWidth: value,\n                });\n              }}\n          />\n      ),\n    };\n  }\n\n  inlineMode() {\n    return {\n      key: 'inline-mode',\n      title: 'Satır İçi  Mode',\n      actions: [\n        <Switch\n            onChange={(v) => this.props.updateSettings({ isInlineMode: v })}\n            checked={this.props.settings.isInlineMode}\n        />,\n      ],\n    };\n  }\n\n  /*liveValidate() {\n    return {\n      key: 'live-validate',\n      title: 'Live Validate',\n      actions: [\n        <Switch\n            onChange={(v) => this.props.updateSettings({ isLiveValidate: v })}\n            checked={this.props.settings.isLiveValidate}\n        />,\n      ],\n    };\n  }*/\n\n  menu() {\n    const { setTree, rootNode, setMenu, menu } = this.props;\n    return {\n      key: 'menu',\n      title: 'Menü',\n      description: [\n        <Button key=\"edit\" onClick={() => setTree(menu)}>\n          Özelleştir\n        </Button>,\n        <Button key=\"set\" onClick={() => setMenu(rootNode)}>\n          Değişiklikleri Uygula\n        </Button>,\n      ],\n    };\n  }\n\n  /*reset() {\n    return {\n      key: 'reset',\n      description: (\n          <Button\n              type=\"danger\"\n              sytle={{ width: '100%' }}\n              key=\"edit\"\n              onClick={() => {\n                confirm({\n                  title: 'Reset Form Buiilder?',\n                  content: 'Removing persistent data from local storage.\\n All settings and unsaved form will be lost.',\n                  okText: 'Continue',\n                  okType: 'danger',\n                  closable: true,\n                  maskClosable: true,\n                  onOk() {\n                    window.localStorage.removeItem('persist:react-jsonschema-formbuilder');\n                    window.location.reload();\n                  },\n                });\n              }}\n          >\n            Reset Form Builder\n          </Button>\n      ),\n    };\n  }*/\n\n  listItems() {\n    return [this.siderWidth(), this.formWidth(), this.inlineMode(), this.props.isSuperAdmin&&this.menu()];\n  }\n\n  renderItem(a) {\n    const {\n      Item,\n      Item: { Meta },\n    } = List;\n    return (\n        <Item key={a.key} actions={a.actions}>\n          <Meta title={a.title} description={a.description} />\n        </Item>\n    );\n  }\n\n  render() {\n    return <List itemLayout=\"horizontal\" dataSource={this.listItems()} renderItem={this.renderItem} />;\n  }\n}\n\nexport default connect(\n    ({\n       settings,\n       tree: {\n         present: [rootNode],\n       },\n       menu,\n     }) => ({ settings, rootNode, menu }),\n    (dispatch) => ({\n      updateSettings: (payload) =>\n          dispatch({\n            type: 'SETTINGS_UPDATE',\n            payload,\n          }),\n      setTree: ({ schema, uiSchema }) =>\n          dispatch({\n            type: 'TREE_SET_TREE',\n            payload: {\n              name: 'menu',\n              schema,\n              uiSchema,\n            },\n          }),\n      setMenu: ({ schema, uiSchema }) =>\n          dispatch({\n            type: 'MENU_SET',\n            payload: {\n              schema,\n              uiSchema,\n            },\n          }),\n    })\n)(Settings);\n","import React, {Component} from 'react';\nimport {Provider, connect} from 'react-redux';\nimport {store, persistor} from './store';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport './css';\nimport {Layout, Tabs, Card} from 'antd';\nimport Tree from './Tree';\nimport {FormView, SchemaView, UiSchemaView, FormDataView} from './views';\nimport NodeEditor from './Editor';\nimport Toolbar from './Toolbar';\nimport Settings from './Settings';\nimport ReactLoading from \"react-loading\";\nimport './formbuilder.css';\n//import './formbuilder.module.css';\n\nconst {Header, Sider, Content} = Layout;\nconst {TabPane} = Tabs;\n\nclass FormBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n            currentUser: this.props.currentUser,\n            selectedSurveyForm: this.props.selectedSurveyForm,\n            isSaving: false\n        };\n        this.setSavingStateTrue = this.setSavingStateTrue.bind(this);\n        this.setSavingStateFalse = this.setSavingStateFalse.bind(this);\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    setSavingStateTrue() {\n        this.setState({\n            isSaving: true\n        });\n    }\n\n    setSavingStateFalse() {\n        this.setState({\n            isSaving: false\n        });\n    }\n\n    render() {\n        const {settings, isSuperAdmin} = this.props;\n        return (\n            <Layout>\n                <Sider\n                    trigger={null}\n                    collapsible\n                    collapsed={this.state.collapsed}\n                    width={settings.leftSiderWidth}\n                    style={{\n                        background: '#fff',\n                        padding: 0,\n                        overflow: 'auto',\n                        boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 260,\n                    }}>\n                    <Tabs defaultActiveKey=\"0\" size=\"small\" type=\"card\">\n                        <TabPane tab=\"Editör\" key=\"0\">\n                            <Layout> <Tree /></Layout>\n                        </TabPane>\n                        <TabPane tab=\"Ayarlar\" style={{padding: '8px'}} key=\"1\">\n                            <Settings isSuperAdmin={this.props.isSuperAdmin}/>\n                        </TabPane>\n                    </Tabs>\n                </Sider>\n                <Layout style={{marginLeft: settings.leftSiderWidth}}>\n                    <Header style={{background: '#fff', padding: 0, width:800}}>\n                        <Toolbar selectedSurveyForm={this.state.selectedSurveyForm}\n                                 isSuperAdmin={this.props.isSuperAdmin}\n                                 setSavingStateTrue={this.setSavingStateTrue}\n                                 setSavingStateFalse={this.setSavingStateFalse}\n                        />\n                    </Header>\n                    {this.state.isSaving && <ReactLoading type=\"spinningBubbles\" style={{\n                        width: \"20px\",\n                        height: \"20px\",\n                        margin: \"20px auto 0 auto\",\n                        fill: \"#888\"\n                    }}/>}\n                    <Content style={{minHeight: 280, padding: '12px 8px'}}>\n                        <Card\n                            bordered={false}\n                            style={{\n                                width: settings.formWidth,\n                                margin: '12px 8px',\n                                display: 'inline-block',\n                                verticalAlign: 'top'\n                            }}\n                        >\n                            <FormView/>\n                        </Card>\n                        {(settings.subViews || []).map((a) => {\n                            if (isSuperAdmin) {\n                                const style = {\n                                    margin: '12px 8px',\n                                    width: 400,\n                                    display: 'inline-block',\n                                    verticalAlign: 'top'\n                                };\n                                switch (a) {\n                                    case 'schema':\n                                        return (\n                                            <Card key=\"schema\" title=\"Schema\" style={style}>\n                                                <SchemaView/>\n                                            </Card>\n                                        );\n                                    case 'uiSchema':\n                                        return (\n                                            <Card key=\"uiSchema\" title=\"Ui Schema\" style={style}>\n                                                <UiSchemaView/>\n                                            </Card>\n                                        );\n                                    case 'formData':\n                                        return (\n                                            <Card key=\"formData\" title=\"Form Data\" style={style}>\n                                                <FormDataView/>\n                                            </Card>\n                                        );\n                                    default:\n                                        return <div key=\"null\"/>;\n                                }\n                            }\n                        })}\n                    </Content>\n                </Layout>\n                <Sider\n                    width={this.props.activeNodeKey ? settings.rightSiderWidth : 0}\n                    style={{\n                        overflow: 'auto',\n                        background: '#fff',\n                        boxShadow: '0 2px 3px 0 rgba(0, 0, 0, 0.2), 0 2px 3px 0 rgba(0, 0, 0, 0.2)',\n                        position: 'fixed',\n                        height: '100vh',\n                        right: 0,\n                    }}\n                >\n                    <NodeEditor isSuperAdmin={this.props.isSuperAdmin}/>\n                </Sider>\n            </Layout>\n        );\n    }\n}\n\nconst AppContainer = connect(({activeNodeKey, settings}) => ({\n    activeNodeKey,\n    settings,\n}))(FormBuilder);\nexport default (props) => (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <AppContainer currentUser={props.currentUser} selectedSurveyForm={props.location.selectedSurveyForm}\n                          isSuperAdmin={props.isSuperAdmin}/>\n        </PersistGate>\n    </Provider>\n);\n\n"],"sourceRoot":""}