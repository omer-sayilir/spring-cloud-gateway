{"version":3,"sources":["components/AutoCompleteList.js","accounting/kepik/formtemplate/FormTemplateCreationPage.js"],"names":["AutoCompleteList","Component","constructor","props","super","formatCreateLabelCreator","value","this","allowNew","name","state","changeLabel","bind","createLabel","checkUpperCase","generateOptions","onChange","list","length","newValue","onlyLabel","label","push","updateList","i","valueCheck","text","useUpperCase","toString","replace","toUpperCase","options","map","e","render","React","createElement","Select","Creatable","clearable","multi","className","id","placeholder","promptTextCreator","noResultsText","onNewOptionClick","defaultProps","FormTemplateCreationPage","readMailTemplate","self","params","url","method","requestK","then","response","data","setState","prevState","selected","mimeBody","catch","error","showAxiosError","getParamLetterHead","letterList","concat","letterHeadList","selectedForm","antet","find","item","antetId","getList","formTypeList","formParameters","getSurveyForms","getJobTitles","jobTitleList","jobTitleOptions","history","location","handleSurveyFormChange","selectedSurveyForm","surveyFormParameters","undefined","JSON","parse","surveyForm","jsonContent","jsObj","formSurveyParameters","Object","keys","filter","x","stringify","includes","removeSurveyForm","option","surveyFormOptions","param","originalContents","formTemplate","encodeToBase64InChunks","input","binaryString","String","fromCharCode","apply","slice","btoa","forEach","encoded","TextEncoder","encode","bulkJson","formContent","finally","showEmployeeParameters","employeeParameters","showCreatorParameters","creatorParameters","showConstantParameters","constantParameters","showChangeableParameters","changeableParameters","save","valid","result","originalContent","setDeptListToString","loading","showLoading","alert","formType","category","autosend","saveBtnLoading","Swal","title","showCancelButton","html","type","cancelButtonText","confirmButtonText","dismiss","pathname","peykName","document","getElementById","classList","remove","add","saveSurveyForms","Alert","errorMessage","position","effect","timeout","selectAllDepartment","departmentList","departmentIds","selectedOrganizationalUnitList","d","departments","departman","organization","organizationalUnitList","deptList","err","setEmploymentContractList","selectedContractList","contract","employmentContractList","setEmploymentStatusList","selectedEmployeeStatusList","status","employeeStatusList","setJobTitlesList","selectedJobTitleList","addFormParameterKeyToEditor","keyLabel","editorRef","current","execCommand","evaluateExternalInputName","externalInput","index","deleteBlanks","content","match","Array","join","addStyleForLongWord","htmlContent","replaceAll","closeTags","tag","indexOf","closeIndex","firstPart","substring","secondPart","callback","action","run","activateJoyride","setEmpContractList","setEmployeeStatusList","setOrganizationUnitList","setJobTitleList","createRef","values","size","pageNumber","pageSize","formName","selectedFormType","key","Math","random","newData","previewContent","selectedEmpContractList","editorValue","copyParameter","keyLabels","nameOrganization","idOrganization","valuesOrganization","contractList","statusList","deptAllList","surveyFormOptionsCompleted","locale","back","close","last","next","skip","steps","target","placement","disableBeacon","saveClicked","setMediaViewer","increaseInput","decreaseInput","addAttachment","onChangeOnFormType","onCreated","onstart","editArea","addEventListener","dropHandler","dragoverHandler","preventDefault","dataTransfer","getData","setData","innerText","componentDidMount","getDepartments","contractObj","department","job","optionItems","formTemplateId","_item$surveyForm$form","generateFormType","toLowerCase","parseInt","assign","isValidFormTemplate","errorData","errorName","errorDate","errorDay","kvkkDocument","SweetAlert","showCancel","warning","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","onConfirm","onCancel","info","style","fontSize","margin","showUploadModal","chunkSize","responseType","mediaModal","blob","Blob","headers","base64Data","reader","FileReader","readAsDataURL","onloadend","editClassName","SweetAlertExt","split","space","labelLength","islem","renderDynamicButton","Row","draggable","onDragStart","background","width","border","color","fontWeight","opacity","letterSpacing","onClick","renderExternalButton","minWidth","onChangeContent","getContent","renderEditorComponent","formattedText","Fragment","trim","internalParameterList","sort","CardBody","marginBottom","left","paddingBottom","paddingTop","zIndex","Form","Col","sm","FormGroup","row","Label","Input","rows","height","marginTop","padding","marginLeft","clearValueText","checked","isAnswerable","disabled","priority","withoutSign","isDecline","maxMenuHeight","isMulti","paddingLeft","Editor","apiKey","process","onInit","evt","editor","initialValue","onDrop","onDragOver","init","branding","themes","language_url","language","menubar","toolbar_sticky","toolbar_mode","quickbars_insert_toolbar","entity_encoding","paste_preprocess","plugin","args","removed","parsed","plugins","toolbar","content_style","Card","backgroundColor","borderLeft","fontStyle","display","Joyride","continuous","showProgress","showSkipButton","disableScrollParentFix","disableScrolling","styles","primaryColor","Nav","StickButton","right","ApproveDocumentViewer","modal","closeModal","listener","canvas"],"mappings":"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","file":"static/js/18.767fdd0b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Select from \"../local_node_modules/react-select\"\n\nclass AutoCompleteList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.changeLabel = this.changeLabel.bind(this);\n        this.createLabel = this.createLabel.bind(this);\n        this.checkUpperCase = this.checkUpperCase.bind(this);\n        this.generateOptions = this.generateOptions.bind(this);\n    }\n\n    changeLabel(value) {\n        this.props.onChange(this.checkUpperCase(value));\n    }\n\n    createLabel(value) {\n        if (this.props.allowNew) {\n            let list = this.props.list;\n            if (list.length === 0) {\n                let newValue;\n                if (!this.props.onlyLabel) {\n                    newValue = {value: \"0\", label: this.checkUpperCase(value.label)};\n                } else {\n                    newValue = {value: this.checkUpperCase(value.label), label: this.checkUpperCase(value.label)};\n                }\n                list.push(newValue);\n                this.props.updateList(list);\n                this.changeLabel(newValue);\n            } else {\n                let i = list.length - 1;\n                let valueCheck = list[i];\n                if (!this.props.onlyLabel) {\n                    if (valueCheck.value === \"0\") {\n                        list[i].label = this.checkUpperCase(value.label);\n                        this.props.updateList(list);\n                        this.changeLabel(list[i]);\n                    } else {\n                        let newValue = {value: \"0\", label: this.checkUpperCase(value.label)};\n                        list.push(newValue);\n                        this.props.updateList(list);\n                        this.changeLabel(newValue);\n                    }\n                } else {\n                    if (valueCheck.value === this.checkUpperCase(value.label)) {\n                        list[i].label = this.checkUpperCase(value.label);\n                        this.props.updateList(list);\n                        this.changeLabel(list[i]);\n                    } else {\n                        let newValue = {\n                            value: this.checkUpperCase(value.label),\n                            label: this.checkUpperCase(value.label)\n                        };\n                        list.push(newValue);\n                        this.props.updateList(list);\n                        this.changeLabel(newValue);\n                    }\n                }\n            }\n        }\n    }\n\n    checkUpperCase(text) {\n        if (text && this.props.useUpperCase) {\n            if (text.value != null && text.label) {\n                text.label = text.label.toString().replace(\"i\", \"İ\").toUpperCase();\n            } else {\n                text = text.toString().replace(\"i\", \"İ\").toUpperCase();\n            }\n        }\n        return text;\n    }\n\n    generateOptions() {\n        let options = [];\n        this.props.list &&\n        this.props.list.length > 0 &&\n        this.props.list.map(e => {\n            options.push({value: e.value, label: this.checkUpperCase(e.label)})\n        });\n        return options;\n    }\n\n    formatCreateLabelCreator = (value) => {\n        if (this.props.allowNew)\n            return 'Ekle \"' + value + '\"';\n        else\n            return 'Lütfen, var olan bir ' + this.props.name + ' seçimi yapınız.'\n    };\n\n    render() {\n        let options = this.generateOptions();\n        return (\n            <Select.Creatable\n                clearable={false}\n                multi={false}\n                className=\"select-control\"\n                name=\"autoCompleteList\"\n                id=\"autoCompleteList\"\n                value={this.props.value}\n                placeholder={this.props.placeholder}\n                promptTextCreator={this.formatCreateLabelCreator}\n                noResultsText={\"Henüz kaydedilmiş veri yok\"}\n                onChange={(e) => this.changeLabel(e)}\n                onNewOptionClick={(e) => this.createLabel(e)}\n                options={options}\n            />\n        );\n    }\n}\n\nAutoCompleteList.defaultProps = {\n  allowNew: true,\n  useUpperCase: false,\n  onlyLabel: false,\n  updateList: (list) => {}\n};\nexport default AutoCompleteList;\n","import React, {Component} from 'react';\nimport {CardBody,Card, Col, Form, FormGroup, Input, Label, Nav, Row} from \"reactstrap\";\nimport StickButton from \"../../../components/StickButton\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport Alert from \"react-s-alert\";\nimport {isValidFormTemplate} from \"../../../common/componentValidation\";\nimport AutoCompleteList from \"../../../components/AutoCompleteList\";\nimport '../../../App.css';\nimport ApproveDocumentViewer from \"../approval/helper/ApproveDocumentViewer\";\nimport Select from 'react-select';\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport SweetAlertExt from \"../../../components/SweetAlertExt\";\nimport {Editor} from '@tinymce/tinymce-react';\nimport Joyride from \"react-joyride\";\nimport Swal from \"sweetalert2\";\n\n\nclass FormTemplateCreationPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.editorRef = React.createRef();\n\n        this.state = {\n            values: [],\n            size: 0,\n            pageNumber: 0,\n            pageSize: 10,\n            loading: false,\n            valid: {},\n            selected: {\n                id: null,\n                formName: \"\",\n                formContent: \"\",\n                antet: {value: \"-1\", label: \"ANTETSİZ\"}\n            },\n            selectedFormType: null,\n            formTypeList: [],\n            key: Math.random(),\n            externalInput: {\"Veri\": 1, \"AdSoyad\": 1, \"Tarih\": 1, \"GününTarihi\": ''},\n            newData: true,\n            previewContent: false,\n            employeeParameters: false,\n            creatorParameters:false,\n            constantParameters: false,\n            changeableParameters: false,\n            surveyFormOptions: [],\n            selectedSurveyForm: undefined,\n            selectedEmpContractList: \"\",\n            surveyFormParameters: [],\n            letterHeadList: [],\n            editorValue: '',\n            copyParameter: '',\n            index: 0,\n            formType: {value: \"\", label: \"\"},\n            keyLabels: [],\n            nameOrganization: '',\n            idOrganization: '',\n            valuesOrganization: [],\n            departments: [],\n            selectedContractList: [],\n            contractList: [\n                {value: 1, label: 'Belirsiz Süreli'},\n                {value: 2, label: 'Belirli Süreli'},\n                {value: 3, label: 'Part-Time'},\n                {value: 4, label: 'Stajyer'},\n                {value: 5, label: 'Toplu İş Sözleşmesi'}\n            ],\n            statusList: [\n                {value: 1, label: 'Aktif'},\n                {value: 3, label: 'Aday'},\n            ],\n            selectedEmployeeStatusList: [],\n            selectedOrganizationalUnitList: [],\n            organizationalUnitList: [],\n            deptAllList: [],\n            surveyFormOptionsCompleted: false,\n            selectedJobTitleList: [],\n            jobTitleOptions: [],\n            jobTitleList: [],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            steps: [\n                {\n                    target: '#containerFormTemplate',\n                    content: 'Bu alandan oluşturacağınız ya da düzenleyeceğiniz form şablonu ile ilgili gerekli seçimleri yapabilirsiniz.',\n                    placement: \"auto\",\n                    disableBeacon: 'true'\n                },\n                {\n                    target: '#containerFormTemplate form .form-group:nth-child(1)',\n                    content: 'Var olan bir form türünü seçebilir veya yeni bir form türü adı yazarak \"Ekle\" seçeneğine tıklayabilirsiniz. ',\n                    placement: \"auto\",\n                    disableBeacon: 'true'\n                },\n                {\n                    target: '#containerFormTemplate form .col-sm-4 .form-group:nth-child(1)',\n                    content: '\"Talep Form Editör\" kullanarak oluşturduğunuz taslakları buradan seçerek şablonunuza ekleyebilirsiniz.',\n                    placement: \"auto\",\n                    disableBeacon: 'true'\n                },\n                {\n                    target: '#braftBackground',\n                    content: 'Form editörü vasıtasıyla form şablonunuzu özelleştirebilirsiniz.',\n                    placement: \"auto\",\n                    disableBeacon: 'true'\n                },\n                {\n                    target: '.parametersArea',\n                    content: 'Bu alanda yer alan parametreleri formunuza sürükleyerek formunuza hazır veri ekleyebilirsiniz.',\n                    placement: \"auto\",\n                    disableBeacon: 'true'\n                },\n                {\n                    target: '.content ul',\n                    content: 'Formunuzu oluşturduktan sonra önizleyip kaydedebilirsiniz.',\n                    placement: \"auto\",\n                    disableBeacon: 'true'\n                },\n            ],\n            run: false\n        };\n\n        this.saveClicked = this.saveClicked.bind(this);\n        this.setMediaViewer = this.setMediaViewer.bind(this);\n        this.increaseInput = this.increaseInput.bind(this);\n        this.decreaseInput = this.decreaseInput.bind(this);\n        this.previewContent = this.previewContent.bind(this);\n        this.addAttachment = this.addAttachment.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onChangeOnFormType = this.onChangeOnFormType.bind(this);\n        this.addFormParameterKeyToEditor = this.addFormParameterKeyToEditor.bind(this);\n        this.handleSurveyFormChange = this.handleSurveyFormChange.bind(this);\n        this.saveSurveyForms = this.saveSurveyForms.bind(this);\n        this.getSurveyForms = this.getSurveyForms.bind(this);\n        this.onCreated = this.onCreated.bind(this);\n        this.onstart = this.onstart.bind(this);\n    }\n\n    onCreated() {\n        this.editArea = this.editorRef.current;\n        this.editArea.addEventListener(\"drop\", this.dropHandler);\n        this.editArea.addEventListener(\"dragover\", this.dragoverHandler);\n    }\n\n    dropHandler(e) {\n        e.preventDefault();\n        if (e.dataTransfer) {\n            this.editorRef.current.execCommand('mceInsertRawHTML', false, e.dataTransfer.getData('text'))\n        }\n        //this.editorRef.current.execCommand('mceInsertContent',false,'{' + keyLabel + '}');\n        //this.rteObj.executeCommand(\"insertHTML\", e.dataTransfer.getData(\"text\"));\n    }\n\n    dragoverHandler(e) {\n        e.preventDefault();\n    }\n\n    onstart(e) {\n        e.dataTransfer.setData(\"text\", '{' + e.target.innerText + '}');\n    }\n\n    componentDidMount() {\n        let self = this;\n        let jobTitleOptions = this.getJobTitles(self);\n        let departments = this.getDepartments(self);\n        this.getList();\n        this.getParamLetterHead();\n\n        if (self.props.history.location && self.props.history.location.state && self.props.history.location.state.selectedForm) {\n            let selectedForm = self.props.history.location.state.selectedForm;\n            let formType = selectedForm.formType;\n            selectedForm.formType = {value: formType.id, label: formType.category};\n            selectedForm.formContent = self.closeTags(selectedForm.formContent, \"img\");\n            selectedForm.formContent = self.closeTags(selectedForm.formContent, \"br\");\n            selectedForm.formContent = self.deleteBlanks(selectedForm.formContent);\n            self.setState({\n                newData: false,\n                selected: selectedForm,\n                formType: {value: formType.id, label: formType.category},\n                editorValue: selectedForm.formContent,\n                key: Math.random(),\n                selectedContractList: selectedForm.employmentContractList ? self.state.contractList.filter(contractObj => {\n                    return JSON.parse(selectedForm.employmentContractList).includes(contractObj.value)\n                }) : [],\n                selectedEmployeeStatusList: selectedForm.employeeStatusList ? self.state.statusList.filter(status => {\n                    return JSON.parse(selectedForm.employeeStatusList).includes(status.value)\n                }) : [],\n                selectedOrganizationalUnitList: selectedForm.organizationalUnitList ? departments.filter(department => {\n                    return JSON.parse(selectedForm.organizationalUnitList).includes(department.value)\n                }) : [],\n                selectedJobTitleList: selectedForm.jobTitleList ? jobTitleOptions.filter(job => {\n                    return JSON.parse(selectedForm.jobTitleList).includes(job.value)\n                }) : []\n            });\n        }\n        else{\n            this.readMailTemplate();\n        }\n    }\n    readMailTemplate = () => {\n        let self = this;\n        let params = {\n            url: `/signer/readFormMailTemplateInfo`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                if (response.data) {\n                    self.setState(prevState => ({\n                        selected: {\n                            ...prevState.selected,\n                            mimeBody: response.data\n                        }\n                    }));\n                }\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n    getDepartments(self) {\n        let organizationalUnitList = [];\n        let departments = [];\n        if (self.props.history.location && self.props.history.location.state && self.props.history.location.state.organizationalUnitList) {\n            organizationalUnitList = self.props.history.location.state.organizationalUnitList;\n            departments = self.props.history.location.state.departments;\n            this.setState({organizationalUnitList, departments});\n        }\n        return organizationalUnitList;\n    }\n\n    getParamLetterHead = () => {\n        let self = this;\n        let paramsLetterHead = {\n            url: '/companyinfo/readCompanyLetterHead',\n            method: \"get\"\n        };\n        requestK(paramsLetterHead)\n            .then(function (response) {\n                let letterList = [{value: \"-1\", label: \"ANTETSİZ\"}];\n                letterList = letterList.concat(response.data);\n                if (!(letterList && letterList.length > 0))\n                    return;\n                self.setState({letterHeadList: letterList});\n                let selectedForm = self.state.selected;\n                selectedForm.antet = self.state.letterHeadList.find(item => item.value === selectedForm.antetId);\n                self.setState({selected: selectedForm});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    getList = () => {\n        let self = this;\n        let params = {\n            url: `/formtemplate/getList`,\n            method: \"post\"\n        };\n        requestK(params)\n            .then(function (response) {\n                let {formTypeList, formParameters} = response.data;\n                self.setState({formTypeList, formParameters});\n                self.getSurveyForms();\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    getJobTitles = (self) => {\n        let jobTitleList = [];\n        let jobTitleOptions = [];\n        if (self.props.history.location && self.props.history.location.state && self.props.history.location.state.jobTitleList) {\n            jobTitleList = self.props.history.location.state.jobTitleList;\n            jobTitleOptions = self.props.history.location.state.jobTitleOptions;\n            this.setState({jobTitleList, jobTitleOptions});\n        }\n        return jobTitleOptions;\n    };\n\n    handleSurveyFormChange = selectedSurveyForm => {\n        this.setState({selectedSurveyForm, surveyFormParameters: []});\n        if (selectedSurveyForm.value !== 0) {\n            if (JSON.parse(selectedSurveyForm.surveyForm.jsonContent === \"\" ? \"{}\" : selectedSurveyForm.surveyForm.jsonContent)['schema']['properties'] !== undefined) {\n                let jsObj = JSON.parse(selectedSurveyForm.surveyForm.jsonContent === \"\" ? \"{}\" : selectedSurveyForm.surveyForm.jsonContent)['schema']['properties'];\n                let formSurveyParameters = Object.keys(jsObj).filter(function (x) {\n                    return !JSON.stringify(jsObj[x]).includes(\"data-url\");\n                });\n                formSurveyParameters.push(\"FormSiraNo\");\n                this.setState({surveyFormParameters: formSurveyParameters});\n            }\n        } else {\n            this.setState({surveyFormParameters: []});\n        }\n    };\n\n    getSurveyForms() {\n        let self = this;\n        let params = {\n            url: `/survey/getSurveyFormsByFormTemplateId`,\n            method: \"post\",\n            data: self.state.selected.id != null ? self.state.selected.id : -1\n        };\n        requestK(params)\n            .then(function (response) {\n                let optionItems = [];\n                let obj = {formTemplateId: 0, jsonContent: \"\"};\n                optionItems.push({value: 0, label: 'Seçiniz...', surveyForm: obj});\n                response.data.map((surveyForm) => {\n                    optionItems.push({value: surveyForm.id, label: surveyForm.name, surveyForm: surveyForm});\n                });\n                self.setState({surveyFormOptions: optionItems, surveyFormOptionsCompleted: true});\n                if (self.state.selected.id != null) {\n                    let item = optionItems.find(item => item.surveyForm.formTemplate?.id === self.state.selected.id);\n                    if (item !== undefined && self.state.selected.id !== 0) {\n                        self.setState({selectedSurveyForm: item});\n                        if (JSON.parse(self.state.selectedSurveyForm.surveyForm.jsonContent === \"\" ? \"{}\" : self.state.selectedSurveyForm.surveyForm.jsonContent)['schema']['properties'] !== undefined) {\n                            let jsObj = JSON.parse(self.state.selectedSurveyForm.surveyForm.jsonContent === \"\" ? \"{}\" : self.state.selectedSurveyForm.surveyForm.jsonContent)['schema']['properties'];\n                            let formSurveyParameters = Object.keys(jsObj).filter(function (x) {\n                                return !JSON.stringify(jsObj[x]).includes(\"data-url\");\n                            });\n                            formSurveyParameters.push(\"FormSiraNo\");\n                            self.setState({surveyFormParameters: formSurveyParameters});\n                        }\n                    }\n                } else if (self.state.selected.id === 0) {\n                    self.setState({surveyFormParameters: [], surveyFormOptionsCompleted: true});\n                }\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    }\n\n    saveSurveyForms() {\n        let self = this;\n        let options = {...self.state.surveyFormOptions};\n        let param = [];\n        let option;\n        let originalContents = {};\n        for (option in options) {\n            if (options[option].value === self.state.selectedSurveyForm.value) {\n                options[option].surveyForm.formTemplate = this.state.selected;\n            } else {\n                options[option].surveyForm.formTemplate = null\n            }\n            if (options[option].value !== 0) {\n                param.push(options[option].surveyForm);\n            }\n        }\n        let encodeToBase64InChunks = (input) => {\n            let chunkSize = 1024;\n            let binaryString = \"\";\n            for (let i = 0; i < input.length; i += chunkSize) {\n                binaryString += String.fromCharCode.apply(null, input.slice(i, i + chunkSize));\n            }\n            return btoa(binaryString);\n        };\n\n        param.forEach(item => {\n            if (item.jsonContent) {\n                originalContents[item.id] = { jsonContent: item.jsonContent };\n\n                let encoded = new TextEncoder().encode(item.jsonContent);\n                item.jsonContent = encodeToBase64InChunks(encoded);\n            }\n            if (item.bulkJson) {\n                originalContents[item.id] = { ...originalContents[item.id], bulkJson: item.bulkJson };\n\n                let encoded = new TextEncoder().encode(item.bulkJson);\n                item.bulkJson = encodeToBase64InChunks(encoded);\n            }\n            if (item.formTemplate && item.formTemplate.formContent) {\n                originalContents[item.id] = { ...originalContents[item.id], formContent: item.formTemplate.formContent };\n\n                let encoded = new TextEncoder().encode(item.formTemplate.formContent);\n                item.formTemplate.formContent = encodeToBase64InChunks(encoded);\n            }\n        });\n\n        let params = {\n            url: `/survey/saveSurveyForms`,\n            method: \"post\",\n            data: param\n        };\n        self.setState({loading: true, showLoading: true});\n        requestK(params)\n            .then(function () {\n                self.setState({\n                    loading: false,\n                    showLoading: false\n                });\n                Swal({\n                    title: 'Başarılı',\n                    showCancelButton: true,\n                    html: \"Form Şablonu başarılı şekilde kaydedildi\" +\n                        '</br></br><span style=\"color:red;font-size:20px\">*</span>Yeni bir form türü oluşturduysanız \"Onay Akışı\" sayfasına giderek formun onay akışını ayarlayabilirsiniz.',\n                    type: 'success',\n                    cancelButtonText: \"Kapat\",\n                    confirmButtonText: 'Onay Akışına Git',\n                }).then((result) => {\n                    //self.fetchData();\n                    if (result.dismiss === 'cancel' || result.dismiss === 'overlay') {\n                        self.props.history.push({pathname: `/${self.props.peykName}/formtemplate`});\n                    } else {\n                        self.props.history.push({pathname: `/${self.props.peykName}/approval-flow`});\n                        document.getElementById('formtemplateNavigator').classList.remove('active');\n                        document.getElementById('approwal_flowNavigator').classList.add('active');\n                    }\n                });\n                //self.props.history.push({pathname: `/${self.props.peykName}/formtemplate`});\n            }).catch(function (error) {\n            showAxiosError(error);\n            self.setState({loading: false, showLoading: false});\n        }).finally(function () {\n            param.forEach(item => {\n                if (originalContents[item.id]) {\n                    if (originalContents[item.id].jsonContent) {\n                        item.jsonContent = originalContents[item.id].jsonContent;\n                    }\n                    if (originalContents[item.id].bulkJson) {\n                        item.bulkJson = originalContents[item.id].bulkJson;\n                    }\n                    if (originalContents[item.id].formContent) {\n                        item.formTemplate.formContent = originalContents[item.id].formContent;\n                    }\n                }\n            });\n        });\n    }\n\n    removeSurveyForm = () => {\n        let self = this;\n        let options = {...self.state.surveyFormOptions};\n        let param = [];\n        let option;\n        let originalContents = {};\n        for (option in options) {\n            options[option].surveyForm.formTemplate = null;\n            if (options[option].value !== 0) {\n                param.push(options[option].surveyForm);\n            }\n        }\n        let encodeToBase64InChunks = (input) => {\n            let chunkSize = 1024;\n            let binaryString = \"\";\n            for (let i = 0; i < input.length; i += chunkSize) {\n                binaryString += String.fromCharCode.apply(null, input.slice(i, i + chunkSize));\n            }\n            return btoa(binaryString);\n        };\n\n        param.forEach(item => {\n            if (item.jsonContent) {\n                originalContents[item.id] = { jsonContent: item.jsonContent };\n\n                let encoded = new TextEncoder().encode(item.jsonContent);\n                item.jsonContent = encodeToBase64InChunks(encoded);\n            }\n            if (item.bulkJson) {\n                originalContents[item.id] = { ...originalContents[item.id], bulkJson: item.bulkJson };\n\n                let encoded = new TextEncoder().encode(item.bulkJson);\n                item.bulkJson = encodeToBase64InChunks(encoded);\n            }\n            if (item.formTemplate && item.formTemplate.formContent) {\n                originalContents[item.id] = { ...originalContents[item.id], formContent: item.formTemplate.formContent };\n\n                let encoded = new TextEncoder().encode(item.formTemplate.formContent);\n                item.formTemplate.formContent = encodeToBase64InChunks(encoded);\n            }\n        });\n        let params = {\n            url: `/survey/saveSurveyForms`,\n            method: \"post\",\n            data: param\n        };\n        requestK(params)\n            .then(function () {         })\n            .catch(function (error) {\n                showAxiosError(error);\n            })\n            .finally(function () {\n                param.forEach(item => {\n                    if (originalContents[item.id]) {\n                        if (originalContents[item.id].jsonContent) {\n                            item.jsonContent = originalContents[item.id].jsonContent;\n                        }\n                        if (originalContents[item.id].bulkJson) {\n                            item.bulkJson = originalContents[item.id].bulkJson;\n                        }\n                        if (originalContents[item.id].formContent) {\n                            item.formTemplate.formContent = originalContents[item.id].formContent;\n                        }\n                    }\n                });\n            });\n    };\n\n    generateFormType() {\n        let formType = this.state.formType;\n        if (formType.label.toString().toLowerCase() === \"şablonsuz\" || formType.label.toString().toLowerCase() === \"şablonsuz taslak\") {\n            Alert.error(\"Form Türü olarak 'Şablonsuz veya Şablonsuz Taslak' seçilemez. Lütfen geçerli bir seçim yapınız.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        } else {\n            let selected = this.state.selected;\n            selected.formType = {id: formType.value ? parseInt(formType.value) : null, category: formType.label};\n            this.setState({selected});\n        }\n    }\n\n    showEmployeeParameters = () => {\n        this.setState({\n            employeeParameters: !this.state.employeeParameters,\n        });\n    };\n\n    showCreatorParameters = () => {\n        this.setState({\n            creatorParameters: !this.state.creatorParameters,\n        });\n    };\n\n    showConstantParameters = () => {\n        this.setState({\n            constantParameters: !this.state.constantParameters,\n        });\n    };\n\n    showChangeableParameters = () => {\n        this.setState({\n            changeableParameters: !this.state.changeableParameters,\n        });\n    };\n\n    saveClicked() {\n        let self = this;\n        this.generateFormType();\n        let formTemplate = Object.assign({}, this.state.selected);\n        formTemplate.antetId = self.state.selected.antet ? self.state.selected.antet.value : -1;\n        if (!!self.state.selected.autosend) {\n            formTemplate.mimeBody = '-';\n        }\n\n        if (!!self.state.selected.autosend) {\n            formTemplate = this.setEmploymentContractList(formTemplate);\n            formTemplate = this.setEmploymentStatusList(formTemplate);\n            formTemplate = this.setJobTitlesList(formTemplate);\n        }\n\n        let result = isValidFormTemplate(formTemplate);\n        let valid = result.valid;\n\n        let errorData = self.state.selected.formContent.includes('{Veri_');\n        let errorName = self.state.selected.formContent.includes('{AdSoyad_');\n        let errorDate = self.state.selected.formContent.includes('{Tarih_');\n        let errorDay = self.state.selected.formContent.includes('{GününTarihi}');\n        if ((!!self.state.selected.autosend || !!self.state.selected.kvkkDocument) && (errorData || errorName || errorDate || errorDay)) {\n            Alert.error(\"Otomatik//kvkk formlarda form şablonu değişken veri içeremez.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        } else if (!!self.state.selected.autosend && self.state.selectedSurveyForm !== undefined && self.state.selectedSurveyForm.value !== 0) {\n            Alert.error(\"Talep formlarında otomatik form gönderim türü seçilemez.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        } else if (!!self.state.selected.autosend) {\n            if (formTemplate.employeeStatusList === null || formTemplate.employeeStatusList === undefined || formTemplate.employeeStatusList === \"[]\") {\n                Alert.error(\"Çalışan durumları seçimi yapılmadı!\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n            } else {\n                self.setState({\n                    alert: (\n                        <SweetAlert showCancel warning\n                                    confirmBtnText=\"Kaydet\"\n                                    cancelBtnText=\"İptal\"\n                                    confirmBtnBsStyle=\"success\"\n                                    cancelBtnBsStyle=\"default\"\n                                    title=\"BİLGİ\"\n                                    onConfirm={() => self.save(formTemplate, valid, result)}\n                                    onCancel={() => {\n                                        self.setState({alert: null});\n                                        Alert.info(\"İşlem iptal edildi.\", {\n                                            position: 'top-right',\n                                            effect: 'stackslide',\n                                            timeout: 5000\n                                        });\n                                    }}>\n                            <div>\n                                <label style={{fontSize: '20px', margin: '-10px 10px 5px 10px'}}>\n                                    Yaptığınız seçimlere göre otomatik form gönderimi yapılacaktır.\n                                </label>\n                            </div>\n                        </SweetAlert>\n                    )\n                });\n            }\n        } else {\n            self.save(formTemplate, valid, result);\n        }\n    }\n\n\n    save = (formTemplate, valid, result) => {\n        if (valid) {\n            let self = this;\n            let originalContent;\n            if (formTemplate.formContent) {\n                originalContent = formTemplate.formContent;\n                let encoded = new TextEncoder().encode(formTemplate.formContent);\n                let binaryString = \"\";\n                for (let i = 0; i < encoded.length; i += 1024) {\n                    binaryString += String.fromCharCode(...encoded.slice(i, i + 1024));\n                }\n                formTemplate.formContent = btoa(binaryString);\n            }\n            formTemplate = self.setDeptListToString(formTemplate);\n            let params = {\n                url: `/formtemplate/saveFormTemplate`,\n                method: \"post\",\n                data: formTemplate\n            };\n            self.setState({loading: true, showLoading: true, alert: null});\n            requestK(params)\n                .then(function (response) {\n                    let selected = response.data;\n                    selected.formType = {\n                        value: selected.formType ? selected.formType.id : \"\",\n                        label: selected.formType ? selected.formType.category : \"\"\n                    };\n                    self.setState({\n                        selected: selected\n                    });\n                    if (!self.state.selected.autosend && self.state.selectedSurveyForm !== undefined && self.state.selectedSurveyForm.value !== 0) {\n                        self.saveSurveyForms();\n                    } else {\n                        self.removeSurveyForm();\n                        self.setState({\n                            loading: false,\n                            showLoading: false,\n                            saveBtnLoading: false\n                        });\n                        Swal({\n                            title: 'Başarılı',\n                            showCancelButton: true,\n                            html: \"Form Şablonu başarılı şekilde kaydedildi\" +\n                                '</br></br><span style=\"color:red;font-size:20px\">*</span>Yeni bir form türü oluşturduysanız \"Onay Akışı\" sayfasına giderek formun onay akışını ayarlayabilirsiniz.',\n                            type: 'success',\n                            cancelButtonText: \"Kapat\",\n                            confirmButtonText: 'Onay Akışına Git',\n                        }).then((result) => {\n                            //self.fetchData();\n                            if (result.dismiss === 'cancel' || result.dismiss === 'overlay') {\n                                self.props.history.push({pathname: `/${self.props.peykName}/formtemplate`});\n                            } else {\n                                self.props.history.push({pathname: `/${self.props.peykName}/approval-flow`});\n                                document.getElementById('formtemplateNavigator').classList.remove('active');\n                                document.getElementById('approwal_flowNavigator').classList.add('active');\n                            }\n                        });\n                    }\n                }).catch(function (error) {\n                showAxiosError(error);\n                self.setState({loading: false, showLoading: false, saveBtnLoading: false});\n            }).finally(function () {\n                if (originalContent !== undefined) {\n                    formTemplate.formContent = originalContent;\n                }\n            });\n        } else {\n            Alert.error(result.errorMessage, {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 8000\n            });\n        }\n    };\n\n    setDeptListToString = (formTemplate) => {\n        let selectAllDepartment = false;\n        let departmentList = [];\n        let departmentIds = [];\n        this.state.selectedOrganizationalUnitList.map(value => {\n            departmentIds.push(value.value);\n        });\n\n        departmentIds.map(d => {\n            if (d === -1)\n                selectAllDepartment = true;\n        });\n\n        if (selectAllDepartment) {\n            this.state.departments.map(departman => {\n                departmentList.push(departman.id);\n            });\n        } else {\n            this.state.selectedOrganizationalUnitList.map(organization => {\n                departmentList.push(organization.value);\n            })\n        }\n\n        formTemplate.organizationalUnitList = departmentList;\n        try {\n            let deptList = formTemplate.organizationalUnitList;\n            if (!!deptList && deptList.length) {\n                formTemplate.organizationalUnitList = JSON.stringify(deptList);\n                return formTemplate;\n            } else {\n                formTemplate.organizationalUnitList = null;\n                return formTemplate;\n            }\n        } catch (err) {\n            formTemplate.organizationalUnitList = null;\n            return formTemplate;\n        }\n    };\n\n    setEmploymentContractList = (formTemplate) => {\n        let list = this.state.selectedContractList.map(contract => contract.value);\n        try {\n            if (!!list && list.length) {\n                formTemplate.employmentContractList = JSON.stringify(list);\n                return formTemplate;\n            } else {\n                formTemplate.employmentContractList = null;\n                return formTemplate;\n            }\n        } catch (err) {\n            formTemplate.employmentContractList = null;\n            return formTemplate;\n        }\n    }\n    setEmploymentStatusList = (formTemplate) => {\n        let list = this.state.selectedEmployeeStatusList.map(status => status.value);\n        try {\n            if (!!list && list.length) {\n                formTemplate.employeeStatusList = JSON.stringify(list);\n                return formTemplate;\n            } else {\n                formTemplate.employeeStatusList = null;\n                return formTemplate;\n            }\n        } catch (err) {\n            formTemplate.employeeStatusList = null;\n            return formTemplate;\n        }\n    }\n\n    setJobTitlesList = (formTemplate) => {\n        let list = this.state.selectedJobTitleList.map(title => title.value);\n        try {\n            if (!!list && list.length) {\n                formTemplate.jobTitleList = JSON.stringify(list);\n                return formTemplate;\n            } else {\n                formTemplate.jobTitleList = null;\n                return formTemplate;\n            }\n        } catch (err) {\n            formTemplate.jobTitleList = null;\n            return formTemplate;\n        }\n    }\n\n    addAttachment() {\n        this.setState({\n            showUploadModal: true,\n            formTemplateId: (this.state.selected && this.state.selected.id) ? this.state.selected.id : null\n        });\n    }\n\n    previewContent() {\n        let self = this;\n        let formTemplate = Object.assign({}, this.state.selected);\n        formTemplate.antetId = self.state.selected.antet ? self.state.selected.antet.value : -1;\n        let originalContent;\n        if (formTemplate.formContent) {\n            originalContent = formTemplate.formContent;\n            let encoded = new TextEncoder().encode(formTemplate.formContent);\n            let chunkSize = 1024;\n            let binaryString = \"\";\n            for (let i = 0; i < encoded.length; i += chunkSize) {\n                binaryString += String.fromCharCode.apply(null, encoded.slice(i, i + chunkSize));\n            }\n            formTemplate.formContent = btoa(binaryString);\n        }\n        let valid = formTemplate.formContent;\n        if (valid) {\n            let self = this;\n            let params = {\n                url: `/formtemplate/previewContent`,\n                responseType: 'arraybuffer',\n                method: \"post\",\n                data: formTemplate\n            };\n            self.setState({mediaModal: true});\n            requestK(params)\n                .then(function (response) {\n                    let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                    let base64Data = \"\";\n                    if (blob !== undefined) {\n                        let reader = new FileReader();\n                        reader.readAsDataURL(blob);\n                        reader.onloadend = function () {\n                            base64Data = reader.result;\n                            self.setState({url: base64Data});\n                        }\n                    }\n                }).catch(function (error) {\n                showAxiosError(error);\n                self.setState({mediaModal: false, title: null});\n            }).finally(function () {\n                if (originalContent !== undefined) {\n                    formTemplate.formContent = originalContent;\n                }\n            });\n        } else {\n            Alert.error(\"Form Şablon İçeriği boş bırakılamaz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 8000\n            });\n        }\n    }\n\n    setMediaViewer() {\n        this.setState({url: null, mediaModal: false});\n    }\n\n    addFormParameterKeyToEditor = (e, keyLabel) => {\n        this.editorRef.current.execCommand('mceInsertRawHTML', false, '{' + keyLabel + '}');\n    };\n\n    editClassName(name) {\n        let valid = this.state.valid[name];\n        if (typeof valid !== \"boolean\")\n            return undefined;\n        else if (!valid)\n            return \"has-danger\";\n        else\n            return \"has-success\";\n    }\n\n    evaluateExternalInputName = (keyLabel) => {\n        let externalInput = this.state.externalInput;\n        let index = externalInput[keyLabel];\n        this.setState({index});\n        let result = keyLabel + \"_\" + index;\n        index++;\n        externalInput[keyLabel] = index;\n        this.setState({externalInput});\n        return result;\n    };\n\n    increaseInput(keyLabel) {\n        let externalInput = this.state.externalInput;\n        let index = externalInput[keyLabel];\n        index++;\n        externalInput[keyLabel] = index;\n        this.setState({externalInput});\n    }\n\n    decreaseInput(keyLabel) {\n        let externalInput = this.state.externalInput;\n        let index = externalInput[keyLabel];\n        if (index > 1) {\n            index--;\n        }\n        externalInput[keyLabel] = index;\n        this.setState({externalInput});\n    }\n\n    onChange(name, value) {\n        let selected = this.state.selected;\n        if (value && name === \"withoutSign\") {\n            value = 1;\n            selected[\"kvkkDocument\"] = 0;\n            selected[\"autosend\"] = 0;\n        }\n        if (value && name === \"isAnswerable\")\n            value = 1;\n        if (!value && name === \"isAnswerable\")\n            value = 0;\n        if (value && name === \"isDecline\")\n            value = 1;\n        if (!value && name === \"isDecline\")\n            value = 0;\n        if (value && name === \"priority\")\n            value = 1;\n        if (!value && name === \"priority\")\n            value = 0;\n        if (value && name === \"autosend\") {\n            selected['priority'] = 1;\n            selected[\"withoutSign\"] = 0;\n            this.setState({\n                alert: (\n                    <SweetAlertExt confirmBtnText=\"Tamam\"\n                                   cancelBtnText=\"Hayır\"\n                                   confirmBtnBsStyle=\"info\"\n                                   title=\"BİLGİ\"\n                                   loading={this.state.loading}\n                                   onConfirm={() => this.setState({alert: null})}\n                    >\n                        {\"Otomatik Form Gönderimi duyuru amacı ile kullanlmaktadır. İletilen belgede e-imza ve zaman damgası bilgileri yer almayacaktır.\"}\n                    </SweetAlertExt>\n                ),\n            });\n            value = 1;\n        }\n        if (!value && name === \"autosend\") {\n            value = 0;\n            selected['priority'] = null;\n        }\n        if (value && name === \"kvkkDocument\") {\n            value = 1;\n            selected[\"priority\"] = 0;\n            selected[\"autosend\"] = 0;\n            selected[\"withoutSign\"] = 0;\n        }\n        if (!value && name === \"kvkkDocument\") {\n            value = 0;\n        }\n        if (name === \"formType\") {\n            if (value.label && value.label.length === 1) {\n                value.label = value.label.split(\" \").join(\"\");\n            } else if (value.label && value.label.length > 1) {\n                for (let i = 0; i < value.label.length; i++) {\n                    if (value.label[0] === \" \") {\n                        value.label = value.label.substring(1, value.label.length);\n                    }\n                }\n                let space = true;\n                let labelLength = value.label.length;\n                for (let i = 0; i < labelLength; i++) {\n                    let islem = labelLength - i;\n                    if ((value.label[islem] === \" \" || value.label[islem] === undefined) && space) {\n                        value.label = value.label.substring(0, islem);\n                    } else {\n                        space = false;\n                    }\n                }\n            }\n        }\n        if (name === \"formName\" || name === \"mimeBody\") {\n            if (value && value.length === 1) {\n                value = value.split(\" \").join(\"\");\n                selected[name] = value;\n                this.setState({selected});\n            } else {\n                selected[name] = value;\n                this.setState({selected});\n            }\n        } else {\n            selected[name] = value;\n            this.setState({selected});\n        }\n    }\n\n    onChangeOnFormType(formType) {\n        this.setState({formType});\n        this.onChange(\"formType\", formType)\n    }\n\n    renderDynamicButton(keyLabel) {\n        return <Row>\n            <button type=\"button\" className=\"Btn\" title={keyLabel}\n                    id=\"drag1\" draggable=\"true\" onDragStart={(e) => this.onstart(e)}\n                    style={{\n                        margin: '0px 0px 2px 6px', background: 'rgb(211, 217, 218)', width: '87%',\n                        border: '1px solid rgb(182,185,185)', color: 'black', fontWeight: '600',\n                        opacity: '0.8', letterSpacing: '0.5px'\n                    }}\n                    onClick={(e) => this.addFormParameterKeyToEditor(e, keyLabel)}>\n                {keyLabel}\n            </button>\n        </Row>\n    }\n\n    renderExternalButton(keyLabel) {\n        if (this.state.changeableParameters) {\n            return <Row>\n                <button type=\"button\" className=\"Btn \"\n                        id=\"drag1\" draggable=\"true\" onDragStart={(e) => this.onstart(e)}\n                        style={{\n                            margin: '0px 0px 2px 15px', background: 'rgb(226, 230, 230)', width: '0px', minWidth: '0px',\n                            border: '1px solid rgb(147, 154, 156)', color: 'black', fontWeight: '600', opacity: '0.8'\n                        }}\n                        onClick={() => this.decreaseInput(keyLabel)}>\n                    <i className=\"fa fa-caret-left\" style={{fontSize: '20px', margin: '-4px'}}/>\n                </button>\n                <button type=\"button\" className=\"Btn\"\n                        id=\"drag1\" draggable=\"true\" onDragStart={(e) => this.onstart(e)}\n                        style={{\n                            margin: '0px 0px 2px 1px', background: 'rgb(226, 230, 230)', width: '100px',\n                            border: '1px solid rgb(147, 154, 156)', color: 'black', fontWeight: '600', opacity: '0.8'\n                        }}\n                        onClick={(e) => (keyLabel === \"GününTarihi\") ? this.addFormParameterKeyToEditor(e, keyLabel) : this.addFormParameterKeyToEditor(e, this.evaluateExternalInputName(keyLabel))}>\n                    {keyLabel + ((keyLabel !== \"GününTarihi\") ? \"_\" : \"\") + this.state.externalInput[keyLabel]}\n                </button>\n                <button type=\"button\" className=\"Btn\"\n                        id=\"drag1\" draggable=\"true\" onDragStart={(e) => this.onstart(e)}\n                        style={{\n                            margin: '0px 0px 2px 1px', background: 'rgb(226, 230, 230)', width: '0px', minWidth: '0px',\n                            border: '1px solid rgb(147, 154, 156)', color: 'black', fontWeight: '600', opacity: '0.8'\n                        }}\n                        onClick={() => (keyLabel !== \"GününTarihi\") ? this.increaseInput(keyLabel) : ''}>\n                    <i className=\"fa fa-caret-right\" style={{fontSize: '20px', margin: '-4px'}}/>\n                </button>\n            </Row>\n        }\n    }\n\n    deleteBlanks = (content) => {\n        if (content === null)\n            return;\n        return content.replace(/  +/g, (match) => {\n            return \" \" + Array(match.length).join('&nbsp;');\n        });\n    }\n\n\n    onChangeContent() {\n        let selected = this.state.selected;\n\n        if (this.editorRef.current) {\n            let content;\n            content = this.editorRef.current.getContent();\n            selected.formContent = content;\n            this.setState({\n                selected\n            });\n\n        }\n    }\n\n    addStyleForLongWord = (htmlContent) => {\n        return htmlContent.toString().replaceAll(\"<p>\", \"<p style=\\\"display:block; width:%100; word-wrap:break-word;\\\">\");\n    };\n\n    closeTags = (content, tag) => {\n        if (!content)\n            return content;\n        let index = 0;\n        while (index >= 0 && index < content.length) {\n            /**\n             * 1. \"<tag\" index\n             * 2. index'ten sonra \">\" ilkini ele al\n             * 3. \">\" index bundan bir önceki char (index-1) \"/\"\n             * YOKSA: \"/\" ekle\n             */\n            index = content.indexOf(\"<\" + tag, index + 1);\n            if (index === -1) {\n                return content;\n            }\n            let closeIndex = content.indexOf(\">\", index + 1);\n            if (content[closeIndex - 1] !== \"/\") {\n                let firstPart = content.substring(0, closeIndex);\n                let secondPart = content.substring(closeIndex);\n                content = firstPart + \"/\" + secondPart;\n            }\n        }\n        return content;\n    };\n\n\n    renderEditorComponent() {\n        const text = \"Saat,Giriş Saati,Tarih,Çıkış Tarihi\";\n        const formattedText = text.split(\",\").map((item, index) => (\n            <React.Fragment key={index}>\n                {\"{\"}{item.trim()}{ \"}\"}\n                {index !== text.split(\",\").length - 1 && \", \"}\n            </React.Fragment>\n        ));\n\n        let internalParameterList = this.state.formParameters ? Object.keys(this.state.formParameters).sort() : [];\n        const apiKey = process.env.REACT_APP_API_KEY;\n\n        return <div key={this.state.key}>\n            <CardBody>\n                <div className=\"FormRenk\" id='containerFormTemplate'\n                     style={{\n                         marginBottom: '0px',\n                         left: '50px',\n                         paddingBottom: '20px',\n                         paddingTop: '20px',\n                         zIndex: '999'\n                     }}>\n                    <Form>\n                        <Row>\n                            <Col sm={7}>\n                                <FormGroup row className={this.editClassName(\"formType\")}>\n                                    <Label sm={2}>Form Türü</Label>\n                                    <Col sm={10}>\n                                        <AutoCompleteList name={\"Form Türü\"}\n                                                          useUpperCase={true} onlyLabel={false} allowNew={true}\n                                                          list={this.state.formTypeList}\n                                                          value={this.state.formType}\n                                                          onChange={e => this.onChangeOnFormType(e)}\n                                                          updateList={e => this.setState({formTypeList: e})}\n                                                          placeholder={\"Form Türü Seçiniz veya Form Türü Adı Yazınız...\"}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row className={this.editClassName(\"formName\")}>\n                                    <Label sm={2}>Form Adı</Label>\n                                    <Col sm={10}>\n                                        <Input type=\"text\" name=\"formName\" value={this.state.selected.formName}\n                                               onChange={(e) => this.onChange(\"formName\", e.target.value)}/>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row className={this.editClassName(\"mimeBody\")}>\n                                    <Label sm={2}>E-posta İleti İçeriği</Label>\n                                    <Col sm={10}>\n                                        {!this.state.selected.autosend &&\n                                            <Input type=\"textarea\" name=\"mimeBody\" rows={5}\n                                                   value={this.state.selected.mimeBody}\n                                                   style={{\n                                                       height: '200px',\n                                                       border: '1px solid #E3E3E3',\n                                                       marginTop: '2px',\n                                                       padding: '3px 3px'\n                                                   }}\n                                                   onChange={(e) => this.onChange(\"mimeBody\", e.target.value)}/>}\n                                    </Col>\n                                </FormGroup>\n                            </Col>\n                            <Col sm={4} style={{ marginLeft: '50px' }}>\n                                {!this.state.selected.autosend && !this.state.selected.kvkkDocument &&\n                                    <FormGroup row className={this.editClassName(\"isAnswerable\")}>\n                                        {!this.state.selected.autosend && <Label sm={4}>Talep/Özlük Formu</Label>}\n                                        <Col sm={8}>\n                                            {!this.state.selected.autosend && !!this.state.surveyFormOptionsCompleted &&\n                                                <Select\n                                                    value={this.state.selectedSurveyForm}\n                                                    clearable={false}\n                                                    noResultsText=\"Tanımlanmış Talep Form bulunamadı\"\n                                                    clearValueText=\"Temizle\"\n                                                    placeholder=\"Seçiniz...\"\n                                                    onChange={this.handleSurveyFormChange}\n                                                    options={this.state.surveyFormOptions}\n                                                />}\n                                            {!this.state.selected.autosend && !this.state.surveyFormOptionsCompleted &&\n                                                <i className=\"fa fa-spinner fa-spin\"/>}\n                                        </Col>\n                                    </FormGroup>}\n                                <FormGroup row className={this.editClassName(\"isWatermarked\")}>\n                                    <Label sm={4}>Antet </Label>\n                                    <Col sm={8}>\n                                        <AutoCompleteList name={\"Antet\"}\n                                                          useUpperCase={true} onlyLabel={false} allowNew={true}\n                                                          list={this.state.letterHeadList}\n                                                          value={this.state.selected.antet}\n                                                          onChange={(e) => this.onChange(\"antet\", e)}\n                                                          updateList={e => this.setState({letterHeadList: e})}\n                                                          placeholder={\"Antet Seçiniz ...\"}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row className={this.editClassName(\"isAnswerable\")}>\n                                    <Label sm={7}>Cevap Zorunlu</Label>\n                                    <Col sm={1}>\n                                        <Input type=\"checkbox\" name=\"isAnswerable\"\n                                               style={{marginLeft: '10px', marginTop: '10px'}}\n                                               checked={this.state.selected.isAnswerable || ''}\n                                               disabled={this.state.selected.kvkkDocument}\n                                               onChange={(e) => this.onChange(\"isAnswerable\", e.target.checked)}/>\n                                    </Col>\n                                    <Label sm={7}>Öncelikli Form</Label>\n                                    <Col sm={1}>\n                                        <Input type=\"checkbox\" name=\"priority\"\n                                               style={{marginLeft: '10px', marginTop: '10px'}}\n                                               checked={this.state.selected.priority}\n                                               disabled={this.state.selected.kvkkDocument}\n                                               onChange={(e) => this.onChange(\"priority\", e.target.checked)}/>\n                                    </Col>\n                                    <Label sm={7}>Otomatik Gönderilecek Form</Label>\n                                    <Col sm={1}>\n                                        <Input type=\"checkbox\" name=\"autosend\"\n                                               style={{marginLeft: '10px', marginTop: '10px'}}\n                                               checked={this.state.selected.autosend || ''}\n                                               disabled={this.state.selected.kvkkDocument || this.state.selected.withoutSign}\n                                               onChange={(e) => this.onChange(\"autosend\", e.target.checked)}\n                                        />\n                                    </Col>\n\n                                    <Label sm={7}>Şifre Belirleme İle Onaylanacak Form</Label>\n                                    <Col sm={1}>\n                                        <Input type=\"checkbox\" name=\"kvkkDocument\"\n                                               style={{marginLeft: '10px', marginTop: '10px'}}\n                                               checked={this.state.selected.kvkkDocument || ''}\n                                               disabled={this.state.selected.withoutSign}\n                                               onChange={(e) => this.onChange(\"kvkkDocument\", e.target.checked)}\n                                        />\n                                    </Col>\n                                    <Label sm={7}>Reddedilebilir</Label>\n                                    <Col sm={1}>\n                                        <Input type=\"checkbox\" name=\"decline\"\n                                               style={{marginLeft: '10px', marginTop: '10px'}}\n                                               checked={this.state.selected.isDecline|| ''}\n                                               disabled={this.state.selected.kvkkDocument}\n                                               onChange={(e) => this.onChange(\"isDecline\", e.target.checked)}/>\n                                    </Col>\n                                    <Label sm={7}>İmzasız Gönderilecek Form</Label>\n                                    <Col sm={1}>\n                                        <Input type=\"checkbox\" name=\"withoutSign\"\n                                               style={{marginLeft: '10px', marginTop: '10px'}}\n                                               checked={this.state.selected.withoutSign || ''}\n                                               disabled={this.state.selected.autosend || this.state.selected.kvkkDocument}\n                                               onChange={(e) => this.onChange(\"withoutSign\", e.target.checked)}\n                                        />\n                                    </Col>\n                                </FormGroup>\n                                {!!this.state.selected.autosend &&\n                                    <FormGroup row className={this.editClassName(\"contractTypeList\")}>\n                                        <Label sm={4}>İş Sözleşmesi Türleri</Label>\n                                        <Col sm={8}>\n                                            <Select\n                                                className=\"select-control\"\n                                                placeholder=\"İş Sözleşmesi Seçiniz..\"\n                                                value={this.state.selectedContractList}\n                                                maxMenuHeight={100}\n                                                name=\"employmentContractList\"\n                                                id=\"employmentContractList\"\n                                                isMulti\n                                                onChange={(e) => this.setEmpContractList(e)}\n                                                options={this.state.contractList}\n                                            />\n                                        </Col>\n                                    </FormGroup>}\n                                {!!this.state.selected.autosend &&\n                                    <FormGroup row className={this.editClassName(\"employeeStatusList\")}>\n                                        <Label sm={4}>Çalışan Durumları *</Label>\n                                        <Col sm={8}>\n                                            <Select\n                                                className=\"select-control\"\n                                                placeholder=\"Çalışan Durumu Seçiniz..\"\n                                                value={this.state.selectedEmployeeStatusList}\n                                                maxMenuHeight={100}\n                                                name=\"employeeStatusList\"\n                                                id=\"employeeStatusList\"\n                                                isMulti\n                                                onChange={(e) => this.setEmployeeStatusList(e)}\n                                                options={this.state.statusList}\n                                            />\n                                        </Col>\n                                    </FormGroup>}\n                                {!!this.state.selected.autosend &&\n                                    <FormGroup row className={this.editClassName(\"organizationalUnitList\")}>\n                                        <Label sm={4}>Departmanlar</Label>\n                                        <Col sm={8}>\n                                            <Select\n                                                placeholder=\"Departman Seçiniz...\"\n                                                className=\"select-control\"\n                                                maxMenuHeight={100}\n                                                name=\"organizationalUnitList\"\n                                                id=\"organizationalUnitList\"\n                                                value={this.state.selectedOrganizationalUnitList}\n                                                isMulti\n                                                onChange={(e) => this.setOrganizationUnitList(e)}\n                                                options={this.state.organizationalUnitList}\n                                            />\n                                        </Col>\n                                    </FormGroup>}\n                                {!!this.state.selected.autosend &&\n                                    <FormGroup row className={this.editClassName(\"jobTitleList\")}>\n                                        <Label sm={4}>Çalışan Görevleri</Label>\n                                        <Col sm={8}>\n                                            <Select\n                                                placeholder=\"Görev Seçiniz...\"\n                                                className=\"select-control\"\n                                                maxMenuHeight={100}\n                                                name=\"jobTitleList\"\n                                                id=\"jobTitleList\"\n                                                value={this.state.selectedJobTitleList}\n                                                isMulti\n                                                onChange={(e) => this.setJobTitleList(e)}\n                                                options={this.state.jobTitleOptions}\n                                            />\n                                        </Col>\n                                    </FormGroup>}\n                            </Col>\n                        </Row>\n                    </Form>\n                </div>\n            </CardBody>\n            <CardBody style={{marginTop: '0px'}}>\n                <Row>\n                    <Col sm={10}>\n                        <div className=\"FormRenk\" style={{paddingLeft: 'inherit', paddingTop: '25px'}}>\n                            <Label sm={2} style={{paddingBottom: \"15px\"}}>Form İçeriği</Label>\n                            <Col id='braftBackground'>\n                                <Editor\n                                    apiKey={apiKey}\n                                    onInit={(evt, editor) => this.editorRef.current = editor}\n                                    initialValue={this.state.editorValue}\n                                    onChange={() => this.onChangeContent()}\n                                    onDrop={(e) => this.dropHandler(e)}\n                                    onDragOver={(e) => this.dragoverHandler(e)}\n                                    init={{\n                                        placeholder: \"Bir şeyler yazın...\",\n                                        branding: false,\n                                        themes: \"modern\",\n                                        language_url: process.env.PUBLIC_URL + '/langs/tr_TR.js',\n                                        language: 'tr_TR',\n                                        width: '100%',\n                                        height: '600px',\n                                        menubar: 'file edit view insert format tools table',\n                                        toolbar_sticky: true,\n                                        toolbar_mode: 'wrap',\n                                        quickbars_insert_toolbar: false,\n                                        entity_encoding: 'raw',\n                                        paste_preprocess: function (plugin, args) {\n                                            let removed, parsed;\n                                            removed = args.content.replaceAll(\"border=0\", \"\");\n                                            parsed = removed.replaceAll('<table', '<table border=1 cellspacing=0')\n                                            args.content = parsed;\n                                        },\n                                        plugins:\n                                            'print preview paste importcss searchreplace autolink autosave save directionality' +\n                                            ' code visualblocks visualchars fullscreen image link media template codesample ' +\n                                            'table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount ' +\n                                            'imagetools textpattern noneditable help charmap quickbars emoticons hr paste',\n                                        toolbar:\n                                            'undo redo | bold italic underline strikethrough subscript superscript | fontselect fontsizeselect formatselect ' +\n                                            ' | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | lineheight ltr rtl| forecolor' +\n                                            ' backcolor removeformat | pagebreak charmap emoticons |' + 'quickimage table media link anchor hr insertdatetime codesample ' +\n                                            ' |preview  print cut selectall  searchreplace fullscreen',\n                                        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px; overflow-x:hidden;} img{max-width:100%;} table{max-width:100%}'\n                                    }}\n                                />\n                            </Col>\n                        </div>\n                    </Col>\n                    <Col sm={2} className=\"parametersArea\">\n                        <div className=\"parametersContainer\" style={{paddingLeft: 'inherit'}}>\n                            <button id='creatorParameters' className=\"row parameters\"\n                                    onClick={() => this.showCreatorParameters()}>\n                                Gönderen Parametreleri\n                                {this.state.creatorParameters ?\n                                    <span className='parametersIcons'><i className=\"fas fa-chevron-down upIcon\"/></span>\n                                    : <span className='parametersIcons'><i className=\"fas fa-chevron-down\"/></span>\n                                }\n                            </button>\n                            {this.state.creatorParameters &&\n                                internalParameterList.map(keyLabel => {\n                                    this.state.keyLabels.push(keyLabel);\n                                    if (keyLabel.toString().includes(\"Gönderen\")) {\n                                        return this.renderDynamicButton(keyLabel)\n                                    }\n                                })}\n                        </div>\n                        <div className=\"parametersContainer\" style={{paddingLeft: 'inherit'}}>\n                            <button id='employeeParameters' className=\"row parameters\"\n                                    onClick={() => this.showEmployeeParameters()}>\n                                Çalışan Parametreleri\n                                {this.state.employeeParameters ?\n                                    <span className='parametersIcons'><i className=\"fas fa-chevron-down upIcon\"/></span>\n                                    : <span className='parametersIcons'><i className=\"fas fa-chevron-down\"/></span>\n                                }\n                            </button>\n                            {this.state.employeeParameters &&\n                                internalParameterList.map(keyLabel => {\n                                    this.state.keyLabels.push(keyLabel);\n                                    if (keyLabel.toString().includes(\"Çalışan\")) {\n                                        return this.renderDynamicButton(keyLabel)\n                                    }\n                                })}\n                        </div>\n                        <div className=\"parametersContainer\" style={{paddingLeft: 'inherit'}}>\n                            <button id='constantParameters' className=\"row parameters\"\n                                    onClick={() => this.showConstantParameters()}>\n                                Firma Parametreleri\n                                {this.state.constantParameters ?\n                                    <span className='parametersIcons'><i className=\"fas fa-chevron-down upIcon\"/></span>\n                                    : <span className='parametersIcons'><i className=\"fas fa-chevron-down\"/></span>\n                                }\n\n                            </button>\n                            {this.state.constantParameters &&\n                                internalParameterList.map(keyLabel => {\n                                    if (!keyLabel.toString().includes(\"Çalışan\") && !keyLabel.toString().includes(\"Gönderen\") ) {\n                                        return this.renderDynamicButton(keyLabel)\n                                    }\n                                })}\n                        </div>\n                        <div className=\"parametersContainer\" style={{paddingLeft: 'inherit'}}>\n                            <button id='changeableParameters' className=\"row parameters\"\n                                    onClick={() => this.showChangeableParameters()}\n                                    disabled={this.state.selected.autosend === 1 || this.state.selected.kvkkDocument === 1}\n                            >\n                                Değişken Veriler\n                                {this.state.changeableParameters ?\n                                    <span className='parametersIcons'><i className=\"fas fa-chevron-down upIcon\"/></span>\n                                    : <span className='parametersIcons'><i className=\"fas fa-chevron-down\"/></span>\n                                }\n                            </button>\n                            {this.renderExternalButton(\"Veri\")}\n                            {this.renderExternalButton(\"AdSoyad\")}\n                            {this.renderExternalButton(\"Tarih\")}\n                            {this.renderExternalButton(\"GününTarihi\")}\n                        </div>\n                        <div className=\"parametersContainer\" style={{paddingLeft: 'inherit'}}>\n                            <button className=\"row parameters\">\n                                Form Parametreleri\n                                {this.state.changeableParameters ?\n                                    <span className='parametersIcons'><i className=\"fas fa-chevron-down upIcon\"/></span>\n                                    : <span className='parametersIcons'><i className=\"fas fa-chevron-down\"/></span>\n                                }\n                            </button>\n                            {this.state.surveyFormParameters.map(keyLabel => {\n                                {\n                                    return this.renderDynamicButton(keyLabel)\n                                }\n                            })}\n                        </div>\n                        <Card style={{ backgroundColor: \"#fff3cd\", borderLeft: \"4px solid #ffcc00\", marginTop: \"5px\", paddingTop: \"10px\",fontSize:\"10px\"}}>\n                            <CardBody>\n                                <span style={{\n                                    fontWeight: \"bold\",\n                                    color: \"#856404\"\n                                }}>⚠️Uyarı:</span>\n                                <br/>\n                                Saat ve tarih parametreleri, büyük harfle başlayıp küçük harflerle devam edecek şekilde kullanılmalıdır.\n                                <br/>\n                                <span\n                                    style={{ fontSize: \"9px\", fontStyle: \"italic\", display: \"block\", marginTop: \"5px\" }}>\n            Örnek:<br />\n                                    {formattedText}\n        </span>\n                            </CardBody>\n                        </Card>\n\n                    </Col>\n                </Row>\n            </CardBody>\n        </div>\n    }\n\n    callback = (data) => {\n        if (data.action === 'close' || data.action === 'skip' || data.type === 'tour:end') {\n            this.setState({run: false})\n        }\n    }\n\n    activateJoyride = () => {\n        this.setState({\n            run: !this.state.run\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"row baseBackground\">\n                <Joyride\n                    run={this.state.run}\n                    steps={this.state.steps}\n                    locale={this.state.locale}\n                    callback={this.callback}\n                    continuous={true}\n                    showProgress={true}\n                    showSkipButton={true}\n                    disableScrollParentFix={true}\n                    disableScrolling={true}\n                    styles={{\n                        options: {\n                            zIndex: 999999999999999,\n                            primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                        }\n                    }}\n                />\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                    <StickButton position=\"leftSide\" className=\"zocial GeriDon\" style={{fontSize: 'x-small'}}\n                                 label=\"Geri\" title=\"Önceki Sayfaya Git\"\n                                 onClick={() => this.props.history.push({pathname: `/${this.props.peykName}/formtemplate/`})}/>\n                    <StickButton position=\"leftSide\" className=\"zocial Dokuman\" disabled={this.state.loading}\n                                 style={{fontSize: 'x-small'}}\n                                 label=\"Form Türü Tanımı\" title=\"Form Türü Tanımı\"\n                                 onClick={() => this.props.history.push({pathname: `/${this.props.peykName}/formtype/`})}/>\n                    <StickButton position=\"leftSide\" className=\"zocial Dokuman\" disabled={this.state.loading}\n                                 style={{fontSize: 'x-small'}}\n                                 label=\"Formu Önizle\" title=\"Formu Önizle\" onClick={this.previewContent}/>\n                    <StickButton position=\"leftSide\" className=\"zocial Kaydet\" disabled={this.state.loading}\n                                 style={{fontSize: 'x-small', backgroundColor: 'forestgreen'}}\n                                 label=\"Formu Kaydet\" title=\"Formu Kabul Et ve Kaydet\" onClick={this.saveClicked}/>\n\n                    <div className=\"helpButtonContainer\" position='rightSide'\n                         style={{position: \"inherit\", right: \"4.4em\", marginTop: \"1.4em\"}}>\n                        <button className=\"helpButton\" onClick={() => {\n                            this.activateJoyride()\n                        }}>\n                            <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                            <i className=\"far fa-question-circle helpButtonIcon\"/>\n                        </button>\n                    </div>\n                </Nav>\n                <div className=\"col-sm-12 satirBasi\">\n                    <div className=\"card-header \">\n                        <h4 className=\"card-title\">Form Şablon Oluştur</h4>\n                        {this.state.showLoading &&\n                            <Row id='spinnerContainer' style={{zIndex: '10000'}}>\n                                <Col id='spinner'>\n                                </Col>\n                            </Row>\n                        }\n                    </div>\n                    {!this.state.loading && this.renderEditorComponent()}\n                </div>\n                {this.state.mediaModal &&\n                    <ApproveDocumentViewer modal={this.state.mediaModal}\n                                           url={this.state.url}\n                                           closeModal={this.setMediaViewer}\n                                           title=\"Form Şablonu Önizleme\"\n                                           listener={this.setMediaViewer}\n                                           canvas={true}\n                    />\n                }\n                {this.state.alert}\n            </div>);\n    }\n\n    setEmpContractList = (e) => {\n        this.setState({\n            selectedContractList: e ? e : []\n        })\n    }\n\n    setEmployeeStatusList = (e) => {\n        this.setState({\n            selectedEmployeeStatusList: e ? e : []\n        })\n    }\n\n    setOrganizationUnitList = (e) => {\n        this.setState({\n            selectedOrganizationalUnitList: e ? e : []\n        })\n    }\n\n    setJobTitleList = (e) => {\n        this.setState({\n            selectedJobTitleList: e ? e : []\n        })\n    }\n}\n\nexport default FormTemplateCreationPage;\n"],"sourceRoot":""}