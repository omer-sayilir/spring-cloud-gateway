{"version":3,"sources":["accounting/kepik/employee/component/AssigningAuthorityTree.js","accounting/kepik/employee/component/AssigningAuthority.js","accounting/kepik/authorization/RoleAssignment.js"],"names":["AssigningAuthorityTree","Component","constructor","props","super","onSelectionChange","node","e","selectedData","this","state","checked","target","key","childrenList","searchTreeChildrenIdList","treeData","map","setState","onSelect","render","maxLength","loop","nodes","width","length","React","createElement","TreeNode","title","customLabel","children","style","display","Col","xs","margin","padding","type","onChange","className","Tree","showLine","icon","_ref","selectable","defaultExpandedKeys","AssigningAuthority","getExistingAuthority","self","params","url","method","data","id","requestK","then","response","list","result","toString","getData","catch","error","showAxiosError","selectedAuthorizationWay","Alert","position","effect","timeout","saveClicked","readSelectedDeptIdList","success","authorizationWays","DEPARTMENT","toggleModal","idList","Object","keys","push","btnDisabled","manual","employee","existingAuthority","shouldRun","steps","content","placement","locale","back","close","last","next","skip","componentDidMount","tckn","manager","department","getDepartmentElement","value","label","name","renderInput","fieldName","FormGroup","row","Label","sm","Input","DefaultModal","disabled","isOpen","modal","size","closeOnEsc","confirmBtnText","cancelBtnText","onConfirm","onCancel","marginTop","Form","marginBottom","paddingLeft","paddingRight","fontWeight","overflowY","flex","maxHeight","alert","RoleAssignment","getDepartmentsAndExpenditureDeps","departmentList","expenditureDepList","handleRoleSelect","selectedRole","handleSearch","searchQuery","searching","selectedPersonal","undefined","selectedRowNum","fetchData","accessor","direction","loading","contentRoleTable","total","page","totalIdList","showAuthorityModal","roleList","isRolesLoading","approveAlert","displayAddRoleToPersonelDialog","authorizationWay","bind","onClickPersonalTable","getRoleList","getPersonalRoleList","deletePersonalRole","deletePersonalRoleControl","addToRoleToPersonalControl","addToRoleToPersonal","rowNum","filter","role","SweetAlert","showCancel","warning","confirmBtnBsStyle","cancelBtnBsStyle","Swal","text","confirmButtonText","employeeUserId","roleName","optionItems","emp","sortStr","includes","totalElements","renderAddRole","roleColumns","Header","sortable","Cell","MiniButton","faIcon","color","onClick","Modal","toggle","ModalHeader","ModalBody","Notify","ref","notify","Select","clearable","noResultsText","clearValueText","placeholder","options","Button","textAlign","fontSize","toUpperCase","surname","Table","loadingText","emptyMessage","columns","paginationEnabled","ModalFooter","fields","operator","selectData","item","i","EXPENDITURE","Nav","height","DetailedSearch","onSearch","flag"],"mappings":"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","file":"static/js/29.b3a96a45.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Tree from \"rc-tree\";\nimport TreeNode from \"rc-tree/lib/TreeNode\";\nimport {Col} from \"reactstrap\";\nimport {searchTreeChildrenIdList} from \"../../common/PeykHelper\";\n\nclass AssigningAuthorityTree extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedData: !!this.props.selectedData ? this.props.selectedData : {},\n    };\n  }\n\n  onSelectionChange = (node, e) => {\n    let selectedData = this.state.selectedData;\n    let checked = e.target.checked;\n    selectedData[node.key] = checked;\n    let childrenList = searchTreeChildrenIdList(this.props.treeData[0], node.key);\n    childrenList && childrenList.map(key => selectedData[key] = checked);\n    this.setState({selectedData});\n    this.props.onSelect(selectedData);\n  }\n\n  render() {\n    let maxLength = this.state.maxLength ? this.state.maxLength : 0;\n    const icon = ({}) => (<i className=\"fa fa-university\"/>);\n    const loop = (nodes, width) => {\n      if (!nodes || !nodes.length) {\n        return null\n      }\n      return nodes.map((node) =>\n        <TreeNode key={node.key}\n                  title={customLabel(node, width)}>\n          {loop(node.children, width - 18)}\n        </TreeNode>\n      )\n    };\n    const customLabel = (node, width) => (\n        <div style={{display: 'inline-flex'}}>\n          <Col xs='10' style={{margin: '0', padding: '0', width: width + \"px\",}} title={node.title}>\n            <label> {node.title}\n              <input type=\"checkbox\" style={{width: '40px'}}\n                     checked={this.state.selectedData && this.state.selectedData[node.key]}\n                     onChange={e => this.onSelectionChange(node, e)}/>\n            </label>\n          </Col>\n        </div>\n    );\n    return (\n      <div className=\"col-xl-auto\">\n          <Tree showLine\n                icon={icon}\n                selectable={false}\n                defaultExpandedKeys={[this.props.treeData[0].key]}>\n            {loop(this.props.treeData,maxLength)}\n          </Tree>\n      </div>\n    );\n  }\n}\n\nexport default AssigningAuthorityTree;","import React, {Component} from 'react';\nimport {Col, Form, FormGroup, Input, Label} from \"reactstrap\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport Alert from \"react-s-alert\";\nimport AssigningAuthorityTree from \"./AssigningAuthorityTree\";\nimport DefaultModal from \"../../../../components/DefaultModal\";\nimport {authorizationWays} from \"../../../../helper/helper\";\nclass AssigningAuthority extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      btnDisabled: false,\n      manual: false,\n      employee: {},\n      treeData: [],\n      selectedData: {},\n      existingAuthority: [],\n      shouldRun: true,\n      steps: [\n        {\n          target: '.card-title',\n          content: \"Bu Ekranda seçtiğiniz çalışana organizasyonel yetki verebilirsiniz.\",\n          placement: \"center\",\n        },\n        {\n          target: 'table tbody tr:nth-child(1) td:nth-child(1) input',\n          content: \"Çalışana verilmiş organizasyonel yetkileri buradan kontrol edebilirsiniz.\",\n          placement: \"auto\",\n        },\n        {\n          target: 'table tbody tr:nth-child(1) td:nth-child(1) input',\n          content: \"Yetki vermek istediğiniz organizasyon birimlerini seçiniz.\",\n          placement: \"auto\",\n        },\n        {\n          target: '.kaydet',\n          content: 'Kaydet',\n          placement: \"auto\",\n        },\n      ],\n      locale: {\n        back: 'Geri',\n        close: 'Kapat',\n        last: 'Son',\n        next: 'İleri',\n        skip: 'Atla',\n      },\n    };\n  }\n\n  componentDidMount() {\n    let self = this;\n    let params = {\n      url: `/employee/getEmployeeById`,\n      method: \"post\",\n      data: self.props.id ? self.props.id : -1\n    };\n    requestK(params)\n      .then(function (response) {\n        if (!response.data.id && self.props.tckn) {\n          response.data.tckn = self.props.tckn;\n        }\n        self.setState({\n          employee: response.data,\n          manager: response.data.manager,\n          department: AssigningAuthority.getDepartmentElement(response.data)\n        });\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n    self.getExistingAuthority();\n  }\n\n  getExistingAuthority = () =>{\n    let self = this;\n    let params = {\n      url: 'employee/getExistingAuthority',\n      method: 'post',\n      data: self.props.id\n    };\n    requestK(params)\n      .then(function (response) {\n        let list = response.data;\n        let result = {};\n        if (!!list && !!list.length) {\n          list.map(id => {\n            result[id.toString()] = true;\n          });\n        }\n        self.setState({selectedData: result}, () => self.getData()); // burada selectedData ya verilerin aktarılmasını işlemi\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n  }\n\n  getData = () => {\n    let self = this;\n    let params = {\n      url: 'department/readDepartmentTreeData',\n      method: \"post\",\n      data: self.props.selectedAuthorizationWay\n    };\n    requestK(params)\n      .then(function (response) {\n        if (response.data) {\n          self.setState({treeData: response.data});\n        } else {\n          Alert.error(\"Yetki verilecek birimler oluşturulmamış.\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n          });\n        }\n      }).catch(function (error) {\n      showAxiosError(error);\n    });\n  }\n\n  static getDepartmentElement(data) {\n    if (data.department) {\n      return {value: data.department.id.toString(), label: data.department.name};\n    } else {\n      return null;\n    }\n  }\n\n  renderInput(label, fieldName) {\n    return <FormGroup row>\n      <Label sm={4}>{label}</Label>\n      <Col sm={8}>\n        <Input type=\"text\" name={fieldName}\n               value={this.state.employee[fieldName] || ''}\n        />\n      </Col>\n    </FormGroup>;\n  }\n\n  saveClicked = () => {\n    let self = this;\n    if (!!self.state.selectedData) {\n      let params = {\n        url: 'employee/saveOrganizationAuthority',\n        method: \"post\",\n        data: {\n          \"employeeId\": self.props.id,\n          \"selectedList\": self.readSelectedDeptIdList()\n        },\n      };\n      requestK(params)\n        .then(function () {\n          Alert.success(self.props.selectedAuthorizationWay === authorizationWays.DEPARTMENT ? \"Organizasyonel birimlere yetki kaydedildi.\" : \"Masraf Yeri yetkisi kaydedildi.\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n          });\n          self.props.toggleModal(false, true);\n        }).catch(function (error) {\n        showAxiosError(error);\n      });\n    } else {\n      Alert.error(\"Birim seçilmedi.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 3000\n      });\n    }\n  }\n\n  readSelectedDeptIdList = () => {\n    let idList = [];\n    Object.keys(this.state.selectedData).map(id => {\n      if (!!this.state.selectedData[id]) {\n        idList.push(id);\n      }\n    })\n    return idList;\n  };\n\n  render() {\n    return <DefaultModal disabled={this.state.btnDisabled}\n                         isOpen={this.props.modal}\n                         size=\"lg\" closeOnEsc={false}\n                         id=\"title\"\n                         title={this.props.selectedAuthorizationWay === authorizationWays.DEPARTMENT ? \"Organizasyonel Yetki Atama\" : \"Masraf Yeri Yetki Atama\"}\n                         confirmBtnText=\"Kaydet\"\n                         cancelBtnText=\"Kapat\"\n                         onConfirm={this.saveClicked}\n                         onCancel={() => this.props.toggleModal(false, false)}>\n      <div style={{marginTop: '20px'}}>\n        <Form>\n          <div className=\"FormRenk\" style={{marginBottom: '10px', paddingLeft: '20px', paddingRight: '20px'}}>\n            <label style={{fontWeight: 'bold', display: 'block'}}>\n              Yekti Verilen Çalışan\n            </label>\n            <Col sm={8}>\n              {this.renderInput(\"Ad\", \"name\")}\n              {this.renderInput(\"Soyad\", \"surname\")}\n              {this.renderInput(\"TCKN\", \"tckn\")}\n            </Col>\n\n          </div>\n          <div className=\"FormRenk\" style={{paddingLeft: '20px', paddingRight: '20px', overflowY:'scroll' , flex: '1', maxHeight: '450px'}}>\n            <label style={{fontWeight: 'bold', display: 'block'}}>\n              Seçim Ekranı:\n            </label>\n            {this.state.treeData && this.state.treeData.length > 0 &&\n            <AssigningAuthorityTree treeData={this.state.treeData}\n                                    selectedData={this.state.selectedData}\n                                    onSelect={e => this.setState({selectedData: e, manual: true})}\n            />}\n          </div>\n\n          {this.state.alert}\n        </Form>\n      </div>\n\n    </DefaultModal>\n  }\n\n\n}\n\nexport default AssigningAuthority;","import React, {Component} from \"react\";\nimport Table from \"../../../components/Table/Table\";\nimport {Button, Col, Form, FormGroup, Modal, ModalBody, ModalFooter, ModalHeader, Nav} from 'reactstrap';\nimport DetailedSearch from \"../../../components/DetailedSearch/DetailedSearch\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport Select from \"../../../local_node_modules/react-select\";\nimport MiniButton from \"../../../components/MiniButton\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Swal from \"sweetalert2\";\nimport {authorizationWays, showAxiosError} from \"../../../helper/helper\";\nimport AssigningAuthority from \"../employee/component/AssigningAuthority\";\nimport Notify from \"react-notification-alert\";\n\nclass RoleAssignment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            content: [],\n            contentRoleTable: [],\n            total: 0,\n            page: 0,\n            size: 10,\n            totalIdList: [],\n            manual: false,\n            searching: false,\n            searchQuery: undefined,\n            selectedPersonal: undefined,\n            showAuthorityModal: false,\n            selectedRole: null,\n            roleList: [],\n            isRolesLoading: false,\n            selectedRowNum: -1,\n            approveAlert: null,\n            displayAddRoleToPersonelDialog: false,\n            authorizationWay: authorizationWays.DEPARTMENT,\n            departmentList:[],\n            expenditureDepList:[]\n        }\n        this.fetchData = this.fetchData.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.onClickPersonalTable = this.onClickPersonalTable.bind(this);\n        this.getRoleList = this.getRoleList.bind(this);\n        this.handleRoleSelect = this.handleRoleSelect.bind(this);\n        this.getPersonalRoleList = this.getPersonalRoleList.bind(this);\n        this.deletePersonalRole = this.deletePersonalRole.bind(this);\n        this.deletePersonalRoleControl = this.deletePersonalRoleControl.bind(this);\n        this.addToRoleToPersonalControl = this.addToRoleToPersonalControl.bind(this);\n        this.addToRoleToPersonal = this.addToRoleToPersonal.bind(this);\n        this.getDepartmentsAndExpenditureDeps = this.getDepartmentsAndExpenditureDeps.bind(this);\n    }\n\n    getDepartmentsAndExpenditureDeps = () => {\n        let self = this;\n        let params = {\n            url: '/employee/getList',\n            method: \"get\",\n        };\n        requestK(params)\n            .then(function (response) {\n                let {departmentList, expenditureDepList} = response.data;\n                self.setState({departmentList, expenditureDepList});\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    handleRoleSelect = selectedRole => {\n        this.setState({selectedRole: selectedRole});\n    };\n\n\n    componentDidMount() {\n        this.getRoleList();\n        this.getDepartmentsAndExpenditureDeps();\n    }\n\n    handleSearch = (searchQuery) => {\n        this.setState({\n            searchQuery,\n            searching: true,\n            selectedPersonal: undefined,\n            selectedRowNum: -1,\n        }, () => this.fetchData(this.state.accessor, this.state.direction, 0, this.state.size))\n    };\n\n    onClickPersonalTable(e, row, rowNum) {\n        this.setState({selectedPersonal: row, selectedRowNum: rowNum});\n        this.getPersonalRoleList(row);\n    }\n\n    addToRoleToPersonalControl() {\n        let self = this;\n        if (self.state.selectedRole === null) {\n            Swal({\n                title: 'Uyarı ! ',\n                text: (\"Lütfen eklemek istediğiniz rolü seçiniz!\"),\n                type: 'warn',\n                confirmButtonText: 'Tamam'\n            }).then(() => {\n                //self.fetchData();\n            });\n            return;\n        }\n        let willAddedRole = self.state.contentRoleTable.filter((role) => role.id === self.state.selectedRole.value);\n        if (willAddedRole.length !== 0) {\n            Swal({\n                title: 'Uyarı ! ',\n                text: (\"Bu rol daha önce verilmiş!. Lütfen farklı bir rol seçiniz.\"),\n                type: 'warn',\n                confirmButtonText: 'Tamam'\n            }).then(() => {\n                //self.fetchData();\n            });\n            return;\n        }\n\n        self.setState({\n            approveAlert: (\n                <SweetAlert showCancel warning\n                            confirmBtnText=\"Evet\"\n                            cancelBtnText=\"Hayır\"\n                            confirmBtnBsStyle=\"danger\"\n                            cancelBtnBsStyle=\"default\"\n                            title=\"\"\n                            onConfirm={() => self.addToRoleToPersonal()}\n                            onCancel={() => self.setState({approveAlert: null})}>\n                    {\"Seçilen personele \" + self.state.selectedRole.label + \" rolü verilecektir. Onaylıyor musunuz?\"}\n                </SweetAlert>\n            )\n        });\n\n\n    }\n\n    addToRoleToPersonal() {\n        let self = this;\n        let params = {\n            url: '/role/addRoleToPersonal',\n            method: \"post\",\n            data: {\n                \"employeeUserId\": self.state.selectedPersonal.employeeUserId,\n                \"roleId\": this.state.selectedRole.value\n            }\n        };\n        self.setState({approveAlert: null});\n        requestK(params)\n            .then(function (response) {\n                self.setState({contentRoleTable: response.data});\n                Swal({\n                    title: 'Başarılı ! ',\n                    text: (\"Rol başarılı birşekilde verilmiştir.\"),\n                    type: 'success',\n                    confirmButtonText: 'Tamam'\n                }).then(() => {\n                    //self.fetchData();\n                });\n            })\n            .catch(function (error) {\n                showAxiosError(error);\n            });\n    }\n\n    deletePersonalRoleControl(row) {\n        this.setState({\n            approveAlert: (\n                <SweetAlert showCancel warning\n                            confirmBtnText=\"Evet\"\n                            cancelBtnText=\"Hayır\"\n                            confirmBtnBsStyle=\"danger\"\n                            cancelBtnBsStyle=\"default\"\n                            title=\"\"\n                            onConfirm={() => this.deletePersonalRole(row)}\n                            onCancel={() => this.setState({approveAlert: null})}>\n                    {\"Seçilen personelden \" + row.roleName + \" rolü kaldırılacaktır. Onaylıyor musunuz?\"}\n                </SweetAlert>\n            )\n        });\n\n\n    }\n\n    deletePersonalRole(row) {\n        let self = this;\n        let params = {\n            url: '/role/deletePersonalRole',\n            method: \"post\",\n            data: {\"employeeUserId\": self.state.selectedPersonal.employeeUserId, \"roleId\": row.id}\n        };\n        self.setState({approveAlert: null});\n        requestK(params)\n            .then(function (response) {\n                self.setState({contentRoleTable: response.data});\n                Swal({\n                    title: 'Başarılı ! ',\n                    text: (\"Rol başarılı birşekilde kaldırılmıştır.\"),\n                    type: 'success',\n                    confirmButtonText: 'Tamam'\n                }).then(() => {\n                    //self.fetchData();\n                });\n            })\n            .catch(function (error) {\n                showAxiosError(error);\n            });\n    }\n\n    getRoleList() {\n        let self = this;\n        let params = {\n            url: '/role/getRoleList',\n            method: \"get\",\n        };\n        self.setState({isRolesLoading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({isRolesLoading: false});\n                let optionItems = [];\n                response.data.map((role) => {\n                    optionItems.push({value: role.id, label: role.roleName, role: role});\n                });\n                self.setState({roleList: optionItems});\n            })\n            .catch(function (error) {\n                self.setState({isRolesLoading: false});\n                showAxiosError(error);\n            });\n    }\n\n    getPersonalRoleList(emp) {\n        let self = this;\n        let params = {\n            url: '/role/personalRoleList',\n            method: \"post\",\n            data: emp.employeeUserId\n        };\n        self.setState({isRolesLoading: true});\n        requestK(params)\n            .then(function (response) {\n                self.setState({contentRoleTable: response.data, isRolesLoading: false});\n\n            })\n            .catch(function (error) {\n                self.setState({isRolesLoading: false});\n                showAxiosError(error);\n            });\n    }\n\n    fetchData(accessor, direction, page, size) {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '&sort=id,desc';\n        let searchQuery = !self.state.searchQuery ? '' : '&' + self.state.searchQuery;\n        let params = {\n            url: '/role/personalList?page=' + page + '&size=' + size +\n                ((searchQuery !== '' && searchQuery.includes(\"depId\")) ? '' : '&depId=')+\n                ((searchQuery !== '' && searchQuery.includes(\"expDepId\")) ? '' : '&expDepId=')+\n                ((searchQuery !== '' && searchQuery.includes(\"roleId\")) ? '' : '&roleId=') + searchQuery + sortStr,\n            method: \"get\",\n        };\n        self.setState({loading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        requestK(params)\n            .then(function (response) {\n                // checkGrantForFetchResponse(self, response.data);\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: (response.data && response.data.totalElements) ? response.data.totalElements : 0,\n                    content: (response.data) ? response.data.content : [],\n                    loading: false,\n                    searching: false\n                });\n            })\n            .catch(function (error) {\n                self.setState({loading: false, searching: false});\n                showAxiosError(error);\n            });\n    }\n\n    renderAddRole() {\n        const roleColumns = [\n            {\n                Header: \"Rolün Adı\",\n                accessor: \"roleName\",\n                sortable: false,\n                width: \"85%\",\n            }, {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                width: \"15%\",\n                Cell: row => (\n                    <div>\n                        <MiniButton title=\"Sil\" faIcon=\"fa-trash\" color=\"danger\"\n                                    onClick={() => this.deletePersonalRoleControl(row)}/>\n                    </div>\n\n                )\n            }\n        ];\n        return <Modal isOpen={this.state.displayAddRoleToPersonelDialog} size=\"lg\"\n                      toggle={() => this.setState({displayAddRoleToPersonelDialog: false})}>\n            <ModalHeader className=\"justify-content-center\"\n                         toggle={() => this.setState({displayAddRoleToPersonelDialog: false})}> Personel Rol Atama\n            </ModalHeader>\n            <ModalBody>\n                {this.state.displayAddRoleToPersonelDialog && <Notify ref={this.notify}/>}\n                <div>\n                    <div className=\"card-body\" style={{padding: '16px'}}>\n                        <Form>\n                            <FormGroup row>\n                                <Col sm={2}>\n                                    <label style={{marginTop: 0}}>Rol Seç:</label>\n                                </Col>\n                                <Col sm={8}>\n                                    <Select\n                                        value={this.state.selectedRole !== null ? this.state.selectedRole.value : -1}\n                                        clearable={false}\n                                        noResultsText=\"Rol bulunamadı\"\n                                        clearValueText=\"Temizle\"\n                                        placeholder=\"Personele Atamak İçin Rol Seçiniz...\"\n                                        onChange={this.handleRoleSelect}\n                                        options={this.state.roleList}\n                                        style={{marginTop: 0}}\n                                    />\n                                </Col>\n                                <Col sm={2}>\n                                    <Button className='btn btn-info' style={{paddingLeft: '16px', marginTop: 0}}\n                                            onClick={this.addToRoleToPersonalControl}\n                                            disabled={!this.state.selectedPersonal}>Ekle</Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                    <div className=\"card-body\">\n                        <label style={{textAlign: 'center', fontWeight: 'bold', fontSize: '16px'}}>\n                            {this.state.selectedPersonal !== undefined ? \" \" + this.state.selectedPersonal.name.toUpperCase() + \" \" + this.state.selectedPersonal.surname.toUpperCase() + \" \" : \" \"}\n                            Adlı Personelin Rolleri</label>\n                        <Table\n                            loading={this.state.isRolesLoading}\n                            loadingText=\"Kayıtlar getiriliyor...\"\n                            emptyMessage={\"Rol Bulunamadı\"}\n                            columns={roleColumns}\n                            content={this.state.contentRoleTable ? this.state.contentRoleTable : []}\n                            paginationEnabled={false}\n                        />\n                    </div>\n                </div>\n            </ModalBody>\n            <ModalFooter/>\n        </Modal>\n    }\n\n    render() {\n        const fields = [\n            {\n                label: \"Adı\",\n                accessor: \"name\",\n                type: \"text\",\n                operator: \"=\"\n            },\n            {\n                label: \"Soyadı\",\n                accessor: \"surname\",\n                type: \"text\",\n                operator: \"=\"\n            },\n            {\n                label: \"TCKN\",\n                accessor: \"tckn\",\n                type: \"numericText\",\n                operator: \"=\"\n            },\n            {\n                label: \"Rol\",\n                accessor: \"roleId\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.roleList\n            },\n            {\n                label: \"Yetkili Olduğu Departman Listesi \",\n                accessor: \"depId\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.departmentList\n            },\n            {\n                label: \"Yetkili Olduğu Masraf Yeri Listesi \",\n                accessor: \"expDepId\",\n                type: \"select\",\n                operator: \"=\",\n                selectData: this.state.expenditureDepList\n            },\n\n        ];\n\n        const columns = [\n            {\n                Header: \"Adı\",\n                accessor: \"name\",\n                width: \"25%\",\n            },\n            {\n                Header: \"Soyadı\",\n                accessor: \"surname\",\n                width: \"25%\",\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"tckn\",\n                width: \"25%\",\n            },\n            {\n                Header: \"İşlemler\",\n                accessor: \"\",\n                sortable: false,\n                width: \"10%\",\n                Cell: (item, i) => (\n                    <div>\n                        <MiniButton title=\"Personele Rol Ekle\" faIcon=\"fa-plus\"\n                                    onClick={(e) => {\n                                        this.setState({displayAddRoleToPersonelDialog: true}, () => this.onClickPersonalTable(e, item, i));\n                                    }}\n                                    color=\"success\"/>\n                        <MiniButton title=\"Organizasyonel Yetki Ata\" faIcon=\"fa-sort-amount-asc\"\n                                    onClick={() => this.setState({authorizationWay:authorizationWays.DEPARTMENT,showAuthorityModal: true, selectedPersonal: item})}\n                                    color=\"info\"/>\n                        <MiniButton title=\"Masraf Yeri Yetki Ata\" faIcon=\"fa-sort-amount-asc\"\n                                    onClick={() => this.setState({authorizationWay:authorizationWays.EXPENDITURE,showAuthorityModal: true, selectedPersonal: item})}\n                                    color=\"primary\"/>\n\n                    </div>\n                )\n            }\n        ];\n\n        return (\n            <div className=\"row baseBackground\">\n                {this.state.approveAlert}\n                <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}/>\n                <div className=\"col-sm-12 satirBasi\">\n                    <div className=\"card-header\">\n                        <h4 className=\"card-title\">Personel Listesi</h4>\n                    </div>\n                    <div className=\"card-body\">\n                        <DetailedSearch fields={fields}\n                                        loading={this.state.searching}\n                                        onSearch={this.handleSearch}/>\n                    </div>\n                    <div className=\"card-body\">\n                        <Table\n                            loading={this.state.loading}\n                            loadingText=\"Kayıtlar getiriliyor...\"\n                            columns={columns}\n                            content={this.state.content ? this.state.content : []}\n                            total={this.state.total ? this.state.total : 0}\n                            page={this.state.page ? this.state.page : 0}\n                            size={this.state.size ? this.state.size : 0}\n                            options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                            fetchData={this.fetchData}\n                            manual={this.state.manual}\n                        />\n                    </div>\n                    {this.renderAddRole()}\n                </div>\n                {this.state.showAuthorityModal &&\n                    <AssigningAuthority\n                        id={this.state.selectedPersonal.id} modal={this.state.showAuthorityModal}\n                        selectedAuthorizationWay={this.state.authorizationWay}\n                        toggleModal={(flag, manual) => this.setState({showAuthorityModal: flag, manual: manual})}/>\n                }\n            </div>\n        );\n    }\n}\n\nexport default RoleAssignment;"],"sourceRoot":""}