{"version":3,"sources":["components/AutoCompleteList.js","accounting/kepik/formsession/component/UploadFormFileModal.js","accounting/kepik/formsession/component/SablonsuzTableRow.js","accounting/kepik/formsession/FormSessionEditPage.js"],"names":["AutoCompleteList","Component","constructor","props","super","formatCreateLabelCreator","value","this","allowNew","name","state","changeLabel","bind","createLabel","checkUpperCase","generateOptions","onChange","list","length","newValue","onlyLabel","label","push","updateList","i","valueCheck","text","useUpperCase","toString","replace","toUpperCase","options","map","e","render","React","createElement","Select","Creatable","clearable","multi","className","id","placeholder","promptTextCreator","noResultsText","onNewOptionClick","defaultProps","UploadFormFileModal","fileList","index","process","realIndex","onDrop","onCancel","fileIsSaved","saveFileInfo","uploadFile","_source","axios","CancelToken","source","onUpload","content","self","document","formData","FormData","append","params","url","method","cancelToken","token","data","status","statusText","size","setState","btnDisabled","requestK","then","response","catch","error","isCancel","showAxiosError","Alert","success","position","effect","timeout","toggleModal","cancel","acceptedFiles","rejectedFiles","sablonsuzRows","find","pdfFile","pdfName","info","processing","uploadBtnDisabled","color","style","paddingRight","DefaultModal","isOpen","modal","disabled","title","modalBodyStyle","padding","minHeight","confirmBtnText","cancelBtnText","onConfirm","filter","Row","Col","sm","paddingTop","paddingLeft","Dropzone","accept","activeClassName","multiple","maxHeight","overflow","textAlign","paddingBottom","backgroundColor","width","key","margin","TextOverFlowTooltip","maxLength","Decimal","toFixed","toNumber","getStatusRender","colSpan","float","SablonsuzTableRow","substring","formSablonsuzName","align","Input","type","rows","height","border","marginTop","target","verticalAlign","fontSize","Button","onClick","onDelete","left","display","background","borderRadius","FormSessionEditPage","videos","switchVideo","video","showEczaciHelpModal","readMailTemplate","mimeBody","ifNoTemplate","location","templateId","draftId","load","sessionIsExist","readSessionFormTemplate","openAttachmentLoad","readFormTemplate","match","parseInt","formSessionId","readFormSession","history","pathname","peykName","readAntets","letterList","concat","letterHeadList","formTemplate","mimeTitle","formName","selectedAntet","item","antetId","isDecline","extInputLabelList","formParams","JSON","parse","externalList","formSession","isAnswerable","submissionType","priority","responseType","pdfContent","pdfContentBlob","Blob","headers","File","attachment","loadName","previewUrl","URL","createObjectURL","preview","sablonsuzRowId","Math","max","o","sablonsuzPdfFiles","isAttachmentLoaded","removeAttachment","mediaModal","formEmployeeList","kepAccountList","formParamList","mergeToEmployee","attachmentMergeByEmployee","showUploadModal","formTemplateId","selected","uploadAttachment","handleDelete","deletedPdfName","row","removeFuncAttachment","alert","attachmentName","pdfList","sablonsuzPdfFile","fetchData","accessor","direction","page","undefined","tableLoading","searching","manual","total","totalElements","removeEmployeeList","newList","employeeId","conditionalList","splice","indexOf","declineList","clearAllEmployees","handleDraftUpdateConfirmation","formData1","stringify","formData2","getElementById","cells","getElementsByTagName","renderMimeInputs","Container","top","editHandleInputChange","event","includes","renderInputList","Form","input","renderListInputs","Fragment","FormGroup","Label","step","setAlertForSendWithAttachment","flag","draftButtonClicked","SweetAlert","showCancel","warning","confirmBtnBsStyle","cancelBtnBsStyle","acceptOperation","checkParametersAndSendForEmployees","saveBtnLoading","setAlertSaveDraft","setAlertUpdateDraft","disabledBtn","disable","acceptAndPreview","isNoTemplateValid","isValid","isNoTemplateValid1","Object","keys","values","Swal","cancelButtonText","confirmButtonText","showCancelButton","result","dismiss","createUpdateFormData","draft","acceptSablonsuzOperation","set","timerStatus","waitCompletion","completionLoading","hataliPdfFiles","pdfCount","message","err","formParamListArray","forEach","dateString","date","Date","isNaN","getTime","String","getDate","padStart","getMonth","getFullYear","formatDateForJson","selectEmpManually","sessionId","setTimeout","renderFormTemplateInfo","fontWeight","fontStyle","formType","category","whiteSpace","updatedAt","moment","split","format","fontWeigth","onChangeAntet","check","checked","redirectToCreatePage1","data-toggle","data-placement","marginLeft","rel","redirectToCreatePage","renderFormInputInfo","callback","action","shouldRun","joyrideActive","activateJoyride","renderEmployeeListInfo","columnList","Header","Cell","department","jobTitle","areFormsSent","sortable","columns","renewListForDepartment","bottom","right","Table","loading","marginRight","lineHeight","showModal","renderPreview","downloadPreview","PdfViewer","scale","originalContent","assign","formContent","encoded","TextEncoder","encode","chunkSize","binaryString","fromCharCode","apply","slice","btoa","blob","window","webkitURL","finally","isValidEmployee","myTable","selection","selectionName","displaySelectInputDialog","searchQuery","searchKey","isKepOwner","steps","placement","locale","back","close","last","next","skip","innerWidth","stop","surveyFormParameters","isTemplate","componentDidMount","onTimerStatus","antet","Joyride","disableBeacon","autoStart","continuous","run","scrollToFirstStep","showProgress","showSkipButton","scrollToSteps","disableCloseOnEsc","disableOverlay","disableOverlayClicks","keyboardNavigation","hideBackButton","disableOverlayClose","holePadding","styles","zIndex","primaryColor","Nav","NavBarKS","offsetWidth","StickButton","previousPage","aria-haspopup","aria-expanded","aria-labelledby","CardHeader","CardTitle","tag","ReactLoading","CardBody","AddEmployeeModal","selectedList","sidebarMenus","reload","completed","removeEmployee","noTemplate","decline"],"mappings":"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","file":"static/js/36.608f7a68.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Select from \"../local_node_modules/react-select\"\n\nclass AutoCompleteList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.changeLabel = this.changeLabel.bind(this);\n        this.createLabel = this.createLabel.bind(this);\n        this.checkUpperCase = this.checkUpperCase.bind(this);\n        this.generateOptions = this.generateOptions.bind(this);\n    }\n\n    changeLabel(value) {\n        this.props.onChange(this.checkUpperCase(value));\n    }\n\n    createLabel(value) {\n        if (this.props.allowNew) {\n            let list = this.props.list;\n            if (list.length === 0) {\n                let newValue;\n                if (!this.props.onlyLabel) {\n                    newValue = {value: \"0\", label: this.checkUpperCase(value.label)};\n                } else {\n                    newValue = {value: this.checkUpperCase(value.label), label: this.checkUpperCase(value.label)};\n                }\n                list.push(newValue);\n                this.props.updateList(list);\n                this.changeLabel(newValue);\n            } else {\n                let i = list.length - 1;\n                let valueCheck = list[i];\n                if (!this.props.onlyLabel) {\n                    if (valueCheck.value === \"0\") {\n                        list[i].label = this.checkUpperCase(value.label);\n                        this.props.updateList(list);\n                        this.changeLabel(list[i]);\n                    } else {\n                        let newValue = {value: \"0\", label: this.checkUpperCase(value.label)};\n                        list.push(newValue);\n                        this.props.updateList(list);\n                        this.changeLabel(newValue);\n                    }\n                } else {\n                    if (valueCheck.value === this.checkUpperCase(value.label)) {\n                        list[i].label = this.checkUpperCase(value.label);\n                        this.props.updateList(list);\n                        this.changeLabel(list[i]);\n                    } else {\n                        let newValue = {\n                            value: this.checkUpperCase(value.label),\n                            label: this.checkUpperCase(value.label)\n                        };\n                        list.push(newValue);\n                        this.props.updateList(list);\n                        this.changeLabel(newValue);\n                    }\n                }\n            }\n        }\n    }\n\n    checkUpperCase(text) {\n        if (text && this.props.useUpperCase) {\n            if (text.value != null && text.label) {\n                text.label = text.label.toString().replace(\"i\", \"İ\").toUpperCase();\n            } else {\n                text = text.toString().replace(\"i\", \"İ\").toUpperCase();\n            }\n        }\n        return text;\n    }\n\n    generateOptions() {\n        let options = [];\n        this.props.list &&\n        this.props.list.length > 0 &&\n        this.props.list.map(e => {\n            options.push({value: e.value, label: this.checkUpperCase(e.label)})\n        });\n        return options;\n    }\n\n    formatCreateLabelCreator = (value) => {\n        if (this.props.allowNew)\n            return 'Ekle \"' + value + '\"';\n        else\n            return 'Lütfen, var olan bir ' + this.props.name + ' seçimi yapınız.'\n    };\n\n    render() {\n        let options = this.generateOptions();\n        return (\n            <Select.Creatable\n                clearable={false}\n                multi={false}\n                className=\"select-control\"\n                name=\"autoCompleteList\"\n                id=\"autoCompleteList\"\n                value={this.props.value}\n                placeholder={this.props.placeholder}\n                promptTextCreator={this.formatCreateLabelCreator}\n                noResultsText={\"Henüz kaydedilmiş veri yok\"}\n                onChange={(e) => this.changeLabel(e)}\n                onNewOptionClick={(e) => this.createLabel(e)}\n                options={options}\n            />\n        );\n    }\n}\n\nAutoCompleteList.defaultProps = {\n  allowNew: true,\n  useUpperCase: false,\n  onlyLabel: false,\n  updateList: (list) => {}\n};\nexport default AutoCompleteList;\n","import React, {Component} from 'react';\nimport 'moment/locale/tr';\nimport {Col, Row} from 'reactstrap';\nimport {showAxiosError} from \"../../../../helper/helper\";\nimport {requestK} from \"../../../../helper/APIUtils\";\nimport DefaultModal from \"../../../../components/DefaultModal\";\nimport Alert from \"react-s-alert\";\nimport {Decimal} from 'decimal.js';\nimport TextOverFlowTooltip from \"../../../../components/TextOverFlowTooltip\";\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\n\nclass UploadFormFileModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fileList: [],\n            index: 0,\n            process: false,\n            realIndex: 0,\n        };\n        this.onDrop = this.onDrop.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.fileIsSaved = this.fileIsSaved.bind(this);\n        this.saveFileInfo = this.saveFileInfo.bind(this);\n        this.uploadFile = this.uploadFile.bind(this);\n    }\n\n    saveFileInfo() {\n        this._source = axios.CancelToken.source();\n        this.props.onUpload(this.state.fileList[0].content);\n        this.fileIsSaved(this.state.fileList);\n    }\n\n    uploadFile() {\n        this._source = axios.CancelToken.source();\n        let self = this;\n        let fileList = self.state.fileList;\n        let document = fileList[0];\n        let formData = new FormData();\n        formData.append(\"content\", document.content);\n        formData.append(\"id\", self.props.id);\n        let params = {\n            url: `/formsession/uploadAttachment`,\n            method: 'post',\n            cancelToken: self._source.token,\n            data: formData\n        };\n        fileList[0] = {\n            status: \"processing\",\n            statusText: \"Gönderim başlatıldı.\",\n            name: document.name,\n            size: document.size,\n            content: document.content,\n        };\n        self.setState({btnDisabled: true, fileList: fileList});\n        requestK(params)\n            .then(function (response) {\n                self.fileIsSaved(fileList);\n            })\n            .catch(function (error) {\n                if (!axios.isCancel(error)) {\n                    document.status = \"error\";\n                    document.statusText = error.data;\n                    fileList[0] = {\n                        status: \"error\",\n                        statusText: error.data,\n                        name: document.name,\n                        size: document.size,\n                        content: document.content,\n                    };\n                    self.setState({fileList: fileList, btnDisabled: false});\n                    showAxiosError(error);\n                }\n            });\n    }\n\n    fileIsSaved(fileList) {\n        let document = fileList[0];\n        fileList[0] = {\n            status: \"success\",\n            statusText: \"Gönderim başarılı.\",\n            name: document.name,\n            size: document.size,\n            content: document.content,\n        };\n        this.setState({fileList, btnDisabled: false});\n        Alert.success('Doküman eklenmek üzere kaydedildi.', {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n        });\n        this.props.toggleModal(false, false);\n    }\n\n    onCancel() {\n        if (this._source)\n            this._source.cancel();\n\n        if (this.state.index > 0) {\n            this.props.toggleModal(false, true);\n        } else {\n            this.props.toggleModal(false, false);\n        }\n    }\n\n    onDrop(acceptedFiles, rejectedFiles) {\n        let self = this;\n        if (!!acceptedFiles) {\n            let fileList = this.props.sablonsuzRows;\n            if(fileList.length > 0 && !!fileList.find( pdfFile => pdfFile.pdfName === acceptedFiles[0].name)) {\n                Alert.info(\"Aynı PDF birden fazla seçilemez.\", {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 4000\n                });\n            } else {\n                fileList = [];\n                self.setState({processing: true, uploadBtnDisabled: true, fileList: []});\n                for (let i = 0; i < acceptedFiles.length; i++) {\n                    fileList.push({content: acceptedFiles[i], name: acceptedFiles[i].name, size: acceptedFiles[i].size});\n                }\n                self.setState({processing: false, uploadBtnDisabled: false, fileList: fileList, index: 0, realIndex: 0});\n            }\n        }\n    }\n\n    static getStatusRender(status) {\n        let className = (status === \"processing\" ? \"spinner fa-spin\" : (status === \"success\" ? \"check\" : (status === \"error\" ? \"close\" : \"pause\")));\n        let color = (status === \"processing\" ? \"dark\" : (status === \"success\" ? \"green\" : (status === \"error\" ? \"red\" : \"dark\")));\n        return (<i className={\"fas fa-\" + className} style={{color: color, paddingRight: \"4px\"}}></i>);\n    }\n\n    render() {\n        return (\n            <DefaultModal\n                isOpen={this.props.modal}\n                disabled={this.state.btnDisabled || (this.state.fileList && this.state.fileList.length === 0)}\n                title=\"Doküman Ekle\"\n                size=\"lg\"\n                modalBodyStyle={{padding: \"0\", minHeight: \"500px\"}}\n                confirmBtnText=\"Doküman(lar)ı Yükle\"\n                cancelBtnText=\"Kapat\"\n                onConfirm={() => {\n                    const oversizedDocuments = this.state.fileList.filter(document => document.size > 75 * 1024 * 1024);\n                    if (oversizedDocuments.length > 0) {\n                        Alert.error(\"Yüklenen dosya boyutu 75MB' tan küçük olmalıdır\", {\n                            position: 'top-right',\n                            effect: 'stackslide',\n                            timeout: 5000\n                        });\n                        return;\n                    }\n                    this.saveFileInfo();\n                }}\n                onCancel={() => this.props.toggleModal(false, false)}>\n\n                <Row>\n                    <Col sm=\"12\" style={{paddingTop: \"15px\", paddingRight: \"32px\", paddingLeft: \"32px\"}}>\n                        <Dropzone\n                            accept=\".pdf\"\n                            activeClassName=\"dropzoneActiveClass\"\n                            className=\"FormRenk col-sm-12\"\n                            multiple={false}\n                            disabled={this.state.btnDisabled}\n                            onDrop={this.onDrop}>\n                            <div className=\"dropzoneInnerArea\">\n                                (.pdf uzantılı) Ek dokümanı yükleyiniz.\n                            </div>\n                        </Dropzone>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm=\"12\" style={{\n                        paddingTop: \"0px\",\n                        paddingRight: \"15px\",\n                        paddingLeft: \"15px\",\n                        maxHeight: '500px',\n                        overflow: \"auto\"\n                    }}>\n                        <table className=\"\" style={{textAlign: 'center', paddingBottom: \"5px\"}}>\n                            <thead>\n                            <tr style={{backgroundColor: '#ebedf0'}}>\n                                <th width=\"5%\">#</th>\n                                <th>Dosya Adı</th>\n                                <th>Dosya Boyutu</th>\n                                <th>Durum</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.fileList && this.state.fileList.map((document, index) =>\n                                <tr key={index + \"_\" + document.name + \"_\" + document.size}>\n                                    <td>{index + 1}</td>\n                                    <td style={{margin: \"0px\", textAlign: \"left\"}}>{<TextOverFlowTooltip text={document.name || \"-\"} maxLength={30}/>}</td>\n                                    <td style={{margin: \"0px\"}}>{(new Decimal(new Decimal(document.size / 1024 / 1024).toFixed(2))).toNumber() + \" MB\"}</td>\n                                    <td style={{margin: \"0px\"}}>{UploadFormFileModal.getStatusRender(document.status)}{(document.statusText || \"Gönderim bekliyor\")}</td>\n                                </tr>\n                            )}\n                            {!this.state.processing && (this.state.fileList && this.state.fileList.length === 0) &&\n                            <tr>\n                                <td colSpan=\"8\">Kayıt bulunamadı</td>\n                            </tr>}\n                            {this.state.processing &&\n                            <tr>\n                                <td colSpan=\"8\">Doküman işleniyor...</td>\n                            </tr>}\n                            </tbody>\n                        </table>\n                    </Col>\n                    <Col sm=\"12\">\n                        <p style={{float: \"right\"}}>Toplam Adet: {this.state.fileList ? this.state.fileList.length : 0}</p>\n                    </Col>\n                </Row>\n\n            </DefaultModal>\n        );\n    }\n}\n\nexport default UploadFormFileModal;\n\n","import React, {Component} from 'react';\nimport {\n    Button,\n    Input,\n} from \"reactstrap\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/tr';\n\nclass SablonsuzTableRow extends Component {\n\n\n    constructor(props) {\n        super(props);\n        let pdfName = \"\" + this.props.pdfName;\n        pdfName = pdfName.substring(0, pdfName.length - 4);\n        this.state = {\n            formSablonsuzName: pdfName,\n            index: this.props.index,\n        };\n    }\n\n    render() {\n        return (\n        <tr key={this.state.index}>\n            <td className=\"col-sm-3\"><label>Form Adı: </label></td>\n            <td className=\"col-sm-6\" align=\"center\">\n                <Input type=\"textarea\" rows={1} value={this.state.formSablonsuzName}\n                       style={{\n                           height: 'auto',\n                           border: '1px solid #E3E3E3',\n                           marginTop: '2px',\n                           padding: '3px 3px'\n                       }}\n                       onChange={(e) => this.setState({formSablonsuzName: e.target.value})}/>\n            </td>\n            <td>\n                <span style={{textAlign:'right', verticalAlign:'center', paddingRight:'7px', fontSize:'25px'}}>\n                    <i className=\"col-sm-2 fa fa-suitcase\" title={this.props.pdfName}/>\n                </span>\n            </td>\n            <td>\n                <Button title=\"Kaldır\" color=\"secondary\"\n                        style={{padding: '0 7px 0 5px', marginTop: '4px'}}\n                        onClick={() => this.props.onDelete(this.state.index)}>\n                    <span style={{\n                        position: 'relative',\n                        left: '-5px',\n                        display: 'inline-block',\n                        padding: '8px 7px',\n                        height: '25px',\n                        background: 'rgba(0,0,0,0.15)',\n                        borderRadius: '3px 0 0 3px'\n                    }}>\n                        <i className=\"fa fa-trash\"/>\n                    </span>\n                    Sil\n                </Button>\n            </td>\n        </tr>\n        )\n    };\n};\n\nexport default SablonsuzTableRow;","import React, {Component} from 'react';\nimport {\n    Button,\n    CardBody,\n    CardHeader,\n    CardTitle,\n    Col,\n    Container,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n    Nav,\n    Row\n} from \"reactstrap\";\nimport Table from \"../../../components/Table/Table\";\nimport TextOverFlowTooltip from \"../../../components/TextOverFlowTooltip\";\nimport StickButton from \"../../../components/StickButton\";\nimport Alert from \"react-s-alert\";\nimport AddEmployeeModal from \"./component/AddEmployeeModal\";\nimport {showAxiosError} from \"../../../helper/helper\";\nimport {requestK} from \"../../../helper/APIUtils\";\nimport {renewListForDepartment} from \"../common/PeykHelper\";\nimport UploadFormFileModal from \"./component/UploadFormFileModal\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport 'react-datetime/css/react-datetime.css';\nimport 'moment/locale/tr';\nimport moment from \"moment\";\nimport ReactLoading from \"react-loading\";\nimport NavBarKS from \"../../../components/NavBarKS\";\nimport Joyride from \"react-joyride\";\nimport AutoCompleteList from \"../../../components/AutoCompleteList\";\nimport PdfViewer from \"../approval/PdfViewer/PdfViewer\";\nimport Swal from \"sweetalert2\";\nimport SablonsuzTableRow from \"./component/SablonsuzTableRow\";\nconst formatDateForJson = (dateString) => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    if (isNaN(date.getTime())) return dateString;\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n};\n\nclass FormSessionEditPage extends Component {\n    videos = [\n        {title: \"form islemi duzenler\", id: \"lTjRaQZI4_Y\"},\n    ];\n    switchVideo = (video) => {\n        this.setState({video: video, showEczaciHelpModal: true})\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            alert: null,\n            selection: [],\n            selectionName: [],\n            formSession: null,\n            formTemplate: null,\n            formEmployeeList: [],\n            formParamList: {},\n            extInputLabelList: [],\n            conditionalList: [],\n            declineList: [],\n            loading: false,\n            tableLoading: false,\n            showModal: false,\n            displaySelectInputDialog: false,\n            manual: false,\n            content: [],\n            total: 0,\n            searching: false,\n            searchQuery: undefined,\n            page: 0,\n            size: 10,\n            searchKey: \"\",\n            isKepOwner: false,\n            sessionIsExist: false,\n            isAttachmentLoaded: false,\n            removeAttachment: false,\n            attachment: null,\n            mergeToEmployee: false,\n            date: true,\n            disabledBtn: false,\n            selectedAntet: {value: \"-1\", label: \"Antetsiz\"},\n            isAnswerable: {value: 0, label: \"SADECE ONAY\"},\n            submissionType: {value: 0, label: \"NORMAL GÖNDERİM\"},\n            selectEmpManually: {value: 0, label: \"Dokümandan Otomatik Eşleştir\"},\n            steps: [\n                {\n                    target: '.card-title',\n                    content: \"form1 \",\n                    placement: \"center\",\n                },\n                {\n                    target: 'textarea.form-control:nth-child(1)',\n                    content: \"form2 \",\n                    placement: \"auto\",\n                },\n                {\n                    target: 'input.form-control:nth-child(1)',\n                    content: \"form3 \",\n                    placement: \"auto\",\n                },\n                {\n                    target: '.FormRenk:nth-child(2) div',\n                    content: \"form4 \",\n                    placement: \"auto\",\n                },\n                {\n                    target: 'button.zocial.User.btn.btn-secondary',\n                    content: \"form5 \",\n                    placement: \"auto\",\n                },\n                {\n                    target: 'button.zocial.Ek.btn.btn-secondary',\n                    content: \"form5 \",\n                    placement: \"auto\",\n                },\n                {\n                    target: 'button.zocial.Onay.btn.btn-secondary',\n                    content: \"form5 \",\n                    placement: \"auto\",\n                },\n            ],\n            locale: {\n                back: 'Geri',\n                close: 'Kapat',\n                last: 'Son',\n                next: 'İleri',\n                skip: 'Atla',\n            },\n            joyrideActive: false,\n            shouldRun: true,\n            width: window.innerWidth,\n            flag: 0,\n            stop: null,\n            surveyFormParameters: [],\n            letterHeadList: [],\n            value: '',\n            sablonsuzPdfFiles: [],\n            sablonsuzRows: [],\n            isTemplate: false,\n            isDecline: false,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({isKepOwner: this.props.isKepOwner, isTemplate: this.ifNoTemplate()});\n        this.readAntets();\n        this.readMailTemplate();\n    }\n    readMailTemplate = () => {\n        let self = this;\n        let params = {\n            url: `/signer/readFormMailTemplateInfo`,\n            method: \"get\"\n        };\n        requestK(params)\n            .then(function (response) {\n                if (response.data) {\n                    self.setState({mimeBody: response.data})\n                }\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n    ifNoTemplate = () => {\n        return this.props.location && (this.props.location.templateId === -1 || this.props.location.draftId > 0);\n    };\n\n    load = () => {\n        if (this.props.location && this.props.location.templateId) {\n            this.setState({sessionIsExist: false});\n            if (this.ifNoTemplate()) {\n                if(this.props.location.draftId > 0){\n                    this.readSessionFormTemplate();\n\n                }else{\n                    this.openAttachmentLoad();\n                }\n            } else {\n                this.readFormTemplate();\n            }\n        } else if (this.props.match && this.props.match.params && parseInt(this.props.match.params.formSessionId) > 0) {\n            this.setState({sessionIsExist: true});\n            this.readFormSession();\n        } else {\n            this.props.history.push({pathname: `/${this.props.peykName}/formsend`});\n        }\n    };\n\n    readAntets = () => {\n        let self = this;\n        let paramsLetterHead = {\n            url: '/companyinfo/readCompanyLetterHead',\n            method: \"get\"\n        };\n        requestK(paramsLetterHead)\n            .then(function (response) {\n                let letterList = [{value: \"-1\", label: \"Antetsiz\"}];\n                letterList = letterList.concat(response.data);\n                if (!(letterList && letterList.length > 0))\n                    return;\n                self.setState({letterHeadList: letterList});\n                self.load();\n            }).catch(function (error) {\n            showAxiosError(error);\n        });\n    };\n\n    readFormTemplate = () => {\n        let self = this;\n        requestK({url: `/formtemplate/readFormTemplate?id=${this.props.location.templateId}`, method: \"get\"})\n            .then(response => {\n                let formTemplate = response.data;\n                let mimeTitle = response.data.formName;\n                let mimeBody = response.data.mimeBody;\n                let selectedAntet = self.state.letterHeadList.find(item => item.value === formTemplate.antetId);\n                if (!!formTemplate && !!mimeTitle && !!mimeBody) {\n                    this.setState({\n                        formTemplate: formTemplate,\n                        isDecline: formTemplate.isDecline,\n                        mimeTitle: mimeTitle && mimeTitle.replace(\" Örneği\", \"\"),\n                        mimeBody: mimeBody,\n                        selectedAntet: selectedAntet,\n                        extInputLabelList: response.data.formParams ? JSON.parse(response.data.formParams).externalList : []\n                    });\n                } else {\n                    this.props.history.push(`/${this.props.peykName}/formsend`);\n                    Alert.error(\"Form şablonu bilgileri eksik olmamalıdır.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                }\n            })\n            .catch(error => showAxiosError(error));\n    };\n\n    readSessionFormTemplate = () => {\n        let self = this;\n        requestK({url: `/formsession/readFormSession?id=${this.props.location.draftId}`, method: \"get\"})\n            .then(params => {\n                let formSession = params.data;\n                let mimeTitle = formSession.mimeTitle;\n                let mimeBody = formSession.mimeBody;\n                let isAnswerable = formSession.formTemplate.isAnswerable;\n                if(isAnswerable === 1){\n                    isAnswerable= {value: 1, label: \"CEVAP ZORUNLU\"};\n                }else{\n                    isAnswerable= {value: 0, label: \"SADECE ONAY\"};\n                }\n                let submissionType = formSession.formTemplate.priority;\n                if(submissionType === 1){\n                    submissionType= {value: 1, label: \"ÖNCELLİKLİ\"};\n                }else{\n                    submissionType= {value: 0, label: \"NORMAL GÖNDERİM\"};\n                }\n\n\n\n                requestK({url: `/formsession/readFormSessionAndPdf?id=${this.props.location.draftId}`, method: \"get\",responseType: 'arraybuffer'})\n                    .then(response => {\n                        let pdfContent = response.data;\n                        const pdfContentBlob = new Blob([pdfContent], {type: response.headers[\"content-type\"]});\n                        const pdfFile = new File([pdfContentBlob], formSession.attachment.loadName, { type: 'application/pdf' });\n                        const previewUrl = URL.createObjectURL(pdfContentBlob);\n                        pdfFile.preview = previewUrl;\n                        const sablonsuzRowId = this.state.sablonsuzRows.length === 0 ? 0 : Math.max(...this.state.sablonsuzRows.map(o => o.sablonsuzRowId)) + 1;\n                        const pdfName = pdfFile.name;\n                        if (!!formSession) {\n                            this.setState({\n                                formSession: formSession,\n                                mimeTitle: mimeTitle,\n                                mimeBody: mimeBody,\n                                isAnswerable: isAnswerable,\n                                submissionType: submissionType,\n                                sablonsuzPdfFiles: [...this.state.sablonsuzPdfFiles, pdfFile],\n                                sablonsuzRows: [...this.state.sablonsuzRows, {sablonsuzRowId, pdfName}],\n                                isAttachmentLoaded: true,\n                                removeAttachment: false,\n                                mediaModal: true,\n                            });\n                        } else {\n                            this.props.history.push(`/${this.props.peykName}/formsend`);\n                            Alert.error(\"Form şablonu bilgileri eksik olmamalıdır.\", {\n                                position: 'top-right',\n                                effect: 'stackslide',\n                                timeout: 5000\n                            });\n                        }\n                    })\n                    .catch(error => {\n                        showAxiosError(error);\n                    });\n            })\n            .catch(error => {\n                showAxiosError(error);\n            });\n    };\n\n    readFormSession = () => {\n        let self = this;\n        requestK({\n            url: `/formsession/getList`,\n            method: \"post\",\n            data: {\n                formSessionId: parseInt(self.props.match.params.formSessionId)\n            }\n        }).then(function (response) {\n            let {formSession, formEmployeeList, kepAccountList} = response.data;\n            let selectedAntet = self.state.letterHeadList.find(item => item.value === formSession.formTemplate.antetId);\n            self.setState({\n                isDecline: formSession.formTemplate.isDecline,\n                formSession,\n                kepAccountList,\n                formTemplate: formSession.formTemplate,\n                selectedAntet: selectedAntet,\n                mimeTitle: (formSession.mimeTitle != null && formSession.mimeTitle.length > 0) ? formSession.mimeTitle : formSession.formTemplate.formName && formSession.formTemplate.formName.replace(\" Örneği\", \"\"),\n                mimeBody: (formSession.mimeBody != null && formSession.mimeBody.length > 0) ? formSession.mimeBody : formSession.formTemplate.mimeBody,\n                formParamList: formSession.formParamList && formSession.formParamList.length > 0 && JSON.parse(formSession.formParamList),\n                formEmployeeList: formEmployeeList,\n                extInputLabelList: formSession.formTemplate.formParams && formSession.formTemplate.formParams.length > 0 && JSON.parse(formSession.formTemplate.formParams)\n                    .externalList\n            });\n            if (formSession.attachment) {\n                self.setState({\n                    isAttachmentLoaded: true,\n                    attachment: formSession.attachment,\n                    mergeToEmployee: formSession.attachmentMergeByEmployee\n                });\n            }\n        }).catch(function (error) {\n            showAxiosError(error);\n            self.props.history.push({pathname: `/${self.props.peykName}/formsend`});\n        });\n    };\n\n    openAttachmentLoad = () => {\n        this.setState({\n            showUploadModal: true,\n            formTemplateId: (this.state.selected && this.state.selected.id) ? this.state.selected.id : null\n        });\n    };\n\n    uploadAttachment = (attachment) => {\n        if (this.ifNoTemplate()) {\n            const sablonsuzRowId = this.state.sablonsuzRows.length === 0 ? 0 : Math.max(...this.state.sablonsuzRows.map(o => o.sablonsuzRowId)) + 1;\n            const pdfName = attachment.name;\n            this.setState({\n                sablonsuzPdfFiles: [...this.state.sablonsuzPdfFiles, attachment],\n                sablonsuzRows: [...this.state.sablonsuzRows, {sablonsuzRowId, pdfName}],\n                isAttachmentLoaded: true,\n                removeAttachment: false});\n        } else {\n            this.setState({attachment, isAttachmentLoaded: true, removeAttachment: false});\n        }\n    };\n\n    handleDelete = (index) => {\n        if (this.ifNoTemplate()) {\n            const deletedPdfName = this.state.sablonsuzRows.find( row => row.sablonsuzRowId === index).pdfName;\n            this.removeFuncAttachment(deletedPdfName);\n            const sablonsuzRows = this.state.sablonsuzRows.filter( row => row.pdfName !== deletedPdfName);\n            this.setState({sablonsuzRows});\n        } else {\n            this.setState({ attachment: null, alert: null, isAttachmentLoaded: false, removeAttachment: true, mergeToEmployee: false });\n        }\n    };\n    removeFuncAttachment = (attachmentName) => {\n        const pdfList = this.state.sablonsuzPdfFiles.filter( sablonsuzPdfFile => sablonsuzPdfFile.name !== attachmentName);\n        if (pdfList.length === 0)\n             this.setState({ sablonsuzPdfFiles: pdfList, alert: null, isAttachmentLoaded: false, removeAttachment: true, mergeToEmployee: false });\n        else this.setState({ sablonsuzPdfFiles: pdfList, alert: null });\n        Alert.info(\"Doküman Eki iptal edildi.\", {\n            position: 'top-right',\n            effect: 'stackslide',\n            timeout: 5000\n        });\n    };\n\n    fetchData = (accessor, direction, page, size) => {\n        let self = this;\n        let sortStr = accessor !== undefined ? ('&sort=' + accessor + ',' + direction) : '';\n        let params = {\n            url: '/employee/getEmployeeList?page=' + page + '&size=' + size + sortStr,\n            method: \"post\",\n            data: self.state.formEmployeeList\n        };\n        self.setState({tableLoading: true, searching: true, manual: self.manual === true ? false : self.manual});\n        requestK(params)\n            .then(function (response) {\n                self.setState({\n                    page: page,\n                    size: size,\n                    total: response.data.totalElements,\n                    content: response.data.content,\n                    tableLoading: false,\n                    searching: false\n                });\n            }).catch(function (error) {\n            self.setState({tableLoading: false, searching: false});\n            showAxiosError(error);\n        });\n    };\n\n    removeEmployeeList = (row) => {\n        let newList = [];\n        this.state.formEmployeeList && this.state.formEmployeeList.map(employeeId => {\n            if (employeeId !== row.id) {\n                newList.push(employeeId);\n            }\n        });\n        let conditionalList = this.state.conditionalList;\n        conditionalList.splice(conditionalList.indexOf(row.id), 1);\n        let declineList = this.state.declineList;\n        declineList.splice(declineList.indexOf(row.id), 1);\n        this.setState({formEmployeeList: newList, manual: true, conditionalList, declineList});\n    };\n\n    clearAllEmployees = () => {\n        let conditionalList = this.state.conditionalList;\n        let declineList = this.state.declineList;\n        this.state.formEmployeeList && this.state.formEmployeeList.map(employeeId => {\n            conditionalList.splice(conditionalList.indexOf(employeeId), 1);\n            declineList.splice(declineList.indexOf(employeeId), 1);\n        });\n        this.setState({formEmployeeList: []});\n    };\n\n\n    handleDraftUpdateConfirmation = () => {\n        if (this.state.sablonsuzPdfFiles.length === 1) {\n\n            let self = this;\n            let formData1 = new FormData();\n            formData1.append(\"formSessionId\", this.state.formSession.id);\n            formData1.append(\"formParamList\", JSON.stringify(this.state.formParamList));\n            formData1.append(\"formEmployeeList\", this.state.formEmployeeList);\n            formData1.append(\"conditionalList\", this.state.conditionalList);\n            formData1.append(\"declineList\", this.state.declineList);\n            formData1.append(\"mimeTitle\", this.state.mimeTitle);\n            formData1.append(\"mimeBody\", this.state.mimeBody);\n            formData1.append(\"removeAttachment\", this.state.removeAttachment);\n            formData1.append(\"attachment\", this.state.sablonsuzPdfFiles[0]);\n            formData1.append(\"mergeToEmployee\", this.state.mergeToEmployee);\n\n            requestK({\n                url: `/formsession/updateFormSession`,\n                method: 'post',\n                data: formData1,\n            }).then(() => {\n                let formData2 = new FormData();\n                let formName = document.getElementById(\"sablonsuzTable\").rows[0].cells[1].getElementsByTagName('textarea')[0].value;\n                formData2.append('formSessionId', this.state.formSession.id);\n                formData2.append('formName', formName);\n                formData2.append('isAnswerable', this.state.isAnswerable.value);\n                formData2.append('submissionType', this.state.submissionType.value);\n\n                return requestK({\n                    url: `/formsession/updateFormTemplate`,\n                    method: 'post',\n                    data: formData2,\n                });\n            }).then(() => {\n                Alert.success('Şablonsuz Taslak Güncellendi', {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000,\n                });\n                self.setState({alert: null});\n            }).catch(function (error) {\n                showAxiosError(error);\n            });\n        }else{\n            this.setState({alert: null});\n            Alert.error(\"Taslağa sadece bir PDF eklenebilir.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n                });\n\n        }\n\n    };\n\n    renderMimeInputs = () => {\n        return <Container>\n            <Row>\n                <Col sm={3} style={{top: '5px'}}>\n                    E-Posta İleti Konusu:\n                </Col>\n                <Col sm={8}>\n                    <Input type=\"textarea\" rows={3} value={this.state.mimeTitle}\n                           style={{height: 'auto', border: '1px solid #E3E3E3', marginTop: '2px', padding: '3px 3px'}}\n                           onChange={(e) => this.setState({mimeTitle: e.target.value})}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={3} style={{top: '25px'}}>\n                    E-Posta İleti İçeriği:\n                </Col>\n                <Col sm={8}>\n                    <Input type=\"textarea\" rows={6} value={this.state.mimeBody}\n                           style={{height: 'auto', border: '1px solid #E3E3E3', marginTop: '2px', padding: '3px 3px'}}\n                           onChange={(e) => this.setState({mimeBody: e.target.value})}/>\n                </Col>\n            </Row>\n        </Container>\n    };\n\n    editHandleInputChange = (event) => {\n        const {name, value} = event.target;\n        let formParamList = { ...this.state.formParamList };\n        if (name.toString().includes(\"AdSoyad\")) {\n            var letter = /^[a-zA-Z\\süÜğİşŞçÇöÖ]+$/;\n            if (value.match(letter) || value.length === 0) {\n                formParamList[name] = value;\n            }\n        }else {\n            formParamList[name] = value;\n        }\n        this.setState({ formParamList });\n    };\n\n    renderInputList = () => {\n        let extInputLabelList = this.state.extInputLabelList;\n        let index = 0;\n        return <Form className=\"col-sm-10\">\n            {extInputLabelList && extInputLabelList.map(input =>\n                this.renderListInputs(input, index++)\n            )}\n        </Form>\n    };\n\n\n    renderListInputs = (input, index) => {\n        return (\n            <>\n                <FormGroup row key={input}>\n                    <Label\n                        sm={5}>\n                        {input.includes('span') ? input.replace(/span|<|>|b|[/]/g, \"\") + \":\" : input + \" :\"}\n                    </Label>\n                    <Col sm={7}>\n                        {!(input.includes('Tarih_') || input.includes('Tarih') || input.includes('Saat')) &&\n                            <Input type=\"textarea\"\n                                   rows={5}\n                                   name={input}\n                                   value={this.state.formParamList[input] || \"\"}\n                                   style={{ height: 'auto', border: '1px solid #E3E3E3', marginTop: '2px', padding: '3px 3px' }}\n                                   onChange={(e) => this.editHandleInputChange(e)} />\n                        }\n                        {(input.includes('Tarih_') || input.includes('Tarih')) &&\n                            <Input type=\"date\"\n                                   name={input}\n                                   value={this.state.formParamList[input] || \"\"}\n                                   onChange={(e) => this.editHandleInputChange(e)} />\n                        }\n                        {(input.includes('Saat')) &&\n                            <Input type=\"time\"\n                                   name={input}\n                                   value={this.state.formParamList[input] || \"\"}\n                                   step=\"60\"\n                                   onChange={(e) => this.editHandleInputChange(e)} />\n                        }\n                    </Col>\n                </FormGroup>\n                <hr style={{ height: '3px', backgroundColor: '#E3E3E3', margin: '20px 0' }} />\n            </>\n        );\n    }\n\n    setAlertForSendWithAttachment = (flag) => {\n        this.draftButtonClicked = false;\n        this.setState({\n            alert: (\n                <SweetAlert showCancel warning\n                            confirmBtnText=\"Tamam\"\n                            cancelBtnText=\"İptal\"\n                            confirmBtnBsStyle=\"success\"\n                            cancelBtnBsStyle=\"default\"\n                            title=\"Bilgilendirme\"\n                            onConfirm={() => flag === true ? this.acceptOperation() : this.checkParametersAndSendForEmployees()}\n                            onCancel={() => {\n                                this.setState({alert: null, saveBtnLoading: false});\n                                Alert.info(\"İşlem iptal edildi.\", {\n                                    position: 'top-right',\n                                    effect: 'stackslide',\n                                    timeout: 5000\n                                });\n                            }}>\n                    <div>\n                        <label style={{fontSize: '20px', margin: '-10px 10px 5px 10px'}}>\n                            Yüklenen dokümanın tamamı seçilen tüm çalışanlara ayrı ayrı gönderilecektir </label>\n                    </div>\n\n                </SweetAlert>\n            )\n        });\n    }\n    setAlertSaveDraft= () => {\n        this.setState({\n            alert: (\n                <SweetAlert showCancel warning\n                            confirmBtnText=\"Evet\"\n                            cancelBtnText=\"Hayır\"\n                            confirmBtnBsStyle=\"success\"\n                            cancelBtnBsStyle=\"default\"\n                            title=\"Bilgilendirme\"\n                            onConfirm={ this.acceptOperation}\n                            onCancel={() => {\n                                this.setState({alert: null, saveBtnLoading: false});\n                                Alert.info(\"İşlem iptal edildi.\", {\n                                    position: 'top-right',\n                                    effect: 'stackslide',\n                                    timeout: 5000\n                                });\n                            }}>\n                    <div>\n                        <label style={{fontSize: '20px', margin: '-10px 10px 5px 10px'}}>\n                            PDF taslak olarak kayıt edilecektir onaylıyor musunuz? </label>\n                    </div>\n\n                </SweetAlert>\n            )\n        });\n    }\n    setAlertUpdateDraft= () => {\n        this.setState({\n            alert: (\n                <SweetAlert showCancel warning\n                            confirmBtnText=\"Evet\"\n                            cancelBtnText=\"Hayır\"\n                            confirmBtnBsStyle=\"success\"\n                            cancelBtnBsStyle=\"default\"\n                            title=\"Bilgilendirme\"\n                            onConfirm={ this.handleDraftUpdateConfirmation}\n                            onCancel={() => {\n                                this.setState({alert: null, saveBtnLoading: false});\n                            }}>\n                    <div>\n                        <label style={{fontSize: '20px', margin: '-10px 10px 5px 10px'}}>\n                            Şablonsuz taslak güncellenecektir onaylıyor musunuz? </label>\n                    </div>\n\n                </SweetAlert>\n            )\n        });\n    }\n\n    checkParametersAndSendForEmployees = () => {\n        this.setState({alert: null});\n        let params = {\n            url: '/employee/checkParameters?templateId=' + this.state.formTemplate.id,\n            method: \"post\",\n            data: this.state.formEmployeeList\n        };\n        this.setState({disabledBtn: true});\n        requestK(params)\n            .then(response => {\n                if (response.data && !!response.data.length) {\n                    this.setState({disabledBtn: false});\n                    this.setState({\n                        alert: (\n                            <SweetAlert warning\n                                        confirmBtnText=\"Onayla\"\n                                        cancelBtnText=\"İptal\"\n                                        confirmBtnBsStyle=\"primary\"\n                                        cancelBtnBsStyle=\"error\"\n                                        title=\"Eksik Parametre Verisi\"\n                                        showCancel\n                                        onConfirm={() => {\n                                            this.setState({alert: null}, ()=> this.acceptOperation());\n                                        }}\n                                        onCancel={() => this.setState({alert: null})}>\n                                <div>\n                                    <label>{\"Seçili form şablonu için listenizde verisi eksik olan çalışanlar vardır. Aşağıda listelenmiştir. Eksik veri olmasına rağmen yine de onaylansın mı?\"}</label>\n                                    <Input type=\"textarea\" rows={5}\n                                           style={{height: '200px', border: '1px solid #E3E3E3', marginTop: '2px'}}\n                                           value={response.data}\n                                           disable={true}/>\n                                </div>\n                            </SweetAlert>\n                        )\n                    });\n                } else {\n                    this.acceptOperation();\n                }\n            })\n            .catch(error => {\n                this.setState({disabledBtn: false});\n                showAxiosError(error);\n            });\n    }\n    acceptAndPreview = () => {\n        if (this.ifNoTemplate()) {\n            this.draftButtonClicked = false;\n            if (this.isNoTemplateValid()) {\n                if (!this.state.mergeToEmployee && (this.state.formEmployeeList || this.state.formEmployeeList.length > 0)) {\n                    this.setAlertForSendWithAttachment(true);\n                } else {\n                    this.acceptOperation();\n                }\n            }\n        }\n        else if (this.state.formEmployeeList.length === 0) {\n            Alert.info(\"Çalışan seçimi yapılmalıdır.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n        }\n        else if (!this.isValid() || this.state.extInputLabelList.length !== 0) {\n            if (this.state.formParamList && Object.keys(this.state.formParamList).length !== this.state.extInputLabelList.length || (Object.values(this.state.formParamList).includes(\"\"))) {\n                Swal({\n                    title: 'Uyarı! ',\n                    text: (\"Giriş Yapılacak Veriler alanında boş veri alanları bulunmakta, yine de form oluşturulsun mu?\"),\n                    cancelButtonText: \"Hayır\",\n                    confirmButtonText: 'Evet',\n                    showCancelButton: true,\n                }).then((result) => {\n                    if (result.dismiss === 'cancel' || result.dismiss === 'overlay') {\n                        this.props.history.push({pathname: `/${this.props.peykName}/formsend/create`});\n                    } else if (this.state.formEmployeeList.length === 0) {\n                        Alert.info(\"Çalışan seçimi yapılmalıdır.\", {\n                            position: 'top-right',\n                            effect: 'stackslide',\n                            timeout: 5000\n                        });\n                    } else {\n                        this.checkParametersAndSendForEmployees();\n                    }\n                });\n            } else {\n                this.checkParametersAndSendForEmployees();\n            }\n        } else {\n            if (this.state.isAttachmentLoaded && !this.state.mergeToEmployee &&\n                (this.state.formEmployeeList || this.state.formEmployeeList.length > 0)) {\n                this.setAlertForSendWithAttachment(false);\n            } else {\n                if (this.isNoTemplateValid1()) {\n                    this.checkParametersAndSendForEmployees();\n                }\n            }\n        }\n    };\n\n    timerStatus(status){\n        this.props.onTimerStatus(status);\n    };\n\n    acceptOperation = () => {\n        this.setState({alert: null});\n        if ((this.state.mimeTitle && this.state.mimeTitle.toString().includes(\"{\")) ||\n            (this.state.mimeBody && this.state.mimeBody.toString().includes(\"{\"))) {\n            Alert.error(\"E-posta içerik alanında parametre verisi veya '{' karakteri bulunmamalıdır. \" +\n                \"Tüm e-posta gönderimleri otomatik olarak 'Sayın {ÇalışanAdSoyad} şablonu ile gitmektedir.'\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 15000\n            });\n        } else {\n            let params;\n            let formData = this.createUpdateFormData();\n            let draft = this.draftButtonClicked ? true : false;\n            formData.append(\"draft\", draft);\n            if (!this.ifNoTemplate()) {\n                if (!this.state.sessionIsExist) {\n                    formData.append(\"formTemplateId\", this.state.formTemplate.id);\n                    params = {\n                        url: `/formsession/createFormSession`,\n                        method: \"post\",\n                        data: formData\n                    };\n                } else {\n                    formData.append(\"formSessionId\", this.state.formSession.id);\n                    formData.append(\"attachment\", this.state.sablonsuzPdfFiles[0]);\n                    params = {\n                        url: `/formsession/updateFormSession`,\n                        method: \"post\",\n                        data: formData\n                    };\n                }\n            } else if (this.state.sablonsuzPdfFiles.length === 1) {\n                let formName = document.getElementById(\"sablonsuzTable\").rows[0].cells[1].getElementsByTagName('textarea')[0].value;\n                formData.set(\"attachment\", this.state.sablonsuzPdfFiles[0]);\n                formData.append(\"formName\", formName);\n                formData.append(\"isAnswerable\", this.state.isAnswerable.value);\n                formData.append(\"submissionType\", this.state.submissionType.value);\n                params = {\n                    url: `/formsession/createFormSessionWithoutTemplate`,\n                    method: \"post\",\n                    data: formData\n                };\n            } else {\n                if(this.draftButtonClicked){\n                    Alert.error(\"Taslağa sadece bir PDF eklenebilir.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                }else{\n                    this.acceptSablonsuzOperation(formData);\n                }\n                return;\n            }\n            this.setState({disabledBtn: true});\n            this.timerStatus(true);\n            requestK(params)\n                .then(response => {\n                    if(this.draftButtonClicked){\n                        this.setState({disabledBtn: false});\n                        Alert.info(\"Taslak Kaydedildi.\", {\n                            position: 'top-right',\n                            effect: 'stackslide',\n                            timeout: 5000\n                        });\n                    }else{\n                        this.waitCompletion(response.data);\n                    }\n                }).catch(error => {\n                showAxiosError(error);\n                this.setState({disabledBtn: false, completionLoading: false});\n                this.timerStatus(false);\n            });\n        }\n    };\n\n    acceptSablonsuzOperation = (formData) => {\n        let sablonsuzPdfFiles = this.state.sablonsuzPdfFiles;\n        let hataliPdfFiles = [], pdfCount = 0, lastSessionId;\n        formData.append(\"isAnswerable\", this.state.isAnswerable.value);\n        formData.append(\"submissionType\", this.state.submissionType.value);\n        for (let sablonsuzPdfFile of sablonsuzPdfFiles) {\n            formData.set(\"attachment\", sablonsuzPdfFile);\n            let formName = document.getElementById(\"sablonsuzTable\").rows[pdfCount++].cells[1].getElementsByTagName('textarea')[0].value;\n            formData.set(\"formName\", formName);\n            let params = {\n                url: `/formsession/createFormSessionWithoutTemplate`,\n                method: \"post\",\n                data: formData\n            };\n            try {\n                this.setState({disabledBtn: true});\n                this.timerStatus(true);\n                requestK(params)\n                    .then(response => {\n                        this.waitCompletion(response.data);\n                    }).catch(error => {\n                    Alert.error(sablonsuzPdfFile.name + \" dosyası işlenemedi. Hata mesajı\\n\" + error.name  + \"\\n\" + error.message, {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 7000\n                    });\n                    hataliPdfFiles.push(sablonsuzPdfFile);\n                    this.setState({disabledBtn: false, completionLoading: false});\n                    this.timerStatus(false);\n                });\n            }\n            catch(err) {\n                Alert.error(sablonsuzPdfFile.name + \" dosyası işlenemedi. Server hata mesajı\\n\" + err.name  + \"\\n\" + err.message, {\n                    position: 'top-right',\n                    effect: 'stackslide',\n                    timeout: 5000\n                });\n                hataliPdfFiles.push(sablonsuzPdfFile);\n                this.setState({disabledBtn: false, completionLoading: false});\n                this.timerStatus(false);\n            }\n        }\n        if (hataliPdfFiles.length === sablonsuzPdfFiles.length) {\n            this.setState({completionLoading: false, disabledBtn: false});\n            Alert.info(\"PDF'ler yüklenemedi, lütfen sistem yöneticinizle görüşünüz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            this.timerStatus(false);\n        }\n        else if (hataliPdfFiles.length > 0) {\n            Alert.info(\n                hataliPdfFiles.map( pdfFile => pdfFile.name) +\n                \" PDF(ler)i yüklenemedi, lütfen sistem yöneticinizle görüşünüz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 10000\n            });\n            this.timerStatus(false);\n        }\n    }\n\n    createUpdateFormData = () => {\n        let formData = new FormData();\n        if (this.state.formParamList === null) {\n            formData.append(\"formParamList\", JSON.stringify(this.state.formParamList));\n            formData.append(\"formEmployeeList\", this.state.formEmployeeList);\n            formData.append(\"mimeTitle\", this.state.mimeTitle);\n            formData.append(\"mimeBody\", this.state.mimeBody);\n            formData.append(\"removeAttachment\", this.state.removeAttachment);\n            formData.append(\"attachment\", this.state.attachment);\n            formData.append(\"mergeToEmployee\", this.state.mergeToEmployee);\n            formData.append(\"conditionalList\", this.state.conditionalList);\n            formData.append(\"declineList\", this.state.declineList);\n            return formData;\n        }\n        else if (Object.keys(this.state.formParamList).length === 0) {\n            let formParamList = {};\n            for (let i = 0; i < this.state.extInputLabelList.length; i++) {\n                formParamList[this.state.extInputLabelList[i]] = \"\";\n            }\n            formData.append(\"formParamList\", JSON.stringify(formParamList));\n        } else {\n            let formParamList = { ...this.state.formParamList };\n            let formParamListArray = Object.keys(this.state.formParamList);\n            let extInputLabelList = this.state.extInputLabelList;\n\n            extInputLabelList.forEach(value => {\n                if (!formParamListArray.includes(value)) {\n                    formParamList[value] = \"\";\n                }\n            });\n            Object.keys(formParamList).forEach(key => {\n                if (key.includes(\"Tarih\")) {\n                    formParamList[key] = formatDateForJson(formParamList[key]);\n                }\n            });\n\n            formData.append(\"formParamList\", JSON.stringify(formParamList));\n        }\n\n        if (!(this.ifNoTemplate() && !!this.state.mergeToEmployee && !this.state.selectEmpManually.value)) {\n            formData.append(\"formEmployeeList\", this.state.formEmployeeList);\n        } else {\n            formData.append(\"formEmployeeList\", []);\n        }\n        formData.append(\"mimeTitle\", this.state.mimeTitle);\n        formData.append(\"mimeBody\", this.state.mimeBody);\n        formData.append(\"removeAttachment\", this.state.removeAttachment);\n        formData.append(\"attachment\", this.state.attachment);\n        formData.append(\"mergeToEmployee\", this.state.mergeToEmployee);\n        formData.append(\"conditionalList\", this.state.conditionalList);\n        formData.append(\"declineList\", this.state.declineList);\n        return formData;\n    };\n\n    waitCompletion = (sessionId) => {\n        let self = this;\n        let params = {\n            url: '/formsession/waitIfCompletionOK',\n            method: \"post\",\n            data: sessionId\n        };\n        self.setState({ completionLoading: true });\n        requestK(params)\n            .then((response) => {\n                if (response.data) {\n                    if (self.state.sablonsuzPdfFiles.length > 1)\n                        self.props.history.push({ pathname: `/${self.props.peykName}/formsessionlist` });\n                    else\n                        self.props.history.push({ pathname: `/${self.props.peykName}/formsession/${sessionId}` });\n\n                    self.setState({ completionLoading: false, disabledBtn: false });\n                    self.timerStatus(false);\n                    Alert.info(\"Yükleme tamamlandı.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                    self.timerStatus(false);\n                } else {\n                    setTimeout(() => this.waitCompletion(sessionId), 2000);\n                }\n            })\n            .catch((error) => {\n                self.setState({ completionLoading: false, disabledBtn: false });\n                showAxiosError(error);\n                self.timerStatus(false);\n            });\n    };\n    renderFormTemplateInfo = () => {\n        return (\n            <div className=\"row\" style={{paddingLeft: this.ifNoTemplate() ? '20px' : '130px'}}>\n                <div className=\"col-sm-3\"/>\n                <div className=\"col-sm-9\" align=\"center\">\n                    <label style={{fontWeight: 'bold', display: 'block', textAlign: 'center', margin: '0 20px 20px 0'}}>\n                        Form Şablonu Bilgileri\n                    </label>\n                </div>\n                <div className=\"col-sm-3\"><label>Form Türü:</label></div>\n                <div className=\"col-sm-9\" align=\"center\">\n                    {this.ifNoTemplate() &&\n                        <label style={{fontStyle: 'italic'}}>{\"ŞABLONSUZ\"}</label>}\n                    {!this.ifNoTemplate() &&\n                        <label style={{fontStyle: 'italic'}}>\n                            {this.state.formTemplate ? this.state.formTemplate.formType.category : \"\"}\n                        </label>}\n                </div>\n                {!this.ifNoTemplate() &&\n                    <div className=\"col-sm-3\"><label>Form Adı:</label></div>}\n                {!this.ifNoTemplate() &&\n                    <div className=\"col-sm-9\" align=\"center\">\n                        <label\n                            style={{fontStyle: 'italic', whiteSpace: 'pre'}}>{this.state.formTemplate ? this.state.formTemplate.formName : \"\"}\n                        </label>\n                    </div>}\n                {!this.ifNoTemplate() &&\n                    <div className=\"col-sm-3\"><label>Formun Son Güncellenme Tarihi:</label></div>}\n                {!this.ifNoTemplate() &&\n                    <div className=\"col-sm-9\" align=\"center\">\n                        <label style={{fontStyle: 'italic'}}>\n                            {this.state.formTemplate && this.state.formTemplate.updatedAt ? moment(this.state.formTemplate.updatedAt.replace(\"T\", \" \").split('.')[0]).format(\"DD-MM-YYYY HH:mm:ss\") : \"\"}\n                        </label>\n                    </div>}\n                <div className=\"col-sm-3\"><label>İşlem Yapısı</label></div>\n                <div className=\"col-sm-9\" align=\"center\">\n                    {this.ifNoTemplate() &&\n                        <div className=\"col-sm-8\">\n                            <AutoCompleteList name={\"İşlem\"}\n                                              useUpperCase={true} onlyLabel={false} allowNew={true}\n                                              list={[{value: 0, label: \"Sadece Onay\"},\n                                                     {value: 1, label: \"Cevap Zorunlu\"}]}\n                                              value={this.state.isAnswerable}\n                                              onChange={e => this.setState({isAnswerable: e})}\n                                              updateList={e => this.setState({isAnswerable: e})}\n                                              placeholder={\"İşlem Seçiniz ...\"}/>\n                        </div>\n                    }\n                    {!this.ifNoTemplate() && this.state.formTemplate &&\n                        <label style={{fontStyle: 'italic'}}>\n                            <span className=\"isAnswerable\"\n                                  style={this.state.formTemplate.isAnswerable === 1 ? {\n                                      color: 'blue',\n                                      fontWeigth: 'bold'\n                                  } : {color: 'gray'}}>\n                                        {this.state.formTemplate.isAnswerable === 1 ? \"Cevap Zorunlu\" : \"Sadece Onay\"}\n                            </span>\n                        </label>}\n                </div>\n                {this.ifNoTemplate() &&\n                    <div className=\"col-sm-3\"><label>Gönderim Türü</label></div>}\n                {this.ifNoTemplate() &&\n                    <div className=\"col-sm-9\" align=\"center\">\n                        <div className=\"col-sm-8\">\n                            <AutoCompleteList name={\"Gönderim Türü\"}\n                                              useUpperCase={true} onlyLabel={false} allowNew={true}\n                                              list={[{value: 0, label: \"Normal Gönderim\"},\n                                                     {value: 1, label: \"Öncelikli\"}]}\n                                              value={this.state.submissionType}\n                                              onChange={e => this.setState({submissionType: e})}\n                                              updateList={e => this.setState({submissionType: e})}\n                                              placeholder={\"İşlem Seçiniz ...\"}/>\n                        </div>\n                    </div>\n                }\n                {!this.ifNoTemplate() &&\n                    <div className=\"col-sm-3\"><label>Antet</label></div>}\n                {!this.ifNoTemplate() &&\n                    <div className=\"col-sm-9\" align=\"center\">\n                        <div className={this.ifNoTemplate() ? \"col-sm-8\" : \"col-sm-3\"}>\n                            <AutoCompleteList name={\"Antet\"}\n                                              useUpperCase={true} onlyLabel={false} allowNew={true}\n                                              list={this.state.letterHeadList}\n                                              value={this.state.selectedAntet}\n                                              onChange={(e) => this.onChangeAntet(\"antet\", e)}\n                                              updateList={e => this.setState({letterHeadList: e})}\n                                              placeholder={\"Antet Seçiniz ...\"}/>\n                        </div>\n                    </div>}\n                {this.ifNoTemplate() && this.renderMimeInputs()}\n                {this.state.isAttachmentLoaded &&\n                    <div className=\"col-sm-12\">\n                        <div className=\"row\">\n                            <hr style={{display: 'block', height: '1px', border: '0'}}/>\n                        </div>\n                        {this.ifNoTemplate() && <table id={\"sablonsuzTable\"}>\n                            <tbody>\n                            {this.state.sablonsuzRows.map((row) => (\n                                <SablonsuzTableRow\n                                    key={row.sablonsuzRowId}\n                                    index={row.sablonsuzRowId}\n                                    pdfName={row.pdfName}\n                                    onDelete={e => this.handleDelete(e)}/>\n                            ))}\n                            </tbody>\n                        </table>}\n                        {!this.ifNoTemplate() && <div className=\"row\">\n                            <div className=\"col-sm-3\"><label>Eklenen Doküman: </label></div>\n                            <div className=\"col-sm-6\">\n                                <label style={{fontStyle: 'italic', fontWeight: 'bold', verticalAlign: 'sub'}}>\n                                    {this.state.attachment.name ? this.state.attachment.name : this.state.attachment.loadName}\n                                </label>\n                            </div>\n                            <Button title=\"Kaldır\" color=\"secondary\"\n                                    style={{padding: '0 7px 0 5px', marginTop: '4px'}}\n                                    disabled={this.state.disabledBtn}\n                                    onClick={e => this.handleDelete(e)}>\n                                <span style={{\n                                    position: 'relative',\n                                    left: '-5px',\n                                    display: 'inline-block',\n                                    padding: '8px 7px',\n                                    height: '31px',\n                                    background: 'rgba(0,0,0,0.15)',\n                                    borderRadius: '3px 0 0 3px'\n                                }}>\n                                    <i className=\"fa fa-trash\"/>\n                                </span>\n                                Sil\n                            </Button>\n                        </div>}\n                        <div className=\"row\">\n                            <div className=\"col-sm-6\">\n                                <FormGroup check>\n                                    <Label check>\n                                        <Input type=\"radio\" name=\"radio1\" checked={!this.state.mergeToEmployee}\n                                               onChange={() => this.setState({mergeToEmployee: !this.state.mergeToEmployee})}/>{' '}\n                                        Tümüne Ekle\n                                    </Label>\n                                </FormGroup>\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <FormGroup check style={{left: '-40px'}}>\n                                    <Label check>\n                                        <Input type=\"radio\" name=\"radio1\" checked={this.state.mergeToEmployee}\n                                               onChange={() => this.setState({mergeToEmployee: !this.state.mergeToEmployee})}/>{' '}\n                                        Çalışanla Eşleştir\n                                    </Label>\n                                </FormGroup>\n                            </div>\n                        </div>\n                        {this.ifNoTemplate() && !!this.state.mergeToEmployee &&\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\"/>\n                                <div className=\"col-sm-6\">\n                                    <FormGroup check style={{left: '-40px'}}>\n                                        <AutoCompleteList name={\"ellesec\"}\n                                                          onlyLabel={false} allowNew={false}\n                                                          list={[{value: 0, label: \"Dokümandan Otomatik Eşleştir\"},\n                                                                 {value: 1, label: \"Listeden Seç\"}]}\n                                                          value={this.state.selectEmpManually}\n                                                          onChange={(e) => this.setState({selectEmpManually: e})}\n                                                          updateList={e => this.setState({selectEmpManually: e})}\n                                                          placeholder={\"Eylem Seçiniz ...\"}/>\n                                    </FormGroup>\n                                </div>\n                            </div>}\n                        { this.props.location.redirectToCreatePage1 &&\n                            <div className=\"col-sm-6 \" >\n                                <button type=\"button\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                        style={{background: 'rgb(243, 157, 157)', marginLeft: '500px',marginTop: '30px'}}\n                                        rel=\"tooltip\" className=\"TekBtn kaydet btn-icon\"\n                                        onClick={()=>{\n                                            this.draftButtonClicked = true;\n                                            if(this.isNoTemplateValid()){\n                                                this.setAlertSaveDraft();\n                                            }\n                                        }}\n                                >Taslağı Kaydet\n                                </button>\n                            </div>\n                        }\n                        { this.props.location.redirectToCreatePage &&\n                            <div className=\"col-sm-6 \" >\n                                <button type=\"button\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                        style={{background: 'rgb(243, 157, 157)', marginLeft: '500px',marginTop: '30px'}}\n                                        rel=\"tooltip\" className=\"TekBtn kaydet btn-icon\"\n                                        onClick={()=>{\n                                            this.draftButtonClicked = true;\n                                            if(this.isNoTemplateValid()){\n                                                this.setAlertUpdateDraft();\n                                            }\n                                        }}\n                                >Güncelle\n                                </button>\n                            </div>}\n                    </div>}\n\n            </div>\n        );\n    };\n\n    renderFormInputInfo = () => {\n        return (\n            <div className=\"row\" style={{paddingLeft: '20px'}}>\n                <div className=\"col-sm-12\">\n                    <label style={{fontWeight: 'bold', display: 'block', textAlign: 'center', margin: '0 20px 20px 0'}}>\n                        Giriş Yapılacak Veriler\n                    </label>\n                </div>\n                {this.renderInputList()}\n\n            </div>\n        );\n    };\n\n    activateJoyride() {\n        if (this.state.joyrideActive === false) {\n            this.setState({flag: 0});\n            this.setState({joyrideActive: true});\n            if (this.state.width < 1000) {\n                this.setState({flag: 1});\n            }\n        }\n    }\n\n    callback = (data) => {\n        if (data.action === 'close' && data.type === 'step:after') {\n            this.setState({shouldRun: false});\n            this.setState({flag: 0});\n        }\n        if (data.action === 'stop' || data.action === 'reset' || data.action === 'skip') {\n            this.setState({shouldRun: true});\n            this.setState({joyrideActive: false});\n            this.setState({flag: 0});\n            this.activateJoyride();\n        }\n    };\n\n    renderEmployeeListInfo = () => {\n        let columnList = [\n\n            {\n                Header: \"Adı\",\n                accessor: \"name\"\n            },\n            {\n                Header: \"Soyadı\",\n                accessor: \"surname\"\n            },\n            {\n                accessor: [\n                    {Header: \"Departman\", accessor: \"department\"},\n                    {Header: \"Görev\", accessor: \"jobTitle\"}\n                ],\n                Cell: row => (\n                    <div style={{margin: 0}}>\n                        {row.department && <TextOverFlowTooltip text={row.department.name}/>}\n                        {row.department && <br/>}\n                        <TextOverFlowTooltip text={row.jobTitle}/>\n                    </div>\n                )\n            },\n            {\n                Header: \"TCKN\",\n                accessor: \"tckn\"\n            }\n        ];\n        if (!this.state.formSession || !this.state.formSession.areFormsSent) {\n            columnList.push(\n                {\n                    Header: \"İşlemler\",\n                    accessor: \"\",\n                    sortable: false,\n                    Cell: row => (\n                        <div style={{textAlign: 'left'}}>\n                            <button title=\"Çalışanı Kaldır\" className=\"btn-icon btn btn-danger btn-sm\"\n                                    disabled={this.state.disabledBtn}\n                                    style={{margin: '0px 3px'}}\n                                    onClick={() => this.removeEmployeeList(row)}>\n                                <i className=\"now-ui-icons ui-1_simple-remove\"/>\n                            </button>\n                        </div>\n                    ),\n                    width: '35px'\n                }\n            );\n        }\n        let columns = renewListForDepartment(this, columnList, \"accessor\");\n\n        return (\n            <div className=\"row col-sm-12\" style={{display: 'inline-block'}}>\n                <div className=\"col-sm-12\">\n                    <label style={{fontWeight: 'bold', display: 'block', textAlign: 'center', margin: '0 20px 20px 0'}}>\n                        Seçilen Çalışanlar\n                    </label>\n                </div>\n                {this.state.formEmployeeList && this.state.formEmployeeList.length > 0 &&\n                    <div style={{padding: '10px'}}>\n                        <div id='clearAllContainer' style={{position: 'relative'}}>\n                            <button id='clearAllEmployess' className='simpleButton trash'\n                                    data-toggle='toggle'\n                                    title='Hepsini Sil'\n                                    style={{\n                                        position: 'absolute',\n                                        bottom: '5px',\n                                        right: '10px'\n                                    }}\n                                    onClick={() => this.clearAllEmployees()}\n                            />\n                        </div>\n                        <Table columns={columns}\n                               content={this.state.content}\n                               loading={this.state.tableLoading}\n                               total={this.state.total}\n                               page={this.state.page}\n                               manual={this.state.manual}\n                               size={this.state.size}\n                               options={[\"5\", \"10\", \"20\", \"50\", \"100\"]}\n                               fetchData={this.fetchData}/>\n                    </div>}\n                {!(this.state.formEmployeeList && this.state.formEmployeeList.length > 0) &&\n                    <div className=\"col-sm-12\"\n                         style={{display: 'inline-block', textAlign: '-webkit-center', marginLeft: '-5px'}}>\n                        <label style={{\n                            display: 'table-caption', marginRight: '70px', lineHeight: '27px',\n                            border: 'dashed 1.2px #bbb', borderRadius: '12px', height: '30px', width: '220px'\n                        }}\n                               onClick={() => this.setState({showModal: true})}>\n                            Lütfen çalışan seçimi yapınız.\n                        </label>\n                    </div>}\n            </div>\n        );\n    };\n\n    onChangeAntet(name, antet) {\n        let self = this;\n        self.setState({selectedAntet: antet, preview: false});\n        self.renderPreview();\n    }\n\n    render() {\n        let steps = this.state.steps;\n        let locale = this.state.locale;\n        return <div className=\"row baseBackground\">\n            {this.state.alert}\n            {this.state.joyrideActive &&\n                <Joyride\n                    disableBeacon={false}\n                    autoStart\n                    locale={locale}\n                    steps={steps}\n                    continuous={true}\n                    run={this.state.shouldRun}\n                    scrollToFirstStep={true}\n                    showProgress={true}\n                    showSkipButton={true}\n                    scrollToSteps={true}\n                    disableCloseOnEsc={true}\n                    disableOverlay={false}\n                    disableOverlayClicks={false}\n                    keyboardNavigation={true}\n                    hideBackButton={false}\n                    disableOverlayClose={true}\n                    callback={this.callback}\n                    holePadding={0}\n                    shouldRun={this.state.shouldRun}\n                    styles={{\n                        options: {\n                            zIndex: 100000,\n                            primaryColor: \"#50a8e2\"   // \"#fc9636\"\n                        }\n                    }}/>\n            }\n            <Nav className=\"topbar\" style={{paddingLeft: '14px', height: '53px'}}>\n                <NavBarKS offsetWidth={this.props.offsetWidth} innerWidth={window.innerWidth}\n                          btnDisabled={this.state.btnDisabled}\n                          selection={this.state.selection} name='archiveInvoiceList'>\n                    <StickButton position=\"leftSide\" className=\"zocial GeriDon\" style={{fontSize: 'x-small'}}\n                                 label=\"Geri\" title=\"Önceki Sayfaya Git\"\n                                 disabled={this.state.disabledBtn}\n                                 onClick={() => {\n                                     if (this.props.location.previousPage === \"formsession\" && this.props.match && this.props.match.params) {\n                                         this.props.history.push({pathname: `/${this.props.peykName}/formsession/${this.props.match.params.formSessionId}`});\n                                     } else if (this.props.location.previousPage === \"sendhealthform\") {\n                                         this.props.history.push({pathname: `/${this.props.peykName}/sendhealthform`});\n                                     } else if (this.props.location.previousPage === \"sendZimmetForm\") {\n                                         this.props.history.push({pathname: `/${this.props.peykName}/sendZimmetForm`});\n                                     } else if (this.props.location.previousPage === \"sendISGForm\") {\n                                         this.props.history.push({pathname: `/${this.props.peykName}/sendISGForm`});\n                                     }else if (this.props.location.previousPage === \"sendKVKKForm\") {\n                                         this.props.history.push({pathname: `/${this.props.peykName}/sendKVKKForm`});\n                                     } else {\n                                         if(this.props.location.redirectToCreatePage) {\n                                            this.props.history.push({pathname: `/${this.props.peykName}/formtemplate/`})\n                                         }else {\n                                             this.props.history.push({pathname: `/${this.props.peykName}/formsend`});\n                                         }\n                                     }\n                                 }}/>\n                    {!(this.ifNoTemplate() && !!this.state.mergeToEmployee && !this.state.selectEmpManually.value) &&\n                        <StickButton position=\"leftSide\" className=\"zocial User\" style={{fontSize: 'x-small'}}\n                                     label=\"Çalışan Ekle\" title=\"Çalışanları Ekle\"\n                                     disabled={this.state.disabledBtn}\n                                     onClick={() => this.setState({showModal: true})}/>}\n                    <StickButton position=\"leftSide\" className=\"zocial Ek\" style={{fontSize: 'x-small'}}\n                                 disabled={this.state.disabledBtn}\n                                 label=\"Doküman Ekle\" title=\"Formlara Ek Doküman Ekle\"\n                                 onClick={this.openAttachmentLoad}/>\n                    <StickButton position=\"leftSide\" className=\"zocial Onay\"\n                                 style={{fontSize: 'x-small', backgroundColor: 'forestgreen'}}\n                                 label=\"Onayla\" title=\"Bilgileri onayla\"\n                                 disabled={this.state.disabledBtn}\n                                 onClick={this.acceptAndPreview}/>\n\n                    <div className=\"helpButtonContainer\" style={{marginRight: \"4em\", marginTop: \"1.4em\"}}>\n                        <button className=\"helpButton\" onClick={() => {\n                            this.activateJoyride()\n                        }}>\n                            <span className=\"tooltipText\">Size yardımcı olabilirim</span>\n                            <i className=\"far fa-question-circle helpButtonIcon\"/>\n                        </button>\n                        {this.state.stop &&\n                            <div className=\"nav-item dropdown  videoIconContainer\"\n                                 style={{display: \"inline-block\", paddingRight: \"30px\"}}>\n                                <button className=\"nav-link  videoIconButton\" data-toggle=\"dropdown\"\n                                        aria-haspopup=\"true\" id=\"navbarDropdownMenuLink\" aria-expanded=\"false\">\n                                    <span className=\"tooltipText\">Yardimci Videolar</span>\n                                    <i className=\"fab fa-youtube videoIcon\"/>\n                                </button>\n                                <div className=\"dropdown-menu dropdown-menu-right\" id=\"showVideos\"\n                                     aria-labelledby=\"videosLink\">\n                                    {\n                                        this.videos.map((video, i) =>\n                                            <a key={i} className=\"dropdown-item\"\n                                               onClick={() => this.switchVideo(video)}>{video.title}</a>)\n                                    }\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </NavBarKS>\n            </Nav>\n            <CardHeader style={{marginTop: \"56px\"}}>\n                {!this.state.completionLoading &&\n                    <CardTitle tag=\"h4\">\n                        Form İşlemi (Düzenle)\n                    </CardTitle>}\n                {this.ifNoTemplate() && <div className=\"card-header\">\n                    <Label>Şablondan bağımsız form gönderimi yapmak için, çalışanlar adına hazırlanan formları doküman\n                        ekleme\n                        alanından yüklemeniz gerekmektedir.\n                        Şablondan bağımsız form gönderiminde parametre eşleştirilmesi yapılmamaktadır. Eğer her çalışana\n                        ayrı bir\n                        form göndermek istiyorsanız,\n                        bu formları içlerine tckn barındıracak şekilde ayrı sayfalar halinde hazırlamanız\n                        beklenmektedir. Bu durumda\n                        hazırladığınız dokümanı,\n                        doküman ekleme alanından yükleyiniz ve \"Çalışanla Eşleştir\" seçimini seçiniz.\n                    </Label>\n                </div>}\n                {this.state.completionLoading &&\n                    <Col><CardTitle tag=\"h4\">\n                        Form İşlemi (Düzenle)...YÜKLENİYOR&nbsp;\n                    </CardTitle>\n                        <div style={{display: \"inline-block\", marginRight: \"8px\"}}>\n                            <ReactLoading type=\"balls\" color=\"#2c2c2c\" height={24} width={24}/>\n                        </div>\n                    </Col>}\n            </CardHeader>\n            {!this.ifNoTemplate() &&\n                <CardBody>\n                    <Row style={{margin: '0 0 0 0'}}>\n                        <div className={\"FormRenk\"} style={{paddingLeft: '0px', textAlign: 'center', right: '2px'}}>\n                            {this.renderFormTemplateInfo()}\n                        </div>\n                    </Row>\n                </CardBody>}\n            <CardBody>\n                <Row style={{margin: '0 0 0 0'}}>\n                    <div className={this.props.location.templateId === -1 ? \"col-sm-6\" : \"col-sm-6 formsend-preview\"}\n                         style={{\n                             paddingLeft: '0px',\n                             textAlign: 'center',\n                             height: '750px',\n                             overflow: 'auto',\n                             border: '2px solid #e7e7e7',\n                             borderRadius: '6px'\n                         }}>\n                        {!this.ifNoTemplate() && this.renderPreview()}\n                        {this.ifNoTemplate() && this.renderFormTemplateInfo()}\n                    </div>\n                    <div className=\"col-sm-6\" style={{paddingLeft: '5px', textAlign: 'center'}}>\n                        {\n                            this.state.extInputLabelList && this.state.extInputLabelList.length > 0 &&\n                            <div className=\"FormRenk col-sm-12\">\n                                {this.renderFormInputInfo()}\n                            </div>\n                        }\n                        {!(this.ifNoTemplate() && !!this.state.mergeToEmployee && !this.state.selectEmpManually.value) &&\n                            <div className=\"FormRenk col-sm-12\">\n                                {this.renderEmployeeListInfo()}\n                            </div>}\n                    </div>\n                </Row>\n            </CardBody>\n            {this.state.showModal &&\n                <AddEmployeeModal\n                    isOpen={this.state.showModal}\n                    selectedList={this.state.formEmployeeList}\n                    sidebarMenus={this.props.sidebarMenus}\n                    reload={e => this.props.reload(e)}\n                    close={() => this.setState({showModal: false})}\n                    conditionalList={this.state.conditionalList}\n                    declineList={this.state.declineList}\n                    completed={(formEmployeeList, conditionalList, declineList) =>\n                        this.setState({formEmployeeList, conditionalList, declineList, manual: true, showModal: false})}\n                    removeEmployee={() => this.removeEmployee}\n                    noTemplate={this.state.isTemplate}\n                    decline={this.state.isDecline}\n\n                />}\n\n            {this.state.showUploadModal &&\n                <UploadFormFileModal\n                    id={this.state.formTemplateId} title={\"Doküman Ekle\"} sablonsuzRows={this.state.sablonsuzRows}\n                    onUpload={e => this.uploadAttachment(e)} modal={this.state.showUploadModal}\n                    toggleModal={(flag, manual) => this.setState({showUploadModal: flag, manual: manual})}/>}\n        </div>\n    }\n\n    renderPreview = () => {\n        this.downloadPreview();\n        if (this.state.preview) {\n            return (\n                <PdfViewer\n                    url={this.state.preview}\n                    scale={0.7}\n                />\n            );\n        } else {\n            return (<div>Yükleniyor...</div>)\n        }\n    };\n\n    downloadPreview = () => {\n        let self = this;\n        let formTemplate = Object.assign({}, self.state.formTemplate);\n        if (self.state.selectedAntet === undefined) {\n            formTemplate.antetId = -1;\n        } else {\n            formTemplate.antetId = self.state.selectedAntet.value;\n        }\n        let originalContent;\n        if (formTemplate.formContent) {\n            originalContent = formTemplate.formContent;\n            let encoded = new TextEncoder().encode(formTemplate.formContent);\n            let chunkSize = 1024;\n            let binaryString = \"\";\n            for (let i = 0; i < encoded.length; i += chunkSize) {\n                binaryString += String.fromCharCode.apply(null, encoded.slice(i, i + chunkSize));\n            }\n            formTemplate.formContent = btoa(binaryString);\n        }\n\n        if (!self.state.preview && formTemplate && formTemplate.id) {\n            requestK({\n                url: `/formtemplate/previewTemplateContent`,\n                responseType: 'arraybuffer',\n                method: \"post\",\n                data: formTemplate\n            }).then(function (response) {\n                let blob = new Blob([response.data], {type: response.headers[\"content-type\"]});\n                let urlCreator = window.URL || window.webkitURL;\n                let preview = urlCreator.createObjectURL(blob);\n                self.setState({preview});\n            }).catch(function (error) {\n                showAxiosError(error);\n            }).finally(function () {\n                if (originalContent !== undefined) {\n                    formTemplate.formContent = originalContent;\n                }\n            });\n        }\n    };\n\n    isValid = () => {\n        return !(\n            (this.state.extInputLabelList &&\n                this.state.extInputLabelList.length > 0 &&\n                this.state.formParamList &&\n                Object.keys(this.state.formParamList).length !== this.state.extInputLabelList.length\n            )\n            || Object.keys(this.state.formEmployeeList).length === 0);\n    }\n\n    isValidEmployee = () => {\n        return !(Object.keys(this.state.formEmployeeList).length === 0);\n    }\n    isNoTemplateValid1 = () => {\n        if (!this.state.mimeTitle) {\n            Alert.info(\"E-Posta İleti Konusu alanı boş bırakılamaz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        } else if (!this.state.mimeBody) {\n            Alert.info(\"E-Posta İleti İçeriği alanı boş bırakılamaz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        }else{\n            return true;\n        }\n    }\n    isNoTemplateValid = () => {\n        if (!this.state.isAttachmentLoaded) {\n            Alert.info(\"Gönderilecek form dokümanını yüklemeniz gerekmektedir.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        } else {\n            const myTable = document.getElementById(\"sablonsuzTable\").rows;\n            for (let i = 0; i < myTable.length; i++) {\n                if (myTable[i].cells[1].getElementsByTagName('textarea')[0].value === \"\") {\n                    Alert.info(\"Form Adı alanı boş bırakılamaz.\", {\n                        position: 'top-right',\n                        effect: 'stackslide',\n                        timeout: 5000\n                    });\n                    return false;\n                }\n            }\n        }\n        if (!this.state.mimeTitle) {\n            Alert.info(\"E-Posta İleti Konusu alanı boş bırakılamaz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        } else if (!this.state.mimeBody) {\n            Alert.info(\"E-Posta İleti İçeriği alanı boş bırakılamaz.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        } else if (!this.state.mergeToEmployee && (!this.state.formEmployeeList || this.state.formEmployeeList.length === 0) && !this.draftButtonClicked) {\n            Alert.info(\"Çalışan seçimi yapılmalıdır.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        } else if (this.state.selectEmpManually.label === \"Listeden Seç\" && this.state.mergeToEmployee && this.state.formEmployeeList.length === 0 && !this.draftButtonClicked){\n            Alert.info(\"Çalışan seçimi yapılmalıdır.\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        }else if(this.state.formEmployeeList.length > 0  && this.draftButtonClicked){\n            Alert.info(\"Çalışan seçimi taslak kaydetme veya güncelleme işleminde yapılamaz\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        } else if(this.state.mergeToEmployee && this.draftButtonClicked){\n            Alert.info(\"Çalışan eşleştirmesi taslak kaydetme veya güncelleme işleminde yapılamaz\", {\n                position: 'top-right',\n                effect: 'stackslide',\n                timeout: 5000\n            });\n            return false;\n        }\n        return true;\n    }\n\n}\n\nexport default FormSessionEditPage;"],"sourceRoot":""}